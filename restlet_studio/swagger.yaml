{
  "swagger" : "2.0",
  "info" : {
    "description" : "In order to use the Trucker Search API please first contact us to get an API Token. This token needs to be sent as a HTTP header argument in every request to our API.\n\napi-token=“SECRET KEY”\n\nPlease keep your api-token a secret. If the token is compromised please contact us to get a new one.\n\nThis api token authenticates your application and gives it access to the API.\n\nThe API token should not be confused with the end-user-token. That token is given to you via the end_user_authentications endpoint when the user logs in. This token is needed in order to use certain features, and get certain sensitive information.\n\nBoth Tokens are stateless, and delivered via the HTTP headers.",
    "version" : "1.0",
    "title" : "Trucker Search API",
    "contact" : {
      "email" : "support@truckersearch.com"
    }
  },
  "host" : "www.truckersearch.com",
  "basePath" : "/v1",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "security" : [ {
    "api_key" : [ ]
  } ],
  "paths" : {
    "/alerts" : {
      "get" : {
        "tags" : [ "alerts" ],
        "summary" : "STAGE=UNK Get a list of alerts.",
        "description" : "Get a list of alerts. You can optionally limit the list by specifying alerts by their alert_id.",
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "alert_id",
          "in" : "query",
          "description" : "only get a subset of alerts. As this is a get request this is specified as a query string parameter",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "search_type",
          "in" : "query",
          "description" : "Currently only resume type is supported.",
          "required" : true,
          "type" : "string",
          "enum" : [ "resume", "job" ]
        }, {
          "name" : "notification_medium",
          "in" : "query",
          "description" : "Chooses the medium to send the alert through. Push is not yet implemented.",
          "required" : true,
          "type" : "string",
          "enum" : [ "email", "text", "push" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "alerts" ],
        "summary" : "STAGE=UNK Create a new alert.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/alert_request_object"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Object created check the headers for a reference URL.",
            "schema" : {
              "$ref" : "#/definitions/create_status"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "alerts" ],
        "summary" : "STAGE=UNK Delete an alert.",
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "alert_id",
          "in" : "query",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "x-restlet" : {
        "section" : "ALERTS"
      }
    },
    "/end_user_authentications" : {
      "get" : {
        "tags" : [ "end_user_authentications" ],
        "summary" : "Get a users status.",
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_1"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "end_user_authentications" ],
        "summary" : "Log in.",
        "consumes" : [ ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Status 201",
            "schema" : {
              "$ref" : "#/definitions/error_object"
            }
          },
          "422" : {
            "description" : "Status 422",
            "schema" : {
              "$ref" : "#/definitions/inline_response_422"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "end_user_authentications" ],
        "summary" : "Log out.",
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "x-restlet" : {
        "section" : "END_USER_AUTHENTICATIONS"
      }
    },
    "/end_user_authentications/passwords" : {
      "get" : {
        "tags" : [ "end_user_authentications" ],
        "summary" : "STAGE=UNK Forgot password",
        "parameters" : [ {
          "name" : "email_address",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "This will return successful even if we do not have the e-mail address in our records."
          }
        }
      },
      "patch" : {
        "tags" : [ "end_user_authentications" ],
        "summary" : "Update Password",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_1"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "x-restlet" : {
        "section" : "END_USER_AUTHENTICATIONS"
      }
    },
    "/end_user_authentications/email" : {
      "patch" : {
        "tags" : [ "end_user_authentications" ],
        "summary" : "Update Email",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_2"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "x-restlet" : {
        "section" : "END_USER_AUTHENTICATIONS"
      }
    },
    "/end_user_authentications/users" : {
      "post" : {
        "tags" : [ "end_user_authentications" ],
        "summary" : "Create user",
        "description" : "Create a new user",
        "consumes" : [ ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_3"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Status 201",
            "schema" : {
              "$ref" : "#/definitions/inline_response_201"
            }
          }
        }
      },
      "x-restlet" : {
        "section" : "END_USER_AUTHENTICATIONS"
      }
    },
    "/end_user_authentications/social_login" : {
      "post" : {
        "tags" : [ "end_user_authentications" ],
        "summary" : "STAGE=Private Social Login/Create Account",
        "description" : "Logs in or creates a new account for the user based on their email. \"new_account\" is what indicates if a new account was created, or if an existing account was used to login.",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/social_login_credentials"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/social-login-end-user-token"
            }
          },
          "422" : {
            "description" : "Unprocessable Entity. More information provided in the return object.",
            "schema" : {
              "$ref" : "#/definitions/error_object"
            }
          }
        }
      },
      "x-restlet" : {
        "section" : "END_USER_AUTHENTICATIONS"
      }
    },
    "/favorites" : {
      "get" : {
        "tags" : [ "favorites" ],
        "summary" : "STAGE=UNK Get the favorites.",
        "parameters" : [ {
          "name" : "favorite_type",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "resume",
          "enum" : [ "resume", "job" ]
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/get_favorite_ids"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "favorites" ],
        "summary" : "STAGE=UNK Add a favorite",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_4"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Status 201"
          }
        }
      },
      "delete" : {
        "tags" : [ "favorites" ],
        "summary" : "STAGE=UNK Remove  a favorite.",
        "parameters" : [ {
          "name" : "favorite_type",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "enum" : [ "job", "resume" ]
        }, {
          "name" : "favorite_id",
          "in" : "query",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "x-restlet" : {
        "section" : "FAVORITES"
      }
    },
    "/favorites/count" : {
      "get" : {
        "tags" : [ "favorites" ],
        "summary" : "STAGE=UNK Get a count of favorites",
        "parameters" : [ {
          "name" : "favorite_type",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "enum" : [ "resume", "job" ]
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_2"
            }
          }
        }
      },
      "x-restlet" : {
        "section" : "FAVORITES"
      }
    },
    "/jobs" : {
      "get" : {
        "tags" : [ "jobs" ],
        "summary" : "STAGE=UNK Get logged in user's job ads.",
        "description" : "Get a list of the logged in users jobs.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "query",
          "description" : "Optionally just return a few jobs.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/job_list_user"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "jobs" ],
        "summary" : "STAGE=UNK Post a new job ad.",
        "description" : "Create a new Job ad for the currently logged in user.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/job_data"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Status 201",
            "headers" : {
              "url" : {
                "type" : "string",
                "description" : "A url pointing to the newly created resource.",
                "x-example" : ".../jobs/?id=1234"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "jobs" ],
        "summary" : "STAGE=UNK Delete the users job ad.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "query",
          "description" : "You can only delete 1 job at a time, and only if that Job is both not active, and does not have any days left.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "patch" : {
        "tags" : [ "jobs" ],
        "summary" : "STAGE=UNK Update a Job ad.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/job_data_patch"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "x-restlet" : {
        "section" : "JOBS"
      }
    },
    "/jobs/boards" : {
      "get" : {
        "tags" : [ "jobs" ],
        "summary" : "Get a list of jobs",
        "description" : "Gets a list of other people's jobs.",
        "parameters" : [ {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dispatch_24x7",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "all_miles_paid",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "company_fuel_card",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "dental_insurance",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "detention_layover_pay",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "direct_deposit",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "equipment_age",
          "in" : "query",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "free_roadside_assistance",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "health_insurance",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "home",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "daily", "weekly", "biweekly", "monthly", "other" ]
        }, {
          "name" : "lease_purchase_available",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "life_insurance",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "no_touch_freight",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "paid",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "weekly", "biweekly", "monthly", "other" ]
        }, {
          "name" : "paid_holidays",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "paid_sick_time",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "paid_vacation",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "pet_friendly",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "referral_bonuses",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "rider_program",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "round_trip_loads",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "safety_bonus",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "sign_on_bonus",
          "in" : "query",
          "required" : false,
          "type" : "number",
          "format" : "float"
        }, {
          "name" : "distance_preference",
          "in" : "query",
          "description" : "If specified it will return either only local jobs, or only OTR jobs.",
          "required" : false,
          "type" : "string",
          "enum" : [ "local", "OTR" ]
        }, {
          "name" : "region",
          "in" : "query",
          "description" : "This is a list of possible regions. This matches the regions from searching and posting a job ad on our website. I am adding it to the API with the assumption that we can expand our resume regions to match. This should aviod some confusion and weirdness. An example would be alert options. ",
          "required" : false,
          "type" : "string",
          "enum" : [ "east coast", "west coast", "mid west", "nationwide", "north east", "north west", "south east", "south west", "local" ]
        }, {
          "name" : "job_id",
          "in" : "query",
          "description" : "This will return just 1 job.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "page_number",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "item_count",
          "in" : "query",
          "description" : "Results per page.",
          "required" : false,
          "type" : "integer",
          "default" : 50,
          "maximum" : 100,
          "minimum" : 1
        }, {
          "name" : "team_preference",
          "in" : "query",
          "description" : "Only return a team or a single driver",
          "required" : false,
          "type" : "string",
          "enum" : [ "single", "team" ]
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "returns a list of jobs.",
            "schema" : {
              "$ref" : "#/definitions/job_list"
            }
          }
        }
      },
      "x-restlet" : {
        "section" : "JOBS"
      }
    },
    "/jobs/status" : {
      "get" : {
        "tags" : [ "jobs_status" ],
        "summary" : "STAGE=UNK Get the status of a job ad.",
        "description" : "This method will return back enough information to determine if a job ad is runnig, and when it will stop.",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "query",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_3"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "jobs_status" ],
        "summary" : "STAGE=UNK Activate a job ad.",
        "description" : "This method will only work if the add has days left of > 0, otherwise in theory it should return a url to a chargebee payment portal. ",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_5"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Status 201",
            "headers" : {
              "url" : {
                "type" : "string",
                "description" : "The board location of the active job ad."
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "jobs_status" ],
        "summary" : "STAGE=UNK Decativate a Job ad",
        "parameters" : [ {
          "name" : "job_id",
          "in" : "query",
          "description" : "The job ad to deactivate.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "end-user-auth",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "x-restlet" : {
        "section" : "JOBS"
      }
    },
    "/messages" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Get a conversation.",
        "description" : "This is the method that pulls down a conversation. Eeach user can only  only have one conversation per contact. \n Hidden messages are returned along with the  normal sent & read messages. This gives you the API developer the option to show  them if requested by the user, as well as updating individual messages. Hidden messages  ignore the mark_as_read flag. \n  Internally we have other statuses like pending, and rejected, but public users  of our API don't have access to them.",
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "query",
          "description" : "Who the conversation is with.",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "mark_as_read",
          "in" : "query",
          "description" : "This will mark all messages in the conversation as read for the logged in user.",
          "required" : false,
          "type" : "string",
          "default" : "yes",
          "enum" : [ "yes", "no" ]
        }, {
          "name" : "newest_message_only",
          "in" : "query",
          "description" : "This gets the latest new message from the specified contact. It will return an empty list if there are no new messages.",
          "required" : false,
          "type" : "string",
          "default" : "no",
          "enum" : [ "yes", "no" ]
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/conversation_list"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "messages" ],
        "summary" : "Send a message",
        "description" : "This will send a message to any other user. Currently there are no blocks or set restrictions if an API user just started guessing. In order to get a contact_id a contact user would need to pull that info from a resume, or a job ad.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_6"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Status 202",
            "schema" : {
              "$ref" : "#/definitions/conversation_list"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "messages" ],
        "summary" : "Alter a message status",
        "description" : "¨",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_7"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Status 202",
            "schema" : {
              "$ref" : "#/definitions/conversation_list"
            }
          }
        }
      },
      "x-restlet" : {
        "section" : "MESSAGES"
      }
    },
    "/messages/contacts" : {
      "get" : {
        "tags" : [ "messages_contacts" ],
        "summary" : "Get a list of contacts for that folder.",
        "description" : "This method provides the information nedeed to display all the contacts within a folder.",
        "parameters" : [ {
          "name" : "folder_id",
          "in" : "query",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_4"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "messages_contacts" ],
        "summary" : "Move a contact from one folder to another or block the contact.",
        "description" : "By default all new contacts are able to send messages to the user. By blocking a contact, all future messages from the contact will be marked as user_block.\n  Also by design, users are unable to \"delete\" contacts, but this action will be  simulated using this endpoint. In order to hide the conversation move it to the Trash folder.\n",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_8"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "x-restlet" : {
        "section" : "MESSAGES"
      }
    },
    "/messages/count" : {
      "get" : {
        "tags" : [ "messages" ],
        "summary" : "Returns how many unread messages the user has.",
        "description" : "This is a coneniene method provided for pages like the driver/recruiter dasboard. The same information could be obtained by getting the folder list, and adding the new count. \n\nIt can also be used to update individual contacts new count. An example of this is the page automatically checking for new messages every once in a while, on a per user basis. ",
        "parameters" : [ {
          "name" : "contact_id",
          "in" : "query",
          "description" : "Just return a count of new messages from one contact.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_2"
            }
          }
        }
      },
      "x-restlet" : {
        "section" : "MESSAGES"
      }
    },
    "/messages/folders" : {
      "get" : {
        "tags" : [ "messages_folders" ],
        "summary" : "Get a list of folders",
        "description" : "This returns a list of all folders for this user, along with how many unread messages each folder contains. I belive the website's behavior is 0 or 1 per contact, but it could be 1 per total messages. ",
        "parameters" : [ {
          "name" : "folder_id",
          "in" : "query",
          "description" : "Just get a few folders. This takes the place of a specific new count function.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer"
          },
          "collectionFormat" : "multi",
          "x-example" : "?folder_id=2334&folder_id=3324"
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_5"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "messages_folders" ],
        "summary" : "Add a folder",
        "description" : "This method allows a user to add custom folders. These folders must have unique names.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_9"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Status 201",
            "schema" : {
              "$ref" : "#/definitions/inline_response_201_1"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "messages_folders" ],
        "summary" : "Remove a custom folder.",
        "description" : "Active, Pending, Trash, and Deleted are special folders, and this command will ignore them.",
        "parameters" : [ {
          "name" : "folder_id",
          "in" : "query",
          "description" : "Deletes one folder at a time.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "x-restlet" : {
        "section" : "MESSAGES"
      }
    },
    "/mobile_updates" : {
      "get" : {
        "tags" : [ "mobile update" ],
        "summary" : "Get any available update information.",
        "parameters" : [ {
          "name" : "email_address",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_6"
            }
          }
        }
      },
      "x-restlet" : {
        "section" : "Mobile Update"
      }
    },
    "/optins" : {
      "get" : {
        "summary" : "STAGE=UNKNOWN Get the optin status of a user.",
        "parameters" : [ {
          "name" : "notification_medium",
          "in" : "query",
          "description" : "To limit your list to just one medium.",
          "required" : false,
          "type" : "string",
          "enum" : [ "email", "text", "push" ]
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_7"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "optins" ],
        "summary" : "STAGE=UNKNOWN Submit a request to be opted in.",
        "description" : "Currently only Push notifications are implemented. With them a post creates and approves the optin. Later on when text/email is ported post will create the optin with the status of 'no response' meaning they haven't replied with the propper code, or clicked an authorization link.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_10"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Status 201"
          }
        }
      },
      "delete" : {
        "summary" : "STAGE=UNK Opt someone out of one or more mediums and channels.",
        "description" : "By only sending in their EUA token you would be requesting to opt them out of everything.",
        "parameters" : [ {
          "name" : "notification_medium",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "email", "text", "push" ]
        }, {
          "name" : "notification_channel",
          "in" : "query",
          "description" : "This would allow granular optouts. Currently ignored.",
          "required" : false,
          "type" : "string",
          "default" : "all",
          "enum" : [ "all", "alerts" ]
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "patch" : {
        "summary" : "STAGE=UNK Confirm an optin.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/body_11"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "x-restlet" : {
        "section" : "Optins"
      }
    },
    "/profiles" : {
      "get" : {
        "tags" : [ "profiles" ],
        "summary" : "STAGE=UNK Get their profile",
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/profile_response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "profiles" ],
        "summary" : "STAGE=UNK Create a profile",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/profile_request"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Status 201",
            "headers" : {
              "url" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "profiles" ],
        "summary" : "STAGE=UNK Update a profile.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/profile_request"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/profile_patch_response"
            }
          }
        }
      },
      "x-restlet" : {
        "section" : "PROFILES"
      }
    },
    "/resumes" : {
      "get" : {
        "tags" : [ "resumes" ],
        "summary" : "Get the user's resume.",
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/resume_data_optional"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "resumes" ],
        "summary" : "Submit the user's resume.",
        "description" : "You must send in at least one valid request parameter in the body. It doesn't matter which one, but at least one.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/resume_data_optional"
          },
          "x-examples" : {
            "application/json" : "{\n  \"experience\": {\n    \"current_employer\": \"Jim Swift's Logistics\"\n  }\n}"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Object created",
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "Link to the newly created resume."
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "resumes" ],
        "summary" : "Delete the user's resume",
        "description" : "No extra information is needed because we only allow one resume per account.",
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Status 204"
          }
        }
      },
      "patch" : {
        "tags" : [ "resumes" ],
        "summary" : "Update the user's resume.",
        "description" : "Each user only has 1 resume. Setting any field to null will set it to a null or for a number 0.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "end-user-token",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/resume_data_optional"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        }
      },
      "x-restlet" : {
        "section" : "RESUMES"
      }
    },
    "/resumes/boards" : {
      "get" : {
        "tags" : [ "resumes" ],
        "summary" : "STAGE=UNK Get a list of Resumes",
        "description" : "Behind the scenes a resume goes through an appoval process before it will show up on a board. This could be a few seconds, or a few days. The resume poster can always se their resume, but until it is approved the resume won't be displayed on the board.",
        "parameters" : [ {
          "name" : "resume_id",
          "in" : "query",
          "description" : "If included all other options will be ignored, and a list of 1 resume will be returned. Also the full contact information will be returned with this single resume.",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "A list of state codes.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "minLength" : 2,
            "maxLength" : 2
          },
          "collectionFormat" : "multi",
          "x-example" : "?state=\"MO,AR,IL,KY\""
        }, {
          "name" : "city",
          "in" : "query",
          "description" : "If this option is included we will use the first state in the array.",
          "required" : false,
          "type" : "string",
          "maxLength" : 20
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "Will be set if city is.",
          "required" : false,
          "type" : "integer",
          "default" : 30,
          "maximum" : 300,
          "minimum" : 1
        }, {
          "name" : "position",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "other", "student", "company driver", "owner operator" ]
        }, {
          "name" : "trailer_experience",
          "in" : "query",
          "description" : "You can have up to an additional 4 custom trailers of a length of 6 or less each.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "V", "R", "F", "AC", "HOP", "TANK", "S" ]
          },
          "collectionFormat" : "multi",
          "maxItems" : 6,
          "minItems" : 1
        }, {
          "name" : "region_preference",
          "in" : "query",
          "description" : "This is a list of possible regions. This matches the regions from searching and posting a job ad on our website. I am adding it to the API with the assumption that we can expand our resume regions to match. This should aviod some confusion and weirdness. An example would be alert options. ",
          "required" : false,
          "type" : "string",
          "enum" : [ "east coast", "west coast", "midwest", "nationwide", "north east", "north west", "south east", "south west", "local" ]
        }, {
          "name" : "team_preference",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "team", "single" ]
        }, {
          "name" : "distance_preference",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "local", "OTR" ]
        }, {
          "name" : "total_years_experience",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "minimum" : 0
        }, {
          "name" : "license_type",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "none", "A", "B", "1", "2", "3" ]
        }, {
          "name" : "page_number",
          "in" : "query",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "list_order",
          "in" : "query",
          "description" : "You can sort on any field in the return object.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "list_direction",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "-asc", "-desc" ]
        }, {
          "name" : "item_count",
          "in" : "query",
          "description" : "Results per page.",
          "required" : false,
          "type" : "integer",
          "maximum" : 100,
          "minimum" : 1
        }, {
          "name" : "end-user-token",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_8"
            }
          }
        }
      },
      "x-restlet" : {
        "section" : "RESUMES"
      }
    },
    "/resumes/exists" : {
      "get" : {
        "tags" : [ "resumes" ],
        "summary" : "Returns status of a users resume",
        "description" : "Returns the status of a users resume:\nNOT-FOUND : No resume has been created\nDELETED : There was a resume but the user deleted it\nUPDATED : Pending approval\nAPPROVED : Available in search results",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/inline_response_200_9"
            }
          }
        }
      },
      "x-restlet" : {
        "section" : "RESUMES"
      }
    }
  },
  "securityDefinitions" : {
    "api_key" : {
      "description" : "This token needs to be sent as a HTTP header argument in every request to our API.",
      "type" : "apiKey",
      "name" : "api-token",
      "in" : "header"
    }
  },
  "definitions" : {
    "social_login_credentials" : {
      "type" : "object",
      "required" : [ "service", "token" ],
      "properties" : {
        "token" : {
          "type" : "string",
          "description" : " The token returned by the social login service. For Google the value expected is : data.code For Facebook the value expected is : data.authResponse.accessToken For Apple the value expected is : data.detail.authorization.id_token"
        },
        "service" : {
          "type" : "string",
          "description" : "Takes a social login service name,",
          "enum" : [ "google", "facebook", "facebook-code", "apple" ]
        },
        "create_missing_account" : {
          "type" : "boolean",
          "description" : "If true the endpoint will create the users account in case it doesnt already exist.",
          "default" : false
        }
      },
      "x-restlet" : {
        "section" : "END_USER_AUTHENTICATIONS"
      }
    },
    "alert_request_object" : {
      "type" : "object",
      "required" : [ "notification_medium", "only_new", "search_parameters", "send_frequency" ],
      "properties" : {
        "search_type" : {
          "type" : "string",
          "default" : "resume",
          "enum" : [ "job", "resume" ]
        },
        "notification_medium" : {
          "type" : "string",
          "description" : "Push is not yet implemented.",
          "enum" : [ "email", "text", "push" ]
        },
        "only_new" : {
          "type" : "boolean",
          "description" : "Whether to send both new and updated resumes, or just new resumes."
        },
        "search_parameters" : {
          "$ref" : "#/definitions/resume_search"
        },
        "send_frequency" : {
          "type" : "integer",
          "description" : "Frequency in minutes that the alert is sent. We stop sending alerts between 12am and 3am CST."
        }
      },
      "x-restlet" : {
        "section" : "ALERTS"
      }
    },
    "alert_response_object" : {
      "type" : "object",
      "required" : [ "alert_id", "last_sent", "notification_medium", "only_new", "search_parameters", "send_frequency" ],
      "properties" : {
        "alert_id" : {
          "type" : "integer"
        },
        "last_sent" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Last time the alert was sent."
        },
        "notification_medium" : {
          "type" : "string",
          "enum" : [ "email", "text", "push" ]
        },
        "only_new" : {
          "type" : "boolean",
          "description" : "Whether to send both new and updated resumes, or just new resumes."
        },
        "search_parameters" : {
          "$ref" : "#/definitions/resume_search"
        },
        "send_frequency" : {
          "type" : "integer",
          "description" : "Frequency in minutes that the alert is sent."
        }
      },
      "x-restlet" : {
        "section" : "ALERTS"
      }
    },
    "resume_search" : {
      "type" : "object",
      "required" : [ "state" ],
      "properties" : {
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "AA", "AE", "AK", "AL", "AP", "AR", "AS", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "FM", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MH", "MI", "MN", "MO", "MP", "MS", "MT", "MX", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "PR", "PW", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY", "AB", "BC", "MB", "NB", "NL", "NS", "NT", "NU", "ON", "PE", "QC", "SK", "YT", "USA", "CAN" ]
          }
        },
        "radius" : {
          "type" : "integer"
        },
        "region" : {
          "type" : "string",
          "enum" : [ "east coast", "west coast", "mid west", "nation wide", "noth east", "north west", "south east", "south west", "local" ]
        },
        "driver_type" : {
          "type" : "string",
          "enum" : [ "other", "student", "company", "owner/operator" ]
        },
        "trailer_experience" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "V", "R", "F", "AC", "HOP", "TANK", "S" ]
          }
        },
        "team_preference" : {
          "type" : "string",
          "enum" : [ "single", "team" ]
        },
        "license_type" : {
          "type" : "string",
          "enum" : [ "A", "B", "1", "2", "3", "none" ]
        },
        "driver_experience" : {
          "type" : "integer"
        },
        "driver_distance" : {
          "type" : "string",
          "enum" : [ "local", "OTR" ]
        },
        "list_order" : {
          "type" : "string",
          "description" : "Any of the results columns for a search are also valid for list_order"
        },
        "list_direction" : {
          "type" : "string",
          "enum" : [ "desc", "asc" ]
        }
      }
    },
    "error_object" : {
      "type" : "object",
      "required" : [ "code", "description", "error" ],
      "properties" : {
        "code" : {
          "type" : "integer"
        },
        "description" : {
          "type" : "string"
        },
        "error" : {
          "type" : "string"
        }
      },
      "example" : "{\n  \"code\": 1,\n  \"error\": \"Generic Validation\",\n  \"description\": \"The e-mail address must be valid.\"\n}",
      "x-restlet" : {
        "section" : "common_definitions"
      }
    },
    "job_data_patch" : {
      "type" : "object",
      "required" : [ "job_id" ],
      "properties" : {
        "contact" : {
          "$ref" : "#/definitions/job_data_patch_contact"
        },
        "job_id" : {
          "type" : "integer",
          "description" : "The Job ad to patch."
        },
        "position" : {
          "$ref" : "#/definitions/job_data_patch_position"
        },
        "perks" : {
          "$ref" : "#/definitions/job_data_patch_perks"
        }
      },
      "x-restlet" : {
        "section" : "JOBS"
      }
    },
    "social-login-end-user-token" : {
      "type" : "object",
      "properties" : {
        "end-user-token" : {
          "type" : "string",
          "example" : "XX423ASOEUHT4AESUTH",
          "description" : "On success and end-user-token is returned."
        },
        "email" : {
          "type" : "string",
          "example" : "example@directfreight.com",
          "description" : "The email address that was used to login."
        },
        "new_account" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Indicates if a new account was created or an existing one was used to login."
        }
      },
      "x-restlet" : {
        "section" : "END_USER_AUTHENTICATIONS"
      }
    },
    "job_data" : {
      "type" : "object",
      "required" : [ "contact" ],
      "properties" : {
        "contact" : {
          "$ref" : "#/definitions/job_data_contact"
        },
        "position" : {
          "$ref" : "#/definitions/job_data_position"
        },
        "perks" : {
          "$ref" : "#/definitions/job_data_patch_perks"
        }
      },
      "x-restlet" : {
        "section" : "JOBS"
      }
    },
    "job_list_user" : {
      "type" : "object",
      "required" : [ "list", "page_number", "total_items", "total_pages" ],
      "properties" : {
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/job_list_user_list"
          }
        },
        "page_number" : {
          "type" : "integer"
        },
        "total_items" : {
          "type" : "integer"
        },
        "total_pages" : {
          "type" : "integer"
        }
      },
      "x-restlet" : {
        "section" : "JOBS"
      }
    },
    "job_list" : {
      "type" : "object",
      "required" : [ "display_columns", "list", "page_number", "total_items", "total_pages" ],
      "properties" : {
        "display_columns" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "",
            "description" : "list of columns and order to be given display preference."
          }
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/job_list_list"
          }
        },
        "page_number" : {
          "type" : "integer"
        },
        "total_items" : {
          "type" : "integer"
        },
        "total_pages" : {
          "type" : "integer"
        }
      },
      "x-restlet" : {
        "section" : "JOBS"
      }
    },
    "conversation_list" : {
      "type" : "object",
      "required" : [ "list" ],
      "properties" : {
        "list" : {
          "type" : "array",
          "description" : "conversation in chronological order",
          "items" : {
            "$ref" : "#/definitions/conversation_list_list"
          }
        }
      },
      "x-restlet" : {
        "section" : "MESSAGES"
      }
    },
    "profile_patch_response" : {
      "type" : "object",
      "required" : [ "address", "city", "company", "contact_extension", "contact_number", "fax_number", "first_name", "last_name", "mobile_carrier", "mobile_number", "state", "web_page", "zip" ],
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "company" : {
          "type" : "string"
        },
        "contact_extension" : {
          "type" : "integer",
          "description" : "Limited to 3 digits."
        },
        "contact_number" : {
          "type" : "integer"
        },
        "fax_number" : {
          "type" : "integer"
        },
        "first_name" : {
          "type" : "string"
        },
        "last_name" : {
          "type" : "string"
        },
        "mobile_carrier" : {
          "$ref" : "#/definitions/mobile_carriers"
        },
        "mobile_number" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "web_page" : {
          "type" : "string"
        },
        "zip" : {
          "type" : "string"
        }
      },
      "x-restlet" : {
        "section" : "PROFILES"
      }
    },
    "profile_request" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string",
          "maxLength" : 50
        },
        "city" : {
          "type" : "string",
          "maxLength" : 30
        },
        "company" : {
          "type" : "string",
          "maxLength" : 50
        },
        "contact_extension" : {
          "type" : "integer",
          "description" : "Limited to 3 digits."
        },
        "contact_number" : {
          "type" : "integer"
        },
        "fax_number" : {
          "type" : "integer"
        },
        "first_name" : {
          "type" : "string",
          "maxLength" : 50
        },
        "last_name" : {
          "type" : "string",
          "maxLength" : 50
        },
        "mobile_carrier" : {
          "$ref" : "#/definitions/mobile_carriers"
        },
        "mobile_number" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string",
          "description" : "Please use an Abbreviation not a full name.",
          "maxLength" : 3
        },
        "web_page" : {
          "type" : "string",
          "maxLength" : 120
        },
        "zip" : {
          "type" : "string"
        }
      },
      "x-restlet" : {
        "section" : "PROFILES"
      }
    },
    "profile_response" : {
      "type" : "object",
      "required" : [ "address", "city", "company", "contact_extension", "contact_number", "fax_number", "first_name", "id", "last_name", "mobile_carrier", "mobile_number", "state", "web_page", "zip" ],
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "company" : {
          "type" : "string"
        },
        "contact_extension" : {
          "type" : "integer",
          "description" : "Limited to 3 digits."
        },
        "contact_number" : {
          "type" : "integer"
        },
        "fax_number" : {
          "type" : "integer"
        },
        "first_name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "description" : "This is their ID in messages."
        },
        "last_name" : {
          "type" : "string"
        },
        "mobile_carrier" : {
          "$ref" : "#/definitions/mobile_carriers"
        },
        "mobile_number" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string"
        },
        "web_page" : {
          "type" : "string"
        },
        "zip" : {
          "type" : "string"
        }
      },
      "x-restlet" : {
        "section" : "PROFILES"
      }
    },
    "resume_board_data" : {
      "type" : "object",
      "required" : [ "contact", "created", "driving_record", "experience", "resume_id", "updated" ],
      "properties" : {
        "comments" : {
          "type" : "string",
          "description" : "Only available to subscribed users."
        },
        "contact" : {
          "$ref" : "#/definitions/resume_board_data_contact"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "driving_record" : {
          "$ref" : "#/definitions/resume_board_data_driving_record"
        },
        "experience" : {
          "$ref" : "#/definitions/resume_board_data_experience"
        },
        "job_preference" : {
          "$ref" : "#/definitions/resume_board_data_job_preference"
        },
        "resume_id" : {
          "type" : "integer"
        },
        "updated" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "example" : "A resume.",
      "x-restlet" : {
        "section" : "RESUMES"
      }
    },
    "resume_data_optional" : {
      "type" : "object",
      "properties" : {
        "comments" : {
          "type" : "string"
        },
        "driving_record" : {
          "$ref" : "#/definitions/resume_data_optional_driving_record"
        },
        "experience" : {
          "$ref" : "#/definitions/resume_data_optional_experience"
        },
        "job_preference" : {
          "$ref" : "#/definitions/resume_board_data_job_preference"
        }
      },
      "x-restlet" : {
        "section" : "RESUMES"
      }
    },
    "create_status" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "integer"
        }
      },
      "x-restlet" : {
        "section" : "common_definitions"
      }
    },
    "get_favorite_ids" : {
      "type" : "object",
      "properties" : {
        "favorite_id" : {
          "type" : "array",
          "description" : "A subset of this users favorite resumes or job ids",
          "items" : {
            "type" : "string"
          }
        }
      },
      "x-restlet" : {
        "section" : "common_definitions"
      }
    },
    "mobile_carriers" : {
      "type" : "string",
      "enum" : [ "Other/Unknown", "AT&T", "Verizon", "Sprint", "T-Mobile", "US Cellular", "Nextel", "Virgin Mobile", "Boost Mobile", "Straight Talk", "Tracfone", "NET10", "Metro PCS", "Cricket", "Rogers", "Fido", "Bell Mobility", "Telus", "Clearnet", "Solo Mobile", "Koodo Mobile" ],
      "x-restlet" : {
        "section" : "common_definitions"
      }
    },
    "positions" : {
      "type" : "string",
      "enum" : [ "other", "student", "company driver", "owner operator" ],
      "x-restlet" : {
        "section" : "common_definitions"
      }
    },
    "regions" : {
      "type" : "string",
      "description" : "This is a list of possible regions. This matches the regions from searching and posting a job ad on our website. I am adding it to the API with the assumption that we can expand our resume regions to match. This should aviod some confusion and weirdness. An example would be alert options. ",
      "enum" : [ "east coast", "west coast", "midwest", "nationwide", "north east", "north west", "south east", "south west", "local" ],
      "x-restlet" : {
        "section" : "common_definitions"
      }
    },
    "trailers" : {
      "type" : "array",
      "items" : {
        "type" : "string",
        "enum" : [ "V", "R", "F", "AC", "HOP", "TANK", "S" ]
      },
      "minItems" : 1,
      "maxItems" : 6,
      "x-restlet" : {
        "section" : "common_definitions"
      }
    },
    "inline_response_200" : {
      "type" : "object",
      "required" : [ "list" ],
      "properties" : {
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/alert_response_object"
          }
        }
      }
    },
    "inline_response_200_1" : {
      "type" : "object",
      "required" : [ "status" ],
      "properties" : {
        "status" : {
          "type" : "string",
          "enum" : [ "premium_employer", "driver", "employer", "not_logged_in", "overdue_employer" ]
        }
      }
    },
    "body" : {
      "type" : "object",
      "required" : [ "login", "realm", "secret" ],
      "properties" : {
        "login" : {
          "type" : "string"
        },
        "realm" : {
          "type" : "string",
          "description" : "Choose what type of login this is.",
          "enum" : [ "email", "username" ]
        },
        "secret" : {
          "type" : "string"
        }
      }
    },
    "inline_response_422" : {
      "type" : "object",
      "required" : [ "code", "description", "error" ],
      "properties" : {
        "code" : {
          "type" : "integer"
        },
        "description" : {
          "type" : "string"
        },
        "error" : {
          "type" : "string"
        }
      }
    },
    "body_1" : {
      "type" : "object",
      "required" : [ "new_password", "old_password" ],
      "properties" : {
        "new_password" : {
          "type" : "string"
        },
        "old_password" : {
          "type" : "string"
        }
      }
    },
    "body_2" : {
      "type" : "object",
      "required" : [ "email" ],
      "properties" : {
        "email" : {
          "type" : "string"
        }
      }
    },
    "body_3" : {
      "type" : "object",
      "required" : [ "email", "password" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "description" : "It defaults to employer.",
          "enum" : [ "employer", "driver" ]
        }
      }
    },
    "inline_response_201" : {
      "type" : "object",
      "required" : [ "end-user-token" ],
      "properties" : {
        "end-user-token" : {
          "type" : "string",
          "description" : "Their token to show they are logged in."
        }
      },
      "description" : "Will automatically log them in, and return the needed token."
    },
    "body_4" : {
      "type" : "object",
      "required" : [ "favorite_id", "type" ],
      "properties" : {
        "favorite_id" : {
          "type" : "integer",
          "description" : "The id of the favorite to add."
        },
        "type" : {
          "type" : "string",
          "enum" : [ "job", "resume" ]
        }
      }
    },
    "inline_response_200_2" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "count" : {
          "type" : "integer"
        }
      }
    },
    "inline_response_200_3" : {
      "type" : "object",
      "required" : [ "bill_method", "days_left", "expires_after" ],
      "properties" : {
        "bill_method" : {
          "type" : "string",
          "enum" : [ "manual", "automatic" ]
        },
        "days_left" : {
          "type" : "integer",
          "description" : "If the Job is not active, this value tells how many days the Job can be run for before payment."
        },
        "expires_after" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "body_5" : {
      "type" : "object",
      "properties" : {
        "job_id" : {
          "type" : "string",
          "description" : "The id of the job ad to activate."
        }
      }
    },
    "body_6" : {
      "type" : "object",
      "required" : [ "contact_id", "message" ],
      "properties" : {
        "contact_id" : {
          "type" : "integer",
          "description" : "Who the message is being sent to."
        },
        "message" : {
          "type" : "string",
          "description" : "This can contain a small list of html tags."
        }
      }
    },
    "body_7" : {
      "type" : "object",
      "required" : [ "contact_id", "sent_date", "status" ],
      "properties" : {
        "contact_id" : {
          "type" : "integer",
          "description" : "Which contact's conversation."
        },
        "sent_date" : {
          "type" : "string",
          "description" : "This should be a YYYY-MM-DD HH:MM:SS string like in a conversation message."
        },
        "status" : {
          "type" : "string",
          "description" : "the new status.",
          "enum" : [ "user_block", "sent", "read" ]
        }
      }
    },
    "inline_response_200_4_list" : {
      "type" : "object",
      "required" : [ "contact_company", "contact_id", "contact_name" ],
      "properties" : {
        "contact_company" : {
          "type" : "string"
        },
        "contact_id" : {
          "type" : "integer"
        },
        "contact_name" : {
          "type" : "string"
        },
        "conversation_status" : {
          "type" : "string",
          "description" : "Sent means that the contact sent your user a message, but it has not yet been read by them. Messages are automatically marked as read when the GET /messages endpoint is called for that conversation. This will return null when the contact has not yet sent a message back to your user. \n  user_block means that the user has blocked this contact. You can use  the patch method to remove the block.",
          "enum" : [ "sent", "read", "user_block" ]
        },
        "last_received" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "If the contact has sent your logged in user a message, then the newest message's sent date will appear, otherwise it will be null."
        }
      }
    },
    "inline_response_200_4" : {
      "type" : "object",
      "required" : [ "list" ],
      "properties" : {
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_4_list"
          }
        }
      }
    },
    "body_8" : {
      "type" : "object",
      "required" : [ "contact_id" ],
      "properties" : {
        "contact_id" : {
          "type" : "integer",
          "description" : "Contact to move."
        },
        "new_folder" : {
          "type" : "integer",
          "description" : "If you include either the new or old folder, the other must be included."
        },
        "old_folder" : {
          "type" : "integer",
          "description" : "If you include either the new or old folder, the other must be included."
        },
        "block_contact" : {
          "type" : "boolean",
          "description" : "Setting this to true will set the status of incomming messages to 'user_block'. It will also set the conversation status to 'user_block'. \n Setting it to false will remove this filter. It will also revert the conversation status. It will not change the status of messages already sent by the contact."
        }
      }
    },
    "inline_response_200_5_list" : {
      "type" : "object",
      "required" : [ "folder_id", "name", "new_count" ],
      "properties" : {
        "folder_id" : {
          "type" : "integer",
          "description" : "folder id"
        },
        "name" : {
          "type" : "string",
          "description" : "Folder Name"
        },
        "new_count" : {
          "type" : "integer",
          "description" : "How many new messages in that folder."
        }
      }
    },
    "inline_response_200_5" : {
      "type" : "object",
      "required" : [ "list" ],
      "properties" : {
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_5_list"
          }
        }
      },
      "description" : "Current version doesn't really work with the documentation.  because of variable folder names. It looks like this.\n\n{\"Active\":0,\"Trash\":0,\"test 5\":0,\"Pending\":0,\"TrucksNcars\":0,\"new folder 2\":0,\"Deleted\":0,\"test1\":0,\"NewFolderTest\":0}"
    },
    "body_9" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the folder to be added."
        }
      },
      "description" : "You can use any name that has not already been taken. Certain folders are automatically created, the first time a message is sent or recieved. The names of these folders are reserved and cannot be added, modified or deleted.\n\nCurrently they are Active, Pending, Deleted, and Trash."
    },
    "inline_response_201_1" : {
      "type" : "object",
      "required" : [ "folder_id", "name" ],
      "properties" : {
        "folder_id" : {
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "inline_response_200_6" : {
      "type" : "object",
      "required" : [ "bullet_points", "information_url", "message", "title", "update_url" ],
      "properties" : {
        "bullet_points" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "default" : "[]"
          }
        },
        "information_url" : {
          "type" : "string",
          "default" : "null"
        },
        "message" : {
          "type" : "string",
          "default" : "null"
        },
        "title" : {
          "type" : "string",
          "default" : "null"
        },
        "update_url" : {
          "type" : "string",
          "default" : "null"
        }
      }
    },
    "inline_response_200_7_list" : {
      "type" : "object",
      "required" : [ "notification_channel", "notification_medium", "status" ],
      "properties" : {
        "notification_channel" : {
          "type" : "string",
          "default" : "all"
        },
        "notification_medium" : {
          "type" : "string",
          "enum" : [ "email", "text", "push" ]
        },
        "status" : {
          "type" : "string",
          "enum" : [ "optin", "optout", "no response", "no record" ]
        }
      }
    },
    "inline_response_200_7" : {
      "type" : "object",
      "required" : [ "list" ],
      "properties" : {
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/inline_response_200_7_list"
          }
        }
      }
    },
    "optins_tokens" : {
      "type" : "object",
      "required" : [ "$SERVICE_OR_KEY_NAME" ],
      "properties" : {
        "$SERVICE_OR_KEY_NAME" : {
          "type" : "string",
          "description" : "Fill in the key in the value, and the service in the name. Look at our examples for clarification."
        }
      },
      "description" : "This is how you can add multiple push notifications at once, or for systems that have multiple tokens required.",
      "example" : "\"\\\"tokens\\\": { \\\"ios\\\": \\\"12345678\\\", \\\"android\\\": \\\"5432344\\\" } \""
    },
    "body_10" : {
      "type" : "object",
      "required" : [ "notification_medium" ],
      "properties" : {
        "notification_channel" : {
          "type" : "string",
          "description" : "Currently defaults to all, and is ignored. When we start using it it will be for opting people out or in one list like alerts, or messages, but not others.",
          "default" : "all"
        },
        "notification_medium" : {
          "type" : "string",
          "description" : "We currently only accept push",
          "enum" : [ "email", "text", "push" ]
        },
        "tokens" : {
          "$ref" : "#/definitions/optins_tokens"
        }
      }
    },
    "body_11" : {
      "type" : "object",
      "required" : [ "notification_medium", "verification_code" ],
      "properties" : {
        "notification_medium" : {
          "type" : "string",
          "enum" : [ "email", "text" ]
        },
        "verification_code" : {
          "type" : "string",
          "description" : "This code is generated on a POST, and will arrive via the same medium it was designated for."
        }
      }
    },
    "inline_response_200_8" : {
      "type" : "object",
      "required" : [ "list", "page_number", "total_items", "total_pages" ],
      "properties" : {
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/resume_board_data"
          }
        },
        "page_number" : {
          "type" : "integer"
        },
        "total_items" : {
          "type" : "integer"
        },
        "total_pages" : {
          "type" : "integer"
        }
      }
    },
    "inline_response_200_9" : {
      "type" : "object",
      "required" : [ "status" ],
      "properties" : {
        "status" : {
          "type" : "string"
        }
      }
    },
    "job_data_patch_contact" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string",
          "maxLength" : 64
        },
        "city" : {
          "type" : "string",
          "maxLength" : 45
        },
        "contact" : {
          "type" : "string",
          "maxLength" : 45
        },
        "email" : {
          "type" : "string",
          "maxLength" : 45
        },
        "name" : {
          "type" : "string",
          "maxLength" : 45
        },
        "phone" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string",
          "maxLength" : 2
        },
        "website" : {
          "type" : "string",
          "maxLength" : 500
        },
        "zip" : {
          "type" : "string",
          "maxLength" : 10
        }
      },
      "description" : "As long as 1 sub element from contact or position is filled in this will be a valid request."
    },
    "job_data_patch_position" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "This can be long form text."
        },
        "distance_preference" : {
          "type" : "string",
          "enum" : [ "OTR", "local" ]
        },
        "image_url" : {
          "type" : "string",
          "description" : "Sending in an empty string will cause us to regenerate a new image."
        },
        "locations" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "region_preference" : {
          "$ref" : "#/definitions/regions"
        },
        "team_preference" : {
          "type" : "string",
          "enum" : [ "single", "team" ]
        }
      },
      "description" : "As long as 1 sub element from contact or position is filled in this will be a valid request."
    },
    "job_data_patch_perks" : {
      "type" : "object",
      "properties" : {
        "paid_vacation" : {
          "type" : "boolean",
          "description" : "Does this job offer paid vacation."
        },
        "paid_sick_time" : {
          "type" : "boolean",
          "description" : "Does this job offer paid sick time."
        },
        "paid_holidays" : {
          "type" : "boolean",
          "description" : "Does this job offer paid holidays."
        },
        "round_trip_loads" : {
          "type" : "boolean",
          "description" : "Does this job offer round trip loads."
        },
        "health_insurance" : {
          "type" : "boolean",
          "description" : "Does this job offer health insurance."
        },
        "dental_insurance" : {
          "type" : "boolean",
          "description" : "Does this job offer dental insurance."
        },
        "life_insurance" : {
          "type" : "boolean",
          "description" : "Does this job offer life insurance."
        },
        "pet_friendly" : {
          "type" : "boolean",
          "description" : "Is this job pet friendly."
        },
        "referral_bonuses" : {
          "type" : "boolean",
          "description" : "Does this job offer referral bonuses."
        },
        "lease_purchase_available" : {
          "type" : "boolean",
          "description" : "Lease purchase available."
        },
        "direct_deposit" : {
          "type" : "boolean",
          "description" : "Does this job offer direct deposit."
        },
        "no_touch_freight" : {
          "type" : "boolean",
          "description" : "Does this job offer no touch freight."
        },
        "all_miles_paid" : {
          "type" : "boolean",
          "description" : "Are all miles paid."
        },
        "free_roadside_assistance" : {
          "type" : "boolean",
          "description" : "Does this job offer free roadside assistance."
        },
        "company_fuel_card" : {
          "type" : "boolean",
          "description" : "Company fuel card."
        },
        "safety_bonus" : {
          "type" : "boolean",
          "description" : "Safety bonus."
        },
        "24x7_dispatch" : {
          "type" : "boolean",
          "description" : "24 x 7 dispatch."
        },
        "rider_program" : {
          "type" : "boolean",
          "description" : "Rider program."
        },
        "detention_layover_pay" : {
          "type" : "boolean",
          "description" : "Detention layover pay."
        },
        "home" : {
          "type" : "string",
          "enum" : [ "daily", "weekly", "biweekly", "monthly", "other" ]
        },
        "paid" : {
          "type" : "string",
          "enum" : [ "weekly", "biweekly", "monthly", "other" ]
        },
        "sign_on_bonus" : {
          "type" : "number",
          "description" : "Sign on bonus."
        },
        "equipment_age" : {
          "type" : "number",
          "description" : "Equipment age."
        }
      }
    },
    "job_data_contact" : {
      "type" : "object",
      "required" : [ "contact", "email", "phone" ],
      "properties" : {
        "address" : {
          "type" : "string",
          "maxLength" : 64
        },
        "city" : {
          "type" : "string",
          "maxLength" : 45
        },
        "contact" : {
          "type" : "string",
          "maxLength" : 45
        },
        "email" : {
          "type" : "string",
          "maxLength" : 45
        },
        "name" : {
          "type" : "string",
          "maxLength" : 45
        },
        "phone" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string",
          "maxLength" : 2
        },
        "website" : {
          "type" : "string",
          "maxLength" : 500
        },
        "zip" : {
          "type" : "string",
          "maxLength" : 10
        }
      }
    },
    "job_data_position" : {
      "type" : "object",
      "properties" : {
        "Image_url" : {
          "type" : "string",
          "description" : "We will download the image from the URL. If no image is found we will automatically generate one. We accept an image file of up to 1MB in size. All images will be resized to 200x200. If this value is specified image_data cannot be used."
        },
        "description" : {
          "type" : "string",
          "description" : "This can be long form text."
        },
        "distance_preference" : {
          "type" : "string",
          "default" : "OTR",
          "enum" : [ "OTR", "local" ]
        },
        "image_data" : {
          "type" : "string",
          "description" : "Base64 string of image. Base64 data must decode into a valid jpg or png file no more than 1MB in size. All images will be resized to 200x200. If this value is specified image_url cannot be used."
        },
        "locations" : {
          "type" : "array",
          "description" : "If included the array only accepts 2 digit state codes. MO, BC, AR, and so on. \n\nHow did Jon implement country level coding? I think at the time I said it should be done by the \"front end\", I am still for that, but if the hack is already in place in the backend I am open to leveraging it.",
          "items" : {
            "type" : "string"
          }
        },
        "region_preference" : {
          "$ref" : "#/definitions/regions"
        },
        "team_preference" : {
          "type" : "string",
          "default" : "single",
          "enum" : [ "single", "team" ]
        }
      }
    },
    "job_list_user_contact" : {
      "type" : "object",
      "required" : [ "address", "city", "contact", "name", "phone", "state", "zip" ],
      "properties" : {
        "address" : {
          "type" : "string",
          "maxLength" : 64
        },
        "city" : {
          "type" : "string",
          "maxLength" : 45
        },
        "contact" : {
          "type" : "string",
          "maxLength" : 45
        },
        "email" : {
          "type" : "string",
          "maxLength" : 45
        },
        "name" : {
          "type" : "string",
          "maxLength" : 45
        },
        "phone" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string",
          "maxLength" : 2
        },
        "website" : {
          "type" : "string",
          "maxLength" : 500
        },
        "zip" : {
          "type" : "string",
          "maxLength" : 10
        }
      },
      "description" : "The contact information for this ad."
    },
    "job_list_user_position" : {
      "type" : "object",
      "required" : [ "description", "distance_preference", "image_url", "region_preference", "team_preference" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "This is a large text field."
        },
        "distance_preference" : {
          "type" : "string",
          "enum" : [ "local", "OTR" ]
        },
        "image_url" : {
          "type" : "string",
          "example" : "http://df.co/job_images/ASOETUHAOSENTUHAOENUTSH.png",
          "description" : "the uri path to the image.",
          "maxLength" : 32
        },
        "locations" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "region_preference" : {
          "$ref" : "#/definitions/regions"
        },
        "team_preference" : {
          "type" : "string",
          "enum" : [ "team", "single" ]
        }
      }
    },
    "job_list_user_list" : {
      "type" : "object",
      "required" : [ "bill_method", "contact", "days_left", "expires_after", "job_id", "position" ],
      "properties" : {
        "bill_method" : {
          "type" : "string",
          "description" : "Whether or not the add will automatically renew.",
          "enum" : [ "manual", "automatic" ]
        },
        "contact" : {
          "$ref" : "#/definitions/job_list_user_contact"
        },
        "days_left" : {
          "type" : "integer",
          "description" : "A positive value indicates the ad is both inactive, and can be run for that number of days."
        },
        "expires_after" : {
          "type" : "string",
          "format" : "date",
          "description" : "If this date is set for today or in the future the job ad is currently active."
        },
        "job_id" : {
          "type" : "number"
        },
        "position" : {
          "$ref" : "#/definitions/job_list_user_position"
        },
        "perks" : {
          "$ref" : "#/definitions/job_data_patch_perks"
        }
      }
    },
    "job_list_contact" : {
      "type" : "object",
      "required" : [ "address", "city", "contact", "name", "phone", "state", "zip" ],
      "properties" : {
        "address" : {
          "type" : "string",
          "maxLength" : 64
        },
        "city" : {
          "type" : "string",
          "maxLength" : 45
        },
        "contact" : {
          "type" : "string",
          "maxLength" : 45
        },
        "email" : {
          "type" : "string",
          "maxLength" : 45
        },
        "id" : {
          "type" : "integer",
          "description" : "This is the id you would use to send a message to this employer. Only logged in users can see this."
        },
        "name" : {
          "type" : "string",
          "maxLength" : 45
        },
        "phone" : {
          "type" : "integer"
        },
        "state" : {
          "type" : "string",
          "maxLength" : 2
        },
        "website" : {
          "type" : "string",
          "maxLength" : 500
        },
        "zip" : {
          "type" : "string",
          "maxLength" : 10
        }
      },
      "description" : "The contact information for this ad."
    },
    "job_list_position" : {
      "type" : "object",
      "required" : [ "description", "distance_preference", "image_url", "region_preference", "states", "team_preference" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "This is a large text field."
        },
        "distance_preference" : {
          "type" : "string",
          "enum" : [ "OTR", "local" ]
        },
        "image_url" : {
          "type" : "string"
        },
        "region_preference" : {
          "$ref" : "#/definitions/regions"
        },
        "states" : {
          "type" : "array",
          "description" : "Currently we return the full state name for display purposes.",
          "items" : {
            "type" : "string"
          }
        },
        "team_preference" : {
          "type" : "string",
          "enum" : [ "single", "team" ]
        }
      }
    },
    "job_list_list" : {
      "type" : "object",
      "required" : [ "contact", "job_id", "position" ],
      "properties" : {
        "contact" : {
          "$ref" : "#/definitions/job_list_contact"
        },
        "job_id" : {
          "type" : "number"
        },
        "position" : {
          "$ref" : "#/definitions/job_list_position"
        },
        "perks" : {
          "$ref" : "#/definitions/job_data_patch_perks"
        },
        "relevance" : {
          "type" : "integer",
          "description" : "Search relevance score."
        }
      }
    },
    "conversation_list_list" : {
      "type" : "object",
      "required" : [ "date_sent", "message", "sender", "status" ],
      "properties" : {
        "date_sent" : {
          "type" : "string",
          "format" : "date-time"
        },
        "message" : {
          "type" : "string"
        },
        "sender" : {
          "type" : "integer",
          "description" : "Who sent the message, the logged in user, or the contact."
        },
        "status" : {
          "type" : "string",
          "enum" : [ "read", "sent", "user_block" ]
        }
      }
    },
    "resume_board_data_contact" : {
      "type" : "object",
      "required" : [ "city", "first_name", "last_name", "state" ],
      "properties" : {
        "address" : {
          "type" : "string",
          "description" : "Only available to subscribed users.",
          "maxLength" : 40
        },
        "city" : {
          "type" : "string",
          "maxLength" : 30
        },
        "fax_number" : {
          "type" : "integer",
          "description" : "Should we depricate this? How many new resumes come with this? Only available to subscribed users.",
          "maximum" : 14
        },
        "first_name" : {
          "type" : "string",
          "description" : "Only available to subscribed users.",
          "maxLength" : 50
        },
        "contact_number" : {
          "type" : "integer",
          "description" : "Only available to subscribed users.",
          "maximum" : 14
        },
        "id" : {
          "type" : "integer",
          "description" : "This is the ID you would use to send a message. Only available to logged in users."
        },
        "last_name" : {
          "type" : "string",
          "description" : "Only available to subscribed users.",
          "maxLength" : 50
        },
        "state" : {
          "type" : "string",
          "maxLength" : 3
        },
        "web_page" : {
          "type" : "string",
          "description" : "Only available to subscribed users.",
          "maxLength" : 120
        },
        "mobile_number" : {
          "type" : "integer",
          "description" : "Same as home phone. Only available to subscribed users.",
          "maximum" : 14
        },
        "mobile_carrier" : {
          "$ref" : "#/definitions/mobile_carriers"
        },
        "zip" : {
          "type" : "string",
          "description" : "Only available to subscribed users.",
          "maxLength" : 10
        }
      },
      "description" : "The non required fields will only show up on a single resume search. You can do that by specifying the alert_id."
    },
    "resume_board_data_driving_record" : {
      "type" : "object",
      "required" : [ "accidents", "age", "tickets" ],
      "properties" : {
        "accidents" : {
          "type" : "integer",
          "minimum" : 0
        },
        "age" : {
          "type" : "string",
          "enum" : [ "18-20", "21-25", "26-30", "Over 30" ]
        },
        "gender" : {
          "type" : "string",
          "enum" : [ "male", "female" ]
        },
        "license_type" : {
          "type" : "string",
          "enum" : [ "A", "B", "1", "2", "3" ]
        },
        "tickets" : {
          "type" : "integer",
          "minimum" : 0
        }
      }
    },
    "resume_board_data_experience" : {
      "type" : "object",
      "required" : [ "total_years_experience" ],
      "properties" : {
        "current_employer" : {
          "type" : "string",
          "description" : "Only available to subscribed users.",
          "maxLength" : 40
        },
        "current_years_experience" : {
          "type" : "integer",
          "minimum" : 0
        },
        "felony_reason" : {
          "type" : "string",
          "description" : "Only available to subscribed users."
        },
        "has_felony" : {
          "type" : "boolean"
        },
        "previous_employer" : {
          "type" : "string",
          "description" : "Only available to subscribed users.",
          "maxLength" : 40
        },
        "previous_years_experience" : {
          "type" : "integer",
          "minimum" : 0
        },
        "total_years_experience" : {
          "type" : "integer",
          "minimum" : 0
        },
        "trailer_experience" : {
          "$ref" : "#/definitions/trailers"
        }
      }
    },
    "resume_board_data_job_preference" : {
      "type" : "object",
      "properties" : {
        "distance_preference" : {
          "type" : "string",
          "enum" : [ "OTR", "local" ]
        },
        "position" : {
          "$ref" : "#/definitions/positions"
        },
        "region_preference" : {
          "$ref" : "#/definitions/regions"
        },
        "team_preference" : {
          "type" : "string",
          "enum" : [ "single", "team" ]
        }
      }
    },
    "resume_data_optional_driving_record" : {
      "type" : "object",
      "properties" : {
        "accidents" : {
          "type" : "integer",
          "minimum" : 0
        },
        "age" : {
          "type" : "string",
          "enum" : [ "18-20", "21-25", "26-30", "Over 30" ]
        },
        "gender" : {
          "type" : "string",
          "enum" : [ "male", "female" ]
        },
        "license_type" : {
          "type" : "string",
          "enum" : [ "A", "B", "1", "2", "3" ]
        },
        "tickets" : {
          "type" : "integer",
          "minimum" : 0
        }
      }
    },
    "resume_data_optional_experience" : {
      "type" : "object",
      "properties" : {
        "current_employer" : {
          "type" : "string",
          "maxLength" : 40
        },
        "current_years_experience" : {
          "type" : "integer",
          "minimum" : 0
        },
        "felony_reason" : {
          "type" : "string"
        },
        "has_felony" : {
          "type" : "boolean"
        },
        "previous_employer" : {
          "type" : "string",
          "maxLength" : 40
        },
        "previous_years_experience" : {
          "type" : "integer",
          "minimum" : 0
        },
        "total_years_experience" : {
          "type" : "integer",
          "minimum" : 0
        },
        "trailer_experience" : {
          "$ref" : "#/definitions/trailers"
        }
      }
    }
  },
  "responses" : {
    "error_422" : {
      "description" : "Unprocessable Entity. More information provided in the return object.",
      "schema" : {
        "$ref" : "#/definitions/error_object"
      }
    }
  },
  "x-restlet" : {
    "sections" : {
      "ALERTS" : { },
      "END_USER_AUTHENTICATIONS" : { },
      "FAVORITES" : { },
      "JOBS" : { },
      "LOCATIONS" : { },
      "MESSAGES" : { },
      "Mobile Update" : { },
      "Optins" : { },
      "PROFILES" : { },
      "RESUMES" : { },
      "common_definitions" : { }
    }
  }
}