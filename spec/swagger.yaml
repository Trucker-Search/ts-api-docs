basePath: /api
consumes:
  - application/json
definitions:
  alert_request_object:
    properties:
      alert_type:
        default: resume
        enum:
          - job
          - resume
        type: string
      driver_experience:
        description: Ignored on job searches.
        type: integer
      driver_region:
        $ref: '#/definitions/regions'
      driver_route:
        type: string
      driver_team:
        type: boolean
      only_new:
        description: 'Whether to sent both new and updated resumes, or just new resumes.'
        type: boolean
      position:
        $ref: '#/definitions/positions'
      search_city:
        description: Ignored on job searches.
        type: string
      search_radius:
        description: Ignored for job searches.
        type: integer
      search_state:
        description: Please enter one or more valid state abbreviations.
        items:
          type: string
        type: array
      send_frequency:
        description: Frequency in minutes that the alert is sent. We stop sending alerts between 12am and 3am CST.
        type: integer
      trailer_experience:
        description: Ignored on job searches.
        items:
          enum:
            - V
            - F
            - R
            - HOP
            - AC
            - S
          type: string
        type: array
    required:
      - only_new
      - search_state
      - send_frequency
    type: object
    x-restlet:
      section: ALERTS
  alert_response_object:
    properties:
      alert_id:
        type: integer
      driver_experience:
        description: Won’t be returned on a job search.
        maximum: 19
        minimum: 0
        type: integer
      driver_region:
        $ref: '#/definitions/regions'
      driver_route:
        type: string
      driver_team:
        type: boolean
      last_sent:
        description: Last time the alert was sent.
        format: date-time
        type: string
      only_new:
        description: 'Whether to sent both new and updated resumes, or just new resumes.'
        type: boolean
      position:
        $ref: '#/definitions/positions'
      search_city:
        default: 'null'
        description: Won't be returned on a job search.
        type: string
      search_radius:
        description: Won't be returned on a job search.
        example: 'null'
        maximum: 300
        minimum: 1
        type: integer
      search_state:
        items:
          type: string
        type: array
      send_frequency:
        description: Frequency in minutes that the alert is sent.
        type: integer
      trailer_experience:
        $ref: '#/definitions/trailers'
    required:
      - alert_id
      - driver_experience
      - driver_region
      - driver_route
      - driver_team
      - last_sent
      - only_new
      - search_state
      - send_frequency
    type: object
    x-restlet:
      section: ALERTS
  create_status:
    properties:
      success:
        type: integer
    type: object
    x-restlet:
      section: common_definitions
  error_object:
    properties:
      end-user-token:
        type: string
    required:
      - end-user-token
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  job_data:
    properties:
      contact:
        properties:
          address:
            maxLength: 64
            type: string
          city:
            maxLength: 45
            type: string
          contact:
            maxLength: 45
            type: string
          email:
            maxLength: 45
            type: string
          name:
            maxLength: 45
            type: string
          phone:
            type: integer
          state:
            maxLength: 2
            type: string
          website:
            maxLength: 500
            type: string
          zip:
            maxLength: 10
            type: string
        required:
          - address
          - city
          - contact
          - email
          - name
          - phone
          - state
          - website
          - zip
        type: object
      job_id:
        type: integer
      position:
        properties:
          Image_url:
            description: We will download the image from the URL. If no image is found we will automatically generate one. We accept an image file of up to 1MB in size. All images will be resized to 160x160.
            format: binary
            type: string
          description:
            description: This can be long form text.
            type: string
          distance_preference:
            default: OTR
            enum:
              - OTR
              - local
            type: string
          locations:
            description: |-
              If included the array only accepts 2 digit state codes. MO, BC, AR, and so on. 

              How did Jon implement country level coding? I think at the time I said it should be done by the "front end", I am still for that, but if the hack is already in place in the backend I am open to leveraging it.
            items:
              type: string
            type: array
          team_preference:
            default: single
            enum:
              - single
              - team
            type: string
        type: object
    required:
      - contact
      - job_id
      - position
    type: object
    x-restlet:
      section: JOBS
  job_data_patch:
    properties:
      contact:
        description: As long as 1 sub element from contact or position is filled in this will be a valid request.
        properties:
          address:
            maxLength: 64
            type: string
          city:
            maxLength: 45
            type: string
          contact:
            maxLength: 45
            type: string
          email:
            maxLength: 45
            type: string
          name:
            maxLength: 45
            type: string
          phone:
            type: integer
          state:
            maxLength: 2
            type: string
          website:
            maxLength: 500
            type: string
          zip:
            maxLength: 10
            type: string
        type: object
      job_id:
        description: The Job ad to patch.
        type: integer
      position:
        description: As long as 1 sub element from contact or position is filled in this will be a valid request.
        properties:
          description:
            description: This can be long form text.
            type: string
          distance_preference:
            enum:
              - OTR
              - local
            type: string
          image_url:
            description: Sending in an empty string will cause us to regenerate a new image.
            type: string
          locations:
            items:
              type: string
            type: array
          team_preference:
            enum:
              - single
              - team
            type: string
        type: object
    required:
      - job_id
    type: object
    x-restlet:
      section: JOBS
  job_list:
    properties:
      list:
        items:
          properties:
            contact:
              description: The contact information for this ad.
              properties:
                address:
                  maxLength: 64
                  type: string
                city:
                  maxLength: 45
                  type: string
                contact:
                  maxLength: 45
                  type: string
                email:
                  maxLength: 45
                  type: string
                id:
                  description: This is the id you would use to send a message to this employer. Only logged in users can see this.
                  type: integer
                name:
                  maxLength: 45
                  type: string
                phone:
                  type: integer
                state:
                  maxLength: 2
                  type: string
                website:
                  maxLength: 500
                  type: string
                zip:
                  maxLength: 10
                  type: string
              required:
                - address
                - city
                - contact
                - name
                - phone
                - state
                - zip
              type: object
            job_id:
              type: number
            position:
              properties:
                description:
                  description: This is a large text field.
                  type: string
                distance_preference:
                  enum:
                    - OTR
                    - local
                  type: string
                image_url:
                  maxLength: 32
                  type: string
                locations:
                  items:
                    type: string
                  type: array
                region_preference:
                  $ref: '#/definitions/regions'
                team_preference:
                  enum:
                    - single
                    - team
                  type: string
              required:
                - description
                - distance_preference
                - region_preference
                - team_preference
              type: object
          required:
            - contact
            - job_id
            - position
          type: object
        type: array
      page_number:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    required:
      - list
      - page_number
      - total_items
      - total_pages
    type: object
    x-restlet:
      section: JOBS
  job_list_user:
    properties:
      list:
        items:
          properties:
            bill_method:
              description: Whether or not the add will automatically renew.
              enum:
                - manual
                - automatic
              type: string
            contact:
              description: The contact information for this ad.
              properties:
                address:
                  maxLength: 64
                  type: string
                city:
                  maxLength: 45
                  type: string
                contact:
                  maxLength: 45
                  type: string
                email:
                  maxLength: 45
                  type: string
                name:
                  maxLength: 45
                  type: string
                phone:
                  type: integer
                state:
                  maxLength: 2
                  type: string
                website:
                  maxLength: 500
                  type: string
                zip:
                  maxLength: 10
                  type: string
              required:
                - address
                - city
                - contact
                - name
                - phone
                - state
                - zip
              type: object
            days_left:
              description: 'A positive value indicates the ad is both inactive, and can be run for that number of days.'
              type: integer
            expires_after:
              description: If this date is set for today or in the future the job ad is currently active.
              format: date
              type: string
            job_id:
              type: number
            position:
              properties:
                description:
                  description: This is a large text field.
                  type: string
                distance_preference:
                  enum:
                    - local
                    - OTR
                  type: string
                image_url:
                  description: the uri path to the image.
                  example: 'http://df.co/job_images/ASOETUHAOSENTUHAOENUTSH.png'
                  maxLength: 32
                  type: string
                locations:
                  items:
                    type: string
                  type: array
                region_preference:
                  $ref: '#/definitions/regions'
                team_preference:
                  enum:
                    - team
                    - single
                  type: string
              required:
                - description
                - distance_preference
                - image_url
                - region_preference
                - team_preference
              type: object
          required:
            - bill_method
            - contact
            - days_left
            - expires_after
            - job_id
            - position
          type: object
        type: array
      page_number:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    required:
      - list
      - page_number
      - total_items
      - total_pages
    type: object
    x-restlet:
      section: JOBS
  positions:
    enum:
      - other
      - student
      - company
      - owner/operator
    type: string
    x-restlet:
      section: common_definitions
  profile_request:
    properties:
      address:
        type: string
      city:
        type: string
      company:
        type: string
      contact_extension:
        type: integer
      contact_name:
        type: string
      contact_number:
        type: integer
      fax_number:
        type: integer
      mobile_number:
        type: integer
      state:
        type: string
      web_page:
        type: string
      zip:
        type: string
    type: object
    x-restlet:
      section: PROFILES
  profile_response:
    properties:
      address:
        type: string
      city:
        type: string
      company:
        type: string
      contact_extension:
        type: integer
      contact_name:
        type: string
      contact_number:
        type: integer
      fax_number:
        type: integer
      mobile_number:
        type: integer
      state:
        type: string
      web_page:
        type: string
      zip:
        type: string
    required:
      - address
      - city
      - company
      - contact_extension
      - contact_name
      - contact_number
      - fax_number
      - mobile_number
      - state
      - web_page
      - zip
    type: object
    x-restlet:
      section: PROFILES
  regions:
    description: 'This is a list of possible regions. This matches the regions from searching and posting a job ad on our website. I am adding it to the API with the assumption that we can expand our resume regions to match. This should aviod some confusion and weirdness. An example would be alert options. '
    enum:
      - east caost
      - west coast
      - mid west
      - nation wide
      - north east
      - north west
      - south east
      - south west
      - local
    type: string
    x-restlet:
      section: common_definitions
  resume_board_data:
    example: A resume.
    properties:
      comments:
        description: Only available to subscribed users.
        type: string
      contact:
        properties:
          address:
            description: Only available to subscribed users.
            maxLength: 40
            type: string
          city:
            maxLength: 30
            type: string
          fax_number:
            description: Should we depricate this? How many new resumes come with this? Only available to subscribed users.
            maximum: 20
            type: integer
          first_name:
            description: Only available to subscribed users.
            maxLength: 20
            type: string
          home_phone:
            description: 'DEVNOTE: Look into why this is 20 chars and see if we can drop it it to 11 or 13. Only available to subscribed users. We could also split this like we do with DF and have an ext section, but that doesn''t make a lot of sense for the home phone.'
            maximum: 20
            type: integer
          id:
            description: This is the ID you would use to send a message. Only available to logged in users.
            type: integer
          last_name:
            description: Only available to subscribed users.
            maxLength: 20
            type: string
          state:
            maxLength: 4
            type: string
          website_address:
            description: Only available to subscribed users.
            maxLength: 40
            type: string
          work_phone:
            description: Same as home phone. Only available to subscribed users.
            maximum: 20
            type: integer
          zip:
            description: Only available to subscribed users.
            maxLength: 10
            type: string
        required:
          - city
          - state
        type: object
      created:
        format: date-time
        type: string
      driving_record:
        properties:
          accidents:
            minimum: 0
            type: integer
          age:
            enum:
              - 18-20
              - 21-25
              - 26-30
              - Over 30
            type: string
          gender:
            enum:
              - male
              - female
            type: string
          license:
            enum:
              - A
              - B
            type: string
          tickets:
            minimum: 0
            type: integer
        required:
          - accidents
          - age
          - tickets
        type: object
      experience:
        properties:
          current_employer:
            description: Only available to subscribed users.
            maxLength: 40
            type: string
          current_years_experience:
            minimum: 0
            type: integer
          felony_reason:
            description: Only available to subscribed users.
            type: string
          has_felony:
            type: boolean
          previous_employer:
            description: Only available to subscribed users.
            maxLength: 40
            type: string
          previous_years_experience:
            minimum: 0
            type: integer
          total_years_experience:
            minimum: 0
            type: integer
          trailer_experience:
            $ref: '#/definitions/trailers'
        required:
          - total_years_experience
        type: object
      job_preference:
        properties:
          distance_preference:
            enum:
              - OTR
              - local
            type: string
          position:
            $ref: '#/definitions/positions'
          region_preference:
            $ref: '#/definitions/regions'
          team_preference:
            enum:
              - single
              - team
            type: string
        type: object
      resume_id:
        type: integer
      updated:
        format: date-time
        type: string
    required:
      - contact
      - created
      - driving_record
      - experience
      - resume_id
      - updated
    type: object
    x-restlet:
      section: RESUMES
  resume_data:
    description: Returned when a user wants their resume data.
    example: A resume.
    properties:
      comments:
        type: string
      driving_record:
        properties:
          accidents:
            minimum: 0
            type: integer
          age:
            enum:
              - 18-20
              - 21-25
              - 26-30
              - Over 30
            type: string
          gender:
            enum:
              - male
              - female
            type: string
          license:
            description: If they have a licence type they can specify the class here.
            enum:
              - A
              - B
            type: string
          tickets:
            minimum: 0
            type: integer
        required:
          - accidents
          - age
          - tickets
        type: object
      experience:
        properties:
          current_employer:
            maxLength: 40
            type: string
          current_years_experience:
            minimum: 0
            type: integer
          felony_reason:
            type: string
          has_felony:
            type: boolean
          previous_emplayer:
            maxLength: 40
            type: string
          previous_years_experience:
            minimum: 0
            type: integer
          total_years_experience:
            minimum: 0
            type: integer
          trailer_experience:
            $ref: '#/definitions/trailers'
        required:
          - total_years_experience
        type: object
      job_preference:
        properties:
          distance_preference:
            enum:
              - OTR
              - local
            type: string
          position:
            $ref: '#/definitions/positions'
          region_preference:
            $ref: '#/definitions/regions'
          team_preference:
            enum:
              - single
              - team
            type: string
        required:
          - distance_preference
          - position
        type: object
    required:
      - driving_record
      - experience
      - job_preference
    type: object
    x-restlet:
      section: RESUMES
  resume_data_optional:
    properties:
      comments:
        type: string
      driving_record:
        properties:
          accidents:
            minimum: 0
            type: integer
          age:
            enum:
              - 18-20
              - 21-25
              - 26-30
              - Over 30
            type: string
          gender:
            enum:
              - male
              - female
            type: string
          license:
            enum:
              - A
              - B
            type: string
          tickets:
            minimum: 0
            type: integer
        type: object
      experience:
        properties:
          current_employer:
            maxLength: 40
            type: string
          current_years_experience:
            minimum: 0
            type: integer
          felony_reason:
            type: string
          has_felony:
            type: boolean
          previous_emplayer:
            maxLength: 40
            type: string
          previous_years_experience:
            minimum: 0
            type: integer
          total_years_experience:
            minimum: 0
            type: integer
          trailer_experience:
            $ref: '#/definitions/trailers'
        type: object
      job_preference:
        properties:
          distance_preference:
            enum:
              - OTR
              - local
            type: string
          position:
            $ref: '#/definitions/positions'
          region_preference:
            $ref: '#/definitions/regions'
          team_preference:
            enum:
              - single
              - team
            type: string
        type: object
    type: object
    x-restlet:
      section: RESUMES
  trailers:
    items:
      enum:
        - V
        - R
        - F
        - AC
        - HOP
        - TANK
        - S
      type: string
    maxItems: 6
    minItems: 1
    type: array
    x-restlet:
      section: common_definitions
host: www.truckersearch.com
info:
  contact:
    email: support@truckersearch.com
  description: |-
    In order to use the Trucker Search API please first contact us to get an API Token. This token needs to be sent as a HTTP header argument in every request to our API.

    api-token=“SECRET KEY”

    Please keep your api-token a secret. If the token is compromised please contact us to get a new one.

    This api token authenticates your application and gives it access to the API.

    The API token should not be confused with the end-user-token. That token is given to you via the end_user_authentications endpoint when the user logs in. This token is needed in order to use certain features, and get certain sensitive information.

    Both Tokens are stateless, and delivered via the HTTP headers.
  title: Trucker Search API
  version: 1.0.0
  x-logo:
    url: 'https://www.truckersearch.com/home/images/logo-2015.png'
paths:
  /alerts:
    delete:
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: query
          name: alert_id
          required: true
          type: integer
      responses:
        '204':
          description: Status 204
      summary: Delete an alert.
      tags:
        - alerts
    get:
      description: Get a list of alerts. You can optionally limit the list by specifcying alerts by their alert_id.
      parameters:
        - $ref: '#/parameters/end-user-token'
        - description: only get a subset of alerts. As this is a get request this is specified as a query string parameter
          in: query
          items:
            type: integer
          name: alert_id
          required: false
          type: array
        - description: |-
            Rather than having this as an option in the query parameter or json body we could add it to the url like we do with df stuff. it would look something like /alerts/jobs/ or /alerts/resumes

            I'm ok with either option. The reason I picked this one is beacause favorites already follows this convention. It obviously could be changed to match as well.
          enum:
            - job
            - resume
          in: query
          name: alert_type
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              list:
                items:
                  $ref: '#/definitions/alert_response_object'
                type: array
            required:
              - list
            type: object
      summary: Get a list of alerts.
      tags:
        - alerts
    post:
      consumes: []
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/alert_request_object'
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: Create a new alert.
      tags:
        - alerts
    x-restlet:
      section: ALERTS
  /end_user_authentications:
    delete:
      parameters:
        - $ref: '#/parameters/end-user-token'
      responses:
        '204':
          description: Status 204
      summary: Log out.
      tags:
        - end_user_authentications
    get:
      parameters:
        - $ref: '#/parameters/end-user-token'
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              status:
                enum:
                  - employer
                  - driver
                  - trial
                  - not logged in
                  - overdue
                type: string
            required:
              - status
            type: object
      summary: Get a users status.
      tags:
        - end_user_authentications
    post:
      consumes: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              login:
                type: string
              realm:
                description: 'email, username.'
                type: string
              secret:
                type: string
            required:
              - login
              - realm
              - secret
            type: object
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/error_object'
        '422':
          description: Status 422
          schema:
            properties:
              code:
                type: integer
              description:
                type: string
              error:
                type: string
            required:
              - code
              - description
              - error
            type: object
      summary: Log in.
      tags:
        - end_user_authentications
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  /end_user_authentications/passwords:
    get:
      parameters:
        - in: query
          name: email_address
          required: true
          type: string
      responses:
        '204':
          description: This will return successful even if we do not have the e-mail address in our records.
      summary: Forgot password
      tags:
        - end_user_authentications
    patch:
      consumes: []
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            properties:
              new_password:
                type: string
              old_password:
                type: string
            required:
              - new_password
              - old_password
            type: object
      responses:
        '200':
          description: Status 200
        '422':
          $ref: '#/responses/error_422'
      summary: Update Password
      tags:
        - end_user_authentications
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  /end_user_authentications/users:
    post:
      consumes: []
      description: Create a new user
      parameters:
        - in: body
          name: body
          required: true
          schema:
            properties:
              email:
                type: string
              password:
                type: string
            required:
              - email
              - password
            type: object
      responses:
        '200':
          description: Status 200
          schema:
            description: 'Will automatically log them in, and return the needed token.'
            properties:
              end-user-token:
                description: Their token to show they are logged in.
                type: string
            required:
              - end-user-token
            type: object
      summary: Create user
      tags:
        - end_user_authentications
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  /favorites:
    delete:
      parameters:
        - $ref: '#/parameters/end-user-token'
        - enum:
            - job
            - resume
          in: query
          name: favorite_type
          required: true
          type: string
        - in: query
          name: favorite_id
          required: true
          type: integer
      responses:
        '204':
          description: Status 204
      summary: Remove  a favorite.
      tags:
        - favorites
    get:
      parameters:
        - $ref: '#/parameters/end-user-token'
        - enum:
            - resume
            - job
          in: query
          name: favorite_type
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            description: I don't know what this object should look like. It isn't complete in it's sandbox.
            type: object
      summary: Get the favorites.
      tags:
        - favorites
    post:
      consumes: []
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            properties:
              favorite_id:
                description: The id of the favorite to add.
                type: integer
              type:
                enum:
                  - job
                  - resume
                type: string
            required:
              - favorite_id
              - type
            type: object
      responses:
        '201':
          description: Status 201
      summary: Add a favorite
      tags:
        - favorites
    x-restlet:
      section: FAVORITES
  /favorites/count:
    get:
      parameters:
        - $ref: '#/parameters/end-user-token'
        - enum:
            - resume
            - job
          in: query
          name: favorite_type
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              count:
                type: integer
            required:
              - count
            type: object
      summary: Get a count of favorites
      tags:
        - favorites
    x-restlet:
      section: FAVORITES
  /jobs:
    delete:
      parameters:
        - $ref: '#/parameters/end-user-token'
        - description: 'You can only delete 1 job at a time, and only if that Job is both not active, and does not have any days left.'
          in: query
          name: job_id
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: Delete the users job ad.
      tags:
        - jobs
    get:
      description: Get a list of the logged in users jobs.
      parameters:
        - $ref: '#/parameters/end-user-token'
        - description: Optionally just return a few jobs.
          in: query
          items:
            type: integer
          name: job_id
          required: false
          type: array
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/job_list_user'
      summary: Get logged in user's job ads.
      tags:
        - jobs
    patch:
      consumes: []
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/job_data_patch'
      responses:
        '204':
          description: Status 204
      summary: Update a Job ad.
      tags:
        - jobs
    post:
      consumes: []
      description: Create a new Job ad for the currently logged in user.
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/job_data'
      responses:
        '201':
          description: Status 201
          headers:
            url:
              description: A url pointing to the newly created resource.
              type: string
              x-example: .../jobs/?id=1234
      summary: Post a new job ad.
      tags:
        - jobs
    x-restlet:
      section: JOBS
  /jobs/boards:
    get:
      description: Gets a list of other people's jobs.
      parameters:
        - $ref: '#/parameters/end-user-token-optional'
        - in: query
          name: state
          required: false
          type: string
        - description: Only return adverts with the local region selected.
          in: query
          name: local_only
          required: false
          type: boolean
        - description: 'This is a list of possible regions. This matches the regions from searching and posting a job ad on our website. I am adding it to the API with the assumption that we can expand our resume regions to match. This should aviod some confusion and weirdness. An example would be alert options. '
          enum:
            - east caost
            - west coast
            - mid west
            - nation wide
            - north east
            - north west
            - south east
            - south west
            - local
          in: query
          name: region
          required: false
          type: string
        - in: query
          name: single
          required: false
          type: boolean
        - in: query
          name: page_number
          required: false
          type: integer
        - default: 50
          description: Results per page.
          in: query
          maximum: 100
          minimum: 1
          name: item_count
          required: false
          type: integer
      responses:
        '200':
          description: returns a list of jobs.
          schema:
            $ref: '#/definitions/job_list'
      summary: Get a list of jobs
      tags:
        - jobs
    x-restlet:
      section: JOBS
  /jobs/status:
    delete:
      parameters:
        - description: The job ad to deactivate.
          in: query
          name: job_id
          required: true
          type: integer
        - in: header
          name: end-user-auth
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: Decativate a Job ad
      tags:
        - jobs
    get:
      description: 'This method will return back enough information to determine if a job ad is runnig, and when it will stop.'
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: query
          name: job_id
          required: true
          type: integer
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              bill_method:
                enum:
                  - manual
                  - automatic
                type: string
              days_left:
                description: 'If the Job is not active, this value tells how many days the Job can be run for before payment.'
                type: integer
              expires_after:
                format: date
                type: string
            required:
              - bill_method
              - days_left
              - expires_after
            type: object
      summary: Get the status of a job ad.
      tags:
        - jobs
    post:
      consumes: []
      description: 'This method will only work if the add has days left of > 0, otherwise in theory it should return a url to a chargebee payment portal. '
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            properties:
              job_id:
                description: The id of the job ad to activate.
                type: string
            type: object
      responses:
        '201':
          description: Status 201
          headers:
            url:
              description: The board location of the active job ad.
              type: string
      summary: Activate a job ad.
      tags:
        - jobs
    x-restlet:
      section: JOBS
  /messages:
    get:
      description: 'This is the method that pulls down a conversation. For our site this is the main portion of the page. Internally we have other statuses like pending, and rejected, but a public users of our API doesn t have access to them.'
      parameters:
        - $ref: '#/parameters/end-user-token'
        - description: Who the conversation is with.
          in: query
          name: contact_id
          required: false
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              list:
                description: conversation in chronological order
                items:
                  properties:
                    date_sent:
                      format: date-time
                      type: string
                    message:
                      type: string
                    sender:
                      description: 'Who sent the message, the logged in user, or the contact.'
                      type: integer
                    status:
                      enum:
                        - read
                        - sent
                      type: string
                  required:
                    - date_sent
                    - message
                    - sender
                    - status
                  type: object
                type: array
            required:
              - list
            type: object
      summary: Get a conversation.
    post:
      consumes: []
      description: 'This will send a message to any other user. Currently there are no blocks or set restrictions if an API user just started guessing. In order to get a contact_id a contact user would need to pull that info from a resume, or a job ad.'
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            properties:
              contact:
                description: Who the message is being sent to.
                type: integer
              message:
                description: This can contain a small list of html tags.
                type: string
            required:
              - contact
              - message
            type: object
      responses:
        '200':
          description: Status 200
      summary: Send a message
      tags:
        - messages
    x-restlet:
      section: MESSAGES
  /messages/contacts:
    get:
      description: This method provides the information nedeed to display all the contacts within a folder. There is no get all contacts. Currently there is no public context where that information is needed.
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: query
          name: folder_id
          required: true
          type: integer
      responses:
        '200':
          description: |-
            The old return type looked like this.

            {"contacts":[{"id":84997,"company":"TEST","newest_date":"2018-06-19 00:17:52","contactname":"TEST"},{"contactname":"GLEN HAVEMAN","newest_date":"","company":"GLEN HAVEMAN","id":501819},{"id":487630,"company":"BRAD PAULSON","newest_date":"","contactname":"BRAD PAULSON"},{"id":471873,"company":"EDUARDO SANTOS","newest_date":"","contactname":"EDUARDO SANTOS"},{"contactname":"ABUBAKAR ALI","newest_date":"","company":"ABUBAKAR ALI","id":487392},{"company":"HARPREET BRAR","newest_date":"","id":548467,"contactname":"HARPREET BRAR"}]}
          schema:
            properties:
              list:
                items:
                  properties:
                    contact_company:
                      type: string
                    contact_id:
                      type: integer
                    contact_name:
                      type: string
                    last_received:
                      description: 'If they have sent you a message the newest one''s sent date will appear, otherwise it will be null.'
                      format: date-time
                      type: string
                  required:
                    - contact_company
                    - contact_id
                    - contact_name
                    - last_received
                  type: object
                type: array
            required:
              - list
            type: object
      summary: Get a list of contacts.
      tags:
        - messages
        - contacts
    patch:
      consumes: []
      description: 'By default all new contacts end up in Active, or Pending depending on who sent a message. Also users are unable to "delete" contacts, but you can simulate that using this endpoint to move to Trash.'
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            properties:
              contact_id:
                description: Contact to move.
                type: integer
              new_folder:
                type: integer
              old_folder:
                type: integer
            required:
              - contact_id
              - new_folder
              - old_folder
            type: object
      responses:
        '204':
          description: Status 204
      summary: Move a contact from one folder to another.
      tags:
        - messages
        - contacts
    x-restlet:
      section: MESSAGES
  /messages/count:
    get:
      description: |-
        This is a coneniene method provided for pages like the driver/recruiter dasboard. The same information could be obtained by getting the folder list, and adding the new count. 

        It can also be used to update individual contacts new count. An example of this is the page automatically checking for new messages every once in a while, on a per user basis. 
      parameters:
        - $ref: '#/parameters/end-user-token'
        - description: Just return a count of new messages from one contact.
          in: query
          name: contact_id
          required: false
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              count:
                type: integer
            required:
              - count
            type: object
      summary: Returns how many unread messages the user has.
      tags:
        - messages
    x-restlet:
      section: MESSAGES
  /messages/folders:
    delete:
      description: 'Active, Pending, Trash, and Deleted are special folders, and this command will ignore them.'
      parameters:
        - $ref: '#/parameters/end-user-token'
        - description: Deletes one folder at a time.
          in: query
          name: folder_id
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: Remove a custom folder.
      tags:
        - folders
        - messages
    get:
      description: 'This returns a list of all folders for this user, along with how many unread messages each folder contains. I belive the website''s behavior is 0 or 1 per contact, but it could be 1 per total messages. '
      parameters:
        - $ref: '#/parameters/end-user-token'
        - description: Just get a few folders. This takes the place of a specific new count function.
          in: query
          items:
            type: integer
          name: folder_id
          required: false
          type: array
          x-example: '?folder_id=2334&folder_id=3324'
      responses:
        '200':
          description: Status 200
          schema:
            description: |-
              Current version doesn't really work with the documentation.  because of variable folder names. It looks like this.

              {"Active":0,"Trash":0,"test 5":0,"Pending":0,"TrucksNcars":0,"new folder 2":0,"Deleted":0,"test1":0,"NewFolderTest":0}
            properties:
              list:
                items:
                  properties:
                    folder_id:
                      description: folder id
                      type: integer
                    name:
                      description: Folder Name
                      type: string
                    new_count:
                      description: How many new messages in that folder.
                      type: integer
                  required:
                    - folder_id
                    - name
                    - new_count
                  type: object
                type: array
            required:
              - list
            type: object
      summary: Get a list of folders
      tags:
        - messages
        - folders
    patch:
      consumes: []
      description: Special folders will ignore this.
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            properties:
              folder_id:
                type: integer
              new_name:
                type: string
            required:
              - new_name
            type: object
      responses:
        '204':
          description: Status 204
      summary: Update a folder name.
    post:
      consumes: []
      description: This method allows a user to add custom folders. These folders must have unique names.
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            description: |-
              You can use any name that has not already been taken. Certain folders are automatically created, the first time a message is sent or recieved. The names of these folders are reserved and cannot be added, modified or deleted.

              Currently they are Active, Pending, Deleted, and Trash.
            properties:
              name:
                description: Name of the folder to be added.
                type: string
            required:
              - name
            type: object
      responses:
        '201':
          description: Status 201
          headers:
            url:
              description: Location of the new folder.
              type: string
      summary: Add a folder
      tags:
        - messages
        - folders
    x-restlet:
      section: MESSAGES
  /profiles:
    get:
      parameters:
        - $ref: '#/parameters/end-user-token'
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/profile_response'
      summary: Get their profile
      tags:
        - profiles
    patch:
      consumes: []
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/profile_request'
      responses:
        '204':
          description: Status 204
      summary: Update a profile.
      tags:
        - profiles
    post:
      consumes: []
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/profile_request'
      responses:
        '201':
          description: Status 201
          headers:
            url:
              type: string
      summary: Create a profile
      tags:
        - profiles
    x-restlet:
      section: PROFILES
  /profiles/mobile_carriers:
    get:
      parameters:
        - in: query
          name: carrier_id
          required: false
          type: integer
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              carrier_id:
                type: integer
              carrier_name:
                type: string
            required:
              - carrier_id
              - carrier_name
            type: object
      summary: Get a list of mobile_carriers.
      tags:
        - profiles
    x-restlet:
      section: PROFILES
  /profiles/options:
    delete:
      parameters:
        - $ref: '#/parameters/end-user-token'
      responses:
        '204':
          description: Status 204
      summary: Marks the user as opted out.
      tags:
        - optins
        - profiles
    get:
      parameters:
        - $ref: '#/parameters/end-user-token'
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              status:
                enum:
                  - optin
                  - noresponse
                  - optout
                type: string
            required:
              - status
            type: object
      summary: Returns the users optin status.
      tags:
        - profiles
        - optins
    patch:
      parameters:
        - $ref: '#/parameters/end-user-token'
      responses:
        '204':
          description: Status 204
      summary: Mark a profile as opted in.
      tags:
        - optins
        - profiles
    post:
      consumes: []
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            properties:
              optin_code:
                description: A text string with the code sent.
                type: string
            required:
              - optin_code
            type: object
      responses:
        '200':
          description: Status 200
      summary: Creates and sends an optin code.
      tags:
        - optins
        - profiles
    x-restlet:
      section: PROFILES
  /resumes:
    delete:
      description: No extra information is needed because we only allow one resume per account.
      parameters:
        - $ref: '#/parameters/end-user-token'
      responses:
        '204':
          description: Status 204
      summary: Delete the user's resume
      tags:
        - resumes
    get:
      parameters:
        - $ref: '#/parameters/end-user-token'
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/resume_data'
      summary: Get the user's resume.
      tags:
        - resumes
    patch:
      consumes: []
      description: each user only has 1 resume.
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/resume_data_optional'
      responses:
        '200':
          description: Status 200
      summary: Update the user's resume.
      tags:
        - resumes
    post:
      consumes: []
      parameters:
        - $ref: '#/parameters/end-user-token'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/resume_data'
      responses:
        '201':
          description: Status 200
          headers:
            url:
              description: Link to the newly created resume.
              type: string
      summary: Submit the user's resume.
      tags:
        - resumes
    x-restlet:
      section: RESUMES
  /resumes/boards:
    get:
      description: 'Behind the scenes a resume goes through an appoval process before it will show up on a board. This could be a few seconds, or a few days. The resume poster can always se their resume, but until it is approved the resume won''t be displayed on the board.'
      parameters:
        - $ref: '#/parameters/end-user-token-optional'
        - description: A list of state codes.
          in: query
          items:
            maxLength: 2
            minLength: 2
            type: string
          name: state
          required: false
          type: array
          x-example: '?state="MO,AR,IL,KY"'
        - description: If this option is included we will use the first state in the array.
          in: query
          maxLength: 20
          name: city
          required: false
          type: string
        - default: 30
          description: Will be set if city is.
          in: query
          maximum: 30
          minimum: 1
          name: radius
          required: false
          type: integer
        - enum:
            - other
            - student
            - company
            - owner/operator
          in: query
          name: drive_type
          required: false
          type: string
        - description: You can have up to an additional 4 custom trailers of a length of 6 or less each.
          in: query
          items:
            enum:
              - V
              - R
              - F
              - AC
              - HOP
              - TANK
              - S
            type: string
          maxItems: 6
          minItems: 1
          name: trailer_experience
          required: false
          type: array
        - description: 'This is a list of possible regions. This matches the regions from searching and posting a job ad on our website. I am adding it to the API with the assumption that we can expand our resume regions to match. This should aviod some confusion and weirdness. An example would be alert options. '
          enum:
            - east caost
            - west coast
            - mid west
            - nation wide
            - north east
            - north west
            - south east
            - south west
            - local
          in: query
          name: driver_region
          required: false
          type: string
        - enum:
            - team
            - single
          in: query
          name: team_preference
          required: false
          type: string
        - enum:
            - local
            - OTR
          in: query
          name: driver_distance
          required: false
          type: string
        - in: query
          minimum: 0
          name: driver_experience
          required: false
          type: integer
        - in: query
          name: page_number
          required: false
          type: integer
        - description: Results per page.
          in: query
          maximum: 100
          minimum: 1
          name: item_count
          required: false
          type: integer
      responses:
        '200':
          description: Status 200
          schema:
            properties:
              list:
                items:
                  $ref: '#/definitions/resume_board_data'
                type: array
              page_number:
                type: integer
              total_items:
                type: integer
              total_pages:
                type: integer
            required:
              - list
              - page_number
              - total_items
              - total_pages
            type: object
      summary: Get a list of Resumes
      tags:
        - resumes
    x-restlet:
      section: RESUMES
produces:
  - application/json
schemes:
  - https
security:
  - api_key: []
securityDefinitions:
  api_key:
    description: This token needs to be sent as a HTTP header argument in every request to our API.
    in: header
    name: api-token
    type: apiKey
swagger: '2.0'
x-restlet:
  sections:
    ALERTS: {}
    END_USER_AUTHENTICATIONS: {}
    FAVORITES: {}
    JOBS: {}
    MESSAGES: {}
    PROFILES: {}
    RESUMES: {}
    common_definitions: {}
