basePath: /v1
consumes:
  - application/json
host: www.truckersearch.com
info:
  contact:
    email: support@truckersearch.com
  description: |-
    In order to use the Trucker Search API please first contact us to get an API Token. This token needs to be sent as a HTTP header argument in every request to our API.

    api-token=“SECRET KEY”

    Please keep your api-token a secret. If the token is compromised please contact us to get a new one.

    This api token authenticates your application and gives it access to the API.

    The API token should not be confused with the end-user-token. That token is given to you via the end_user_authentications endpoint when the user logs in. This token is needed in order to use certain features, and get certain sensitive information.

    Both Tokens are stateless, and delivered via the HTTP headers.
  title: Trucker Search API
  version: '1.0'
  x-logo:
    url: 'https://www.truckersearch.com/home/images/logo-2015.png'
produces:
  - application/json
responses:
  error_422:
    description: Unprocessable Entity. More information provided in the return object.
    schema:
      $ref: '#/definitions/error_object'
  object_created:
    description: Object created check the headers for a reference URL.
    schema:
      $ref: '#/definitions/create_status'
schemes:
  - https
security:
  - api_key: []
securityDefinitions:
  api_key:
    description: This token needs to be sent as a HTTP header argument in every request to our API.
    in: header
    name: api-token
    type: apiKey
swagger: '2.0'
x-restlet:
  sections:
    ALERTS: {}
    END_USER_AUTHENTICATIONS: {}
    FAVORITES: {}
    JOBS: {}
    LOCATIONS: {}
    MESSAGES: {}
    Mobile Update: {}
    Optins: {}
    PROFILES: {}
    RESUMES: {}
    common_definitions: {}
parameters:
  end-user-token:
    in: header
    name: end-user-token
    required: true
    type: string
  end-user-token-optional:
    in: header
    name: end-user-token
    required: false
    type: string
paths:
  /alerts:
    delete:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: query
          name: alert_id
          required: true
          type: integer
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Delete an alert.
      tags:
        - alerts
    get:
      description: Get a list of alerts. You can optionally limit the list by specifying alerts by their alert_id.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - collectionFormat: multi
          description: only get a subset of alerts. As this is a get request this is specified as a query string parameter
          in: query
          items:
            type: integer
          name: alert_id
          required: false
          type: array
        - description: Currently only resume type is supported.
          enum:
            - resume
            - job
          in: query
          name: search_type
          required: true
          type: string
        - description: Chooses the medium to send the alert through. Push is not yet implemented.
          enum:
            - email
            - text
            - push
          in: query
          name: notification_medium
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/inline_response_200'
      summary: STAGE=UNKNOWN Get a list of alerts.
      tags:
        - alerts
    post:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/alert_request_object'
      responses:
        '201':
          $ref: '#/responses/object_created'
      summary: STAGE=UNK Create a new alert.
      tags:
        - alerts
    x-restlet:
      section: ALERTS
  /end_user_authentications:
    delete:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: Log out.
      tags:
        - end_user_authentications
    get:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/inline_response_200_1'
      summary: Get a users status.
      tags:
        - end_user_authentications
    post:
      consumes: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/body'
      responses:
        '201':
          description: Status 201
          schema:
            $ref: '#/definitions/error_object'
        '422':
          description: Status 422
          schema:
            $ref: '#/definitions/inline_response_422'
      summary: Log in.
      tags:
        - end_user_authentications
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  /end_user_authentications/email:
    patch:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/body_2'
      responses:
        '204':
          description: Status 204
      summary: Update Email
      tags:
        - end_user_authentications
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  /end_user_authentications/passwords:
    get:
      parameters:
        - in: query
          name: email_address
          required: true
          type: string
      responses:
        '204':
          description: This will return successful even if we do not have the e-mail address in our records.
      summary: STAGE=UNK Forgot password
      tags:
        - end_user_authentications
    patch:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/body_1'
      responses:
        '204':
          description: Status 204
      summary: Update Password
      tags:
        - end_user_authentications
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  /end_user_authentications/social_login:
    post:
      description: 'Logs in or creates a new account for the user based on their email. "new_account" is what indicates if a new account was created, or if an existing account was used to login.'
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/social_login_credentials'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/social-login-end-user-token'
        '422':
          $ref: '#/responses/error_422'
      summary: STAGE=Private Social Login/Create Account
      tags:
        - end_user_authentications
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  /end_user_authentications/users:
    post:
      consumes: []
      description: Create a new user
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/body_3'
      responses:
        '201':
          description: Status 201
          schema:
            $ref: '#/definitions/inline_response_201'
      summary: Create user
      tags:
        - end_user_authentications
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  /favorites:
    delete:
      parameters:
        - enum:
            - job
            - resume
          in: query
          name: favorite_type
          required: true
          type: string
        - in: query
          name: favorite_id
          required: true
          type: integer
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Remove  a favorite.
      tags:
        - favorites
    get:
      parameters:
        - default: resume
          enum:
            - resume
            - job
          in: query
          name: favorite_type
          required: false
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/get_favorite_ids'
      summary: STAGE=UNK Get the favorites.
      tags:
        - favorites
    post:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/body_4'
      responses:
        '201':
          description: Status 201
      summary: STAGE=UNK Add a favorite
      tags:
        - favorites
    x-restlet:
      section: FAVORITES
  /favorites/count:
    get:
      parameters:
        - enum:
            - resume
            - job
          in: query
          name: favorite_type
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/inline_response_200_2'
      summary: STAGE=UNK Get a count of favorites
      tags:
        - favorites
    x-restlet:
      section: FAVORITES
  /jobs:
    delete:
      parameters:
        - description: 'You can only delete 1 job at a time, and only if that Job is both not active, and does not have any days left.'
          in: query
          name: job_id
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Delete the users job ad.
      tags:
        - jobs
    get:
      description: Get a list of the logged in users jobs.
      parameters:
        - description: Optionally just return a few jobs.
          in: query
          name: job_id
          required: false
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/job_list_user'
      summary: STAGE=UNK Get logged in user's job ads.
      tags:
        - jobs
    patch:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/job_data_patch'
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Update a Job ad.
      tags:
        - jobs
    post:
      consumes: []
      description: Create a new Job ad for the currently logged in user.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/job_data'
      responses:
        '201':
          description: Status 201
          headers:
            url:
              description: A url pointing to the newly created resource.
              type: string
              x-example: .../jobs/?id=1234
      summary: STAGE=UNK Post a new job ad.
      tags:
        - jobs
    x-restlet:
      section: JOBS
  /jobs/boards:
    get:
      description: Gets a list of other people's jobs.
      parameters:
        - in: query
          name: state
          required: false
          type: string
        - in: query
          name: 24x7_dispatch
          required: false
          type: boolean
        - in: query
          name: all_miles_paid
          required: false
          type: boolean
        - in: query
          name: company_fuel_card
          required: false
          type: boolean
        - in: query
          name: dental_insurance
          required: false
          type: boolean
        - in: query
          name: detention_layover_pay
          required: false
          type: boolean
        - in: query
          name: direct_deposit
          required: false
          type: boolean
        - in: query
          name: equipment_age
          required: false
          type: number
        - in: query
          name: free_roadside_assistance
          required: false
          type: boolean
        - in: query
          name: health_insurance
          required: false
          type: boolean
        - in: query
          name: home
          required: false
          type: string
        - in: query
          name: lease_purchase_available
          required: false
          type: boolean
        - in: query
          name: life_insurance
          required: false
          type: boolean
        - in: query
          name: no_touch_freight
          required: false
          type: boolean
        - in: query
          name: paid
          required: false
          type: string
        - in: query
          name: paid_holidays
          required: false
          type: boolean
        - in: query
          name: paid_sick_time
          required: false
          type: boolean
        - in: query
          name: paid_vacation
          required: false
          type: boolean
        - in: query
          name: pet_friendly
          required: false
          type: boolean
        - in: query
          name: referral_bonuses
          required: false
          type: boolean
        - in: query
          name: rider_program
          required: false
          type: boolean
        - in: query
          name: round_trip_loads
          required: false
          type: boolean
        - in: query
          name: safety_bonus
          required: false
          type: boolean
        - in: query
          name: sign_on_bonus
          required: false
          type: number
        - description: 'If specified it will return either only local jobs, or only OTR jobs.'
          enum:
            - local
            - OTR
          in: query
          name: distance_preference
          required: false
          type: string
        - description: 'This is a list of possible regions. This matches the regions from searching and posting a job ad on our website. I am adding it to the API with the assumption that we can expand our resume regions to match. This should aviod some confusion and weirdness. An example would be alert options. '
          enum:
            - east coast
            - west coast
            - mid west
            - nationwide
            - north east
            - north west
            - south east
            - south west
            - local
          in: query
          name: region_preference
          required: false
          type: string
        - description: This will return just 1 job.
          in: query
          name: job_id
          required: false
          type: integer
        - in: query
          name: page_number
          required: false
          type: integer
        - default: 50
          description: Results per page.
          in: query
          maximum: 100
          minimum: 1
          name: item_count
          required: false
          type: integer
        - description: Only return a team or a single driver
          enum:
            - single
            - team
          in: query
          name: team_preference
          required: false
          type: string
        - in: header
          name: end-user-token
          required: false
          type: string
      responses:
        '200':
          description: returns a list of jobs.
          schema:
            $ref: '#/definitions/job_list'
      summary: Get a list of jobs
      tags:
        - jobs
    x-restlet:
      section: JOBS
  /jobs/status:
    delete:
      parameters:
        - description: The job ad to deactivate.
          in: query
          name: job_id
          required: true
          type: integer
        - in: header
          name: end-user-auth
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Decativate a Job ad
      tags:
        - jobs_status
    get:
      description: 'This method will return back enough information to determine if a job ad is runnig, and when it will stop.'
      parameters:
        - in: query
          name: job_id
          required: true
          type: integer
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/inline_response_200_3'
      summary: STAGE=UNK Get the status of a job ad.
      tags:
        - jobs_status
    post:
      consumes: []
      description: 'This method will only work if the add has days left of > 0, otherwise in theory it should return a url to a chargebee payment portal. '
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/body_5'
      responses:
        '201':
          description: Status 201
          headers:
            url:
              description: The board location of the active job ad.
              type: string
      summary: STAGE=UNK Activate a job ad.
      tags:
        - jobs_status
    x-restlet:
      section: JOBS
  /messages:
    get:
      description: |-
        This is the method that pulls down a conversation. Eeach user can only  only have one conversation per contact. 
         Hidden messages are returned along with the  normal sent & read messages. This gives you the API developer the option to show  them if requested by the user, as well as updating individual messages. Hidden messages  ignore the mark_as_read flag. 
          Internally we have other statuses like pending, and rejected, but public users  of our API don't have access to them.
      parameters:
        - description: Who the conversation is with.
          in: query
          name: contact_id
          required: true
          type: number
        - default: 'yes'
          description: This will mark all messages in the conversation as read for the logged in user.
          enum:
            - 'yes'
            - 'no'
          in: query
          name: mark_as_read
          required: false
          type: string
        - default: 'no'
          description: This gets the latest new message from the specified contact. It will return an empty list if there are no new messages.
          enum:
            - 'yes'
            - 'no'
          in: query
          name: newest_message_only
          required: false
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/conversation_list'
      summary: Get a conversation.
      tags:
        - messages
    patch:
      consumes: []
      description: ¨
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/body_7'
      responses:
        '202':
          description: Status 202
          schema:
            $ref: '#/definitions/conversation_list'
      summary: Alter a message status
      tags:
        - messages
    post:
      consumes: []
      description: 'This will send a message to any other user. Currently there are no blocks or set restrictions if an API user just started guessing. In order to get a contact_id a contact user would need to pull that info from a resume, or a job ad.'
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/body_6'
      responses:
        '202':
          description: Status 202
          schema:
            $ref: '#/definitions/conversation_list'
      summary: Send a message
      tags:
        - messages
    x-restlet:
      section: MESSAGES
  /messages/contacts:
    get:
      description: This method provides the information nedeed to display all the contacts within a folder.
      parameters:
        - in: query
          name: folder_id
          required: true
          type: integer
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/inline_response_200_4'
      summary: Get a list of contacts for that folder.
      tags:
        - messages_contacts
    patch:
      consumes: []
      description: |
        By default all new contacts are able to send messages to the user. By blocking a contact, all future messages from the contact will be marked as user_block.
          Also by design, users are unable to "delete" contacts, but this action will be  simulated using this endpoint. In order to hide the conversation move it to the Trash folder.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/body_8'
      responses:
        '204':
          description: Status 204
      summary: Move a contact from one folder to another or block the contact.
      tags:
        - messages_contacts
    x-restlet:
      section: MESSAGES
  /messages/count:
    get:
      description: |-
        This is a coneniene method provided for pages like the driver/recruiter dasboard. The same information could be obtained by getting the folder list, and adding the new count. 

        It can also be used to update individual contacts new count. An example of this is the page automatically checking for new messages every once in a while, on a per user basis. 
      parameters:
        - description: Just return a count of new messages from one contact.
          in: query
          name: contact_id
          required: false
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/inline_response_200_2'
      summary: Returns how many unread messages the user has.
      tags:
        - messages
    x-restlet:
      section: MESSAGES
  /messages/folders:
    delete:
      description: 'Active, Pending, Trash, and Deleted are special folders, and this command will ignore them.'
      parameters:
        - description: Deletes one folder at a time.
          in: query
          name: folder_id
          required: true
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: Remove a custom folder.
      tags:
        - messages_folders
    get:
      description: 'This returns a list of all folders for this user, along with how many unread messages each folder contains. I belive the website''s behavior is 0 or 1 per contact, but it could be 1 per total messages. '
      parameters:
        - collectionFormat: multi
          description: Just get a few folders. This takes the place of a specific new count function.
          in: query
          items:
            type: integer
          name: folder_id
          required: false
          type: array
          x-example: '?folder_id=2334&folder_id=3324'
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/inline_response_200_5'
      summary: Get a list of folders
      tags:
        - messages_folders
    post:
      consumes: []
      description: This method allows a user to add custom folders. These folders must have unique names.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/body_9'
      responses:
        '201':
          description: Status 201
          schema:
            $ref: '#/definitions/inline_response_201_1'
      summary: Add a folder
      tags:
        - messages_folders
    x-restlet:
      section: MESSAGES
  /mobile_updates:
    get:
      parameters:
        - in: query
          name: email_address
          required: false
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/inline_response_200_6'
      summary: Get any available update information.
      tags:
        - mobile update
    x-restlet:
      section: Mobile Update
  /optins:
    delete:
      description: By only sending in their EUA token you would be requesting to opt them out of everything.
      parameters:
        - enum:
            - email
            - text
            - push
          in: query
          name: notification_medium
          required: false
          type: string
        - default: all
          description: This would allow granular optouts. Currently ignored.
          enum:
            - all
            - alerts
          in: query
          name: notification_channel
          required: false
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Opt someone out of one or more mediums and channels.
    get:
      parameters:
        - description: To limit your list to just one medium.
          enum:
            - email
            - text
            - push
          in: query
          name: notification_medium
          required: false
          type: string
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/inline_response_200_7'
      summary: STAGE=UNKNOWN Get the optin status of a user.
    patch:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/body_11'
      responses:
        '204':
          description: Status 204
      summary: STAGE=UNK Confirm an optin.
    post:
      consumes: []
      description: 'Currently only Push notifications are implemented. With them a post creates and approves the optin. Later on when text/email is ported post will create the optin with the status of ''no response'' meaning they haven''t replied with the propper code, or clicked an authorization link.'
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/body_10'
      responses:
        '201':
          description: Status 201
      summary: STAGE=UNKNOWN Submit a request to be opted in.
      tags:
        - optins
    x-restlet:
      section: Optins
  /profiles:
    get:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/profile_response'
      summary: STAGE=UNK Get their profile
      tags:
        - profiles
    patch:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/profile_request'
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/profile_patch_response'
      summary: STAGE=UNK Update a profile.
      tags:
        - profiles
    post:
      consumes: []
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/profile_request'
      responses:
        '201':
          description: Status 201
          headers:
            url:
              type: string
      summary: STAGE=UNK Create a profile
      tags:
        - profiles
    x-restlet:
      section: PROFILES
  /resumes:
    delete:
      description: No extra information is needed because we only allow one resume per account.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '204':
          description: Status 204
      summary: Delete the user's resume
      tags:
        - resumes
    get:
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/resume_data_optional'
      summary: Get the user's resume.
      tags:
        - resumes
    patch:
      consumes: []
      description: Each user only has 1 resume. Setting any field to null will set it to a null or for a number 0.
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/resume_data_optional'
      responses:
        '200':
          description: Status 200
      summary: Update the user's resume.
      tags:
        - resumes
    post:
      consumes: []
      description: 'You must send in at least one valid request parameter in the body. It doesn''t matter which one, but at least one.'
      parameters:
        - in: header
          name: end-user-token
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/resume_data_optional'
          x-examples:
            application/json: |-
              {
                "experience": {
                  "current_employer": "Jim Swift's Logistics"
                }
              }
      responses:
        '201':
          description: Object created
          headers:
            Location:
              description: Link to the newly created resume.
              type: string
      summary: Submit the user's resume.
      tags:
        - resumes
    x-restlet:
      section: RESUMES
  /resumes/boards:
    get:
      description: 'Behind the scenes a resume goes through an appoval process before it will show up on a board. This could be a few seconds, or a few days. The resume poster can always se their resume, but until it is approved the resume won''t be displayed on the board.'
      parameters:
        - description: 'If included all other options will be ignored, and a list of 1 resume will be returned. Also the full contact information will be returned with this single resume.'
          in: query
          name: resume_id
          required: false
          type: integer
        - collectionFormat: multi
          description: A list of state codes.
          in: query
          items:
            maxLength: 2
            minLength: 2
            type: string
          name: state
          required: false
          type: array
          x-example: '?state="MO,AR,IL,KY"'
        - description: If this option is included we will use the first state in the array.
          in: query
          maxLength: 20
          name: city
          required: false
          type: string
        - default: 30
          description: Will be set if city is.
          in: query
          maximum: 300
          minimum: 1
          name: radius
          required: false
          type: integer
        - enum:
            - other
            - student
            - company driver
            - owner operator
          in: query
          name: position
          required: false
          type: string
        - collectionFormat: multi
          description: You can have up to an additional 4 custom trailers of a length of 6 or less each.
          in: query
          items:
            enum:
              - V
              - R
              - F
              - AC
              - HOP
              - TANK
              - S
            type: string
          maxItems: 6
          minItems: 1
          name: trailer_experience
          required: false
          type: array
        - description: 'This is a list of possible regions. This matches the regions from searching and posting a job ad on our website. I am adding it to the API with the assumption that we can expand our resume regions to match. This should aviod some confusion and weirdness. An example would be alert options. '
          enum:
            - east coast
            - west coast
            - midwest
            - nationwide
            - north east
            - north west
            - south east
            - south west
            - local
          in: query
          name: region_preference
          required: false
          type: string
        - enum:
            - team
            - single
          in: query
          name: team_preference
          required: false
          type: string
        - enum:
            - local
            - OTR
          in: query
          name: distance_preference
          required: false
          type: string
        - in: query
          minimum: 0
          name: total_years_experience
          required: false
          type: integer
        - enum:
            - none
            - A
            - B
            - '1'
            - '2'
            - '3'
          in: query
          name: license_type
          required: false
          type: string
        - in: query
          name: page_number
          required: false
          type: integer
        - description: You can sort on any field in the return object.
          in: query
          name: list_order
          required: false
          type: string
        - enum:
            - '-asc'
            - '-desc'
          in: query
          name: list_direction
          required: false
          type: string
        - description: Results per page.
          in: query
          maximum: 100
          minimum: 1
          name: item_count
          required: false
          type: integer
        - in: header
          name: end-user-token
          required: false
          type: string
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/inline_response_200_8'
      summary: STAGE=UNK Get a list of Resumes
      tags:
        - resumes
    x-restlet:
      section: RESUMES
  /resumes/exists:
    get:
      description: |-
        Returns the status of a users resume:
        NOT-FOUND : No resume has been created
        DELETED : There was a resume but the user deleted it
        UPDATED : Pending approval
        APPROVED : Available in search results
      parameters: []
      responses:
        '200':
          description: Status 200
          schema:
            $ref: '#/definitions/inline_response_200_9'
      summary: Returns status of a users resume
      tags:
        - resumes
    x-restlet:
      section: RESUMES
definitions:
  alert_request_object:
    properties:
      notification_medium:
        description: Push is not yet implemented.
        enum:
          - email
          - text
          - push
        type: string
      only_new:
        description: 'Whether to send both new and updated resumes, or just new resumes.'
        type: boolean
      search_parameters:
        $ref: '#/definitions/resume_search'
      search_type:
        default: resume
        enum:
          - job
          - resume
        type: string
      send_frequency:
        description: Frequency in minutes that the alert is sent. We stop sending alerts between 12am and 3am CST.
        type: integer
    required:
      - notification_medium
      - only_new
      - search_parameters
      - send_frequency
    type: object
    x-restlet:
      section: ALERTS
  alert_response_object:
    properties:
      alert_id:
        type: integer
      last_sent:
        description: Last time the alert was sent.
        format: date-time
        type: string
      notification_medium:
        enum:
          - email
          - text
          - push
        type: string
      only_new:
        description: 'Whether to send both new and updated resumes, or just new resumes.'
        type: boolean
      search_parameters:
        $ref: '#/definitions/resume_search'
      send_frequency:
        description: Frequency in minutes that the alert is sent.
        type: integer
    required:
      - alert_id
      - last_sent
      - notification_medium
      - only_new
      - search_parameters
      - send_frequency
    type: object
    x-restlet:
      section: ALERTS
  body_1:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    required:
      - new_password
      - old_password
    type: object
  body_10:
    properties:
      notification_channel:
        default: all
        description: 'Currently defaults to all, and is ignored. When we start using it it will be for opting people out or in one list like alerts, or messages, but not others.'
        type: string
      notification_medium:
        description: We currently only accept push
        enum:
          - email
          - text
          - push
        type: string
      tokens:
        $ref: '#/definitions/optins_tokens'
    required:
      - notification_medium
    type: object
  body_11:
    properties:
      notification_medium:
        enum:
          - email
          - text
        type: string
      verification_code:
        description: 'This code is generated on a POST, and will arrive via the same medium it was designated for.'
        type: string
    required:
      - notification_medium
      - verification_code
    type: object
  body_2:
    properties:
      email:
        type: string
    required:
      - email
    type: object
  body_3:
    properties:
      email:
        type: string
      password:
        type: string
      status:
        description: It defaults to employer.
        enum:
          - employer
          - driver
        type: string
    required:
      - email
      - password
    type: object
  body_4:
    properties:
      favorite_id:
        description: The id of the favorite to add.
        type: integer
      type:
        enum:
          - job
          - resume
        type: string
    required:
      - favorite_id
      - type
    type: object
  body_5:
    properties:
      job_id:
        description: The id of the job ad to activate.
        type: string
    type: object
  body_6:
    properties:
      contact_id:
        description: Who the message is being sent to.
        type: integer
      message:
        description: This can contain a small list of html tags.
        type: string
    required:
      - contact_id
      - message
    type: object
  body_7:
    properties:
      contact_id:
        description: Which contact's conversation.
        type: integer
      sent_date:
        description: 'This should be a YYYY-MM-DD HH:MM:SS string like in a conversation message.'
        type: string
      status:
        description: the new status.
        enum:
          - user_block
          - sent
          - read
        type: string
    required:
      - contact_id
      - sent_date
      - status
    type: object
  body_8:
    properties:
      block_contact:
        description: |-
          Setting this to true will set the status of incomming messages to 'user_block'. It will also set the conversation status to 'user_block'. 
           Setting it to false will remove this filter. It will also revert the conversation status. It will not change the status of messages already sent by the contact.
        type: boolean
      contact_id:
        description: Contact to move.
        type: integer
      new_folder:
        description: 'If you include either the new or old folder, the other must be included.'
        type: integer
      old_folder:
        description: 'If you include either the new or old folder, the other must be included.'
        type: integer
    required:
      - contact_id
    type: object
  body_9:
    description: |-
      You can use any name that has not already been taken. Certain folders are automatically created, the first time a message is sent or recieved. The names of these folders are reserved and cannot be added, modified or deleted.

      Currently they are Active, Pending, Deleted, and Trash.
    properties:
      name:
        description: Name of the folder to be added.
        type: string
    required:
      - name
    type: object
  body:
    properties:
      login:
        type: string
      realm:
        description: Choose what type of login this is.
        enum:
          - email
          - username
        type: string
      secret:
        type: string
    required:
      - login
      - realm
      - secret
    type: object
  conversation_list_list:
    properties:
      date_sent:
        format: date-time
        type: string
      message:
        type: string
      sender:
        description: 'Who sent the message, the logged in user, or the contact.'
        type: integer
      status:
        enum:
          - read
          - sent
          - user_block
        type: string
    required:
      - date_sent
      - message
      - sender
      - status
    type: object
  conversation_list:
    properties:
      list:
        description: conversation in chronological order
        items:
          $ref: '#/definitions/conversation_list_list'
        type: array
    required:
      - list
    type: object
    x-restlet:
      section: MESSAGES
  create_status:
    properties:
      success:
        type: integer
    type: object
    x-restlet:
      section: common_definitions
  error_object:
    example: |-
      {
        "code": 1,
        "error": "Generic Validation",
        "description": "The e-mail address must be valid."
      }
    properties:
      code:
        type: integer
      description:
        type: string
      error:
        type: string
    required:
      - code
      - description
      - error
    type: object
    x-restlet:
      section: common_definitions
  get_favorite_ids:
    properties:
      favorite_id:
        description: A subset of this users favorite resumes or job ids
        items:
          type: string
        type: array
    type: object
    x-restlet:
      section: common_definitions
  inline_response_200_1:
    properties:
      status:
        enum:
          - premium_employer
          - driver
          - employer
          - not_logged_in
          - overdue_employer
        type: string
    required:
      - status
    type: object
  inline_response_200_2:
    properties:
      count:
        type: integer
    required:
      - count
    type: object
  inline_response_200_3:
    properties:
      bill_method:
        enum:
          - manual
          - automatic
        type: string
      days_left:
        description: 'If the Job is not active, this value tells how many days the Job can be run for before payment.'
        type: integer
      expires_after:
        format: date
        type: string
    required:
      - bill_method
      - days_left
      - expires_after
    type: object
  inline_response_200_4_list:
    properties:
      contact_company:
        type: string
      contact_id:
        type: integer
      contact_name:
        type: string
      conversation_status:
        description: |-
          Sent means that the contact sent your user a message, but it has not yet been read by them. Messages are automatically marked as read when the GET /messages endpoint is called for that conversation. This will return null when the contact has not yet sent a message back to your user. 
            user_block means that the user has blocked this contact. You can use  the patch method to remove the block.
        enum:
          - sent
          - read
          - user_block
        type: string
      last_received:
        description: 'If the contact has sent your logged in user a message, then the newest message''s sent date will appear, otherwise it will be null.'
        format: date-time
        type: string
    required:
      - contact_company
      - contact_id
      - contact_name
    type: object
  inline_response_200_4:
    properties:
      list:
        items:
          $ref: '#/definitions/inline_response_200_4_list'
        type: array
    required:
      - list
    type: object
  inline_response_200_5_list:
    properties:
      folder_id:
        description: folder id
        type: integer
      name:
        description: Folder Name
        type: string
      new_count:
        description: How many new messages in that folder.
        type: integer
    required:
      - folder_id
      - name
      - new_count
    type: object
  inline_response_200_5:
    description: |-
      Current version doesn't really work with the documentation.  because of variable folder names. It looks like this.

      {"Active":0,"Trash":0,"test 5":0,"Pending":0,"TrucksNcars":0,"new folder 2":0,"Deleted":0,"test1":0,"NewFolderTest":0}
    properties:
      list:
        items:
          $ref: '#/definitions/inline_response_200_5_list'
        type: array
    required:
      - list
    type: object
  inline_response_200_6:
    properties:
      bullet_points:
        items:
          default: '[]'
          type: string
        type: array
      information_url:
        default: 'null'
        type: string
      message:
        default: 'null'
        type: string
      title:
        default: 'null'
        type: string
      update_url:
        default: 'null'
        type: string
    required:
      - bullet_points
      - information_url
      - message
      - title
      - update_url
    type: object
  inline_response_200_7_list:
    properties:
      notification_channel:
        default: all
        type: string
      notification_medium:
        enum:
          - email
          - text
          - push
        type: string
      status:
        enum:
          - optin
          - optout
          - no response
          - no record
        type: string
    required:
      - notification_channel
      - notification_medium
      - status
    type: object
  inline_response_200_7:
    properties:
      list:
        items:
          $ref: '#/definitions/inline_response_200_7_list'
        type: array
    required:
      - list
    type: object
  inline_response_200_8:
    properties:
      list:
        items:
          $ref: '#/definitions/resume_board_data'
        type: array
      page_number:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    required:
      - list
      - page_number
      - total_items
      - total_pages
    type: object
  inline_response_200_9:
    properties:
      status:
        type: string
    required:
      - status
    type: object
  inline_response_200:
    properties:
      list:
        items:
          $ref: '#/definitions/alert_response_object'
        type: array
    required:
      - list
    type: object
  inline_response_201_1:
    properties:
      folder_id:
        type: integer
      name:
        type: string
    required:
      - folder_id
      - name
    type: object
  inline_response_201:
    description: 'Will automatically log them in, and return the needed token.'
    properties:
      end-user-token:
        description: Their token to show they are logged in.
        type: string
    required:
      - end-user-token
    type: object
  inline_response_422:
    properties:
      code:
        type: integer
      description:
        type: string
      error:
        type: string
    required:
      - code
      - description
      - error
    type: object
  job_data_contact:
    properties:
      address:
        maxLength: 64
        type: string
      city:
        maxLength: 45
        type: string
      contact:
        maxLength: 45
        type: string
      email:
        maxLength: 45
        type: string
      name:
        maxLength: 45
        type: string
      phone:
        type: integer
      state:
        maxLength: 2
        type: string
      website:
        maxLength: 500
        type: string
      zip:
        maxLength: 10
        type: string
    required:
      - contact
      - email
      - phone
    type: object
  job_data_patch_contact:
    description: As long as 1 sub element from contact or position is filled in this will be a valid request.
    properties:
      address:
        maxLength: 64
        type: string
      city:
        maxLength: 45
        type: string
      contact:
        maxLength: 45
        type: string
      email:
        maxLength: 45
        type: string
      name:
        maxLength: 45
        type: string
      phone:
        type: integer
      state:
        maxLength: 2
        type: string
      website:
        maxLength: 500
        type: string
      zip:
        maxLength: 10
        type: string
    type: object
  job_data_patch_perks:
    properties:
      24x7_dispatch:
        description: 24 x 7 dispatch.
        type: boolean
      all_miles_paid:
        description: Are all miles paid.
        type: boolean
      company_fuel_card:
        description: Company fuel card.
        type: boolean
      dental_insurance:
        description: Does this job offer dental insurance.
        type: boolean
      detention_layover_pay:
        description: Detention layover pay.
        type: boolean
      direct_deposit:
        description: Does this job offer direct deposit.
        type: boolean
      equipment_age:
        description: Equipment age.
        type: number
      free_roadside_assistance:
        description: Does this job offer free roadside assistance.
        type: boolean
      health_insurance:
        description: Does this job offer health insurance.
        type: boolean
      home:
        enum:
          - daily
          - weekly
          - biweekly
          - monthly
          - other
        type: string
      lease_purchase_available:
        description: Lease purchase available.
        type: boolean
      life_insurance:
        description: Does this job offer life insurance.
        type: boolean
      no_touch_freight:
        description: Does this job offer no touch freight.
        type: boolean
      paid:
        enum:
          - weekly
          - biweekly
          - monthly
          - other
        type: string
      paid_holidays:
        description: Does this job offer paid holidays.
        type: boolean
      paid_sick_time:
        description: Does this job offer paid sick time.
        type: boolean
      paid_vacation:
        description: Does this job offer paid vacation.
        type: boolean
      pet_friendly:
        description: Is this job pet friendly.
        type: boolean
      referral_bonuses:
        description: Does this job offer referral bonuses.
        type: boolean
      rider_program:
        description: Rider program.
        type: boolean
      round_trip_loads:
        description: Does this job offer round trip loads.
        type: boolean
      safety_bonus:
        description: Safety bonus.
        type: boolean
      sign_on_bonus:
        description: Sign on bonus.
        type: number
    type: object
  job_data_patch_position:
    description: As long as 1 sub element from contact or position is filled in this will be a valid request.
    properties:
      description:
        description: This can be long form text.
        type: string
      distance_preference:
        enum:
          - OTR
          - local
        type: string
      image_url:
        description: Sending in an empty string will cause us to regenerate a new image.
        type: string
      locations:
        items:
          type: string
        type: array
      region_preference:
        $ref: '#/definitions/regions'
      team_preference:
        enum:
          - single
          - team
        type: string
    type: object
  job_data_patch:
    properties:
      contact:
        $ref: '#/definitions/job_data_patch_contact'
      job_id:
        description: The Job ad to patch.
        type: integer
      perks:
        $ref: '#/definitions/job_data_patch_perks'
      position:
        $ref: '#/definitions/job_data_patch_position'
    required:
      - job_id
    type: object
    x-restlet:
      section: JOBS
  job_data_position:
    properties:
      Image_url:
        description: We will download the image from the URL. If no image is found we will automatically generate one. We accept an image file of up to 1MB in size. All images will be resized to 200x200. If this value is specified image_data cannot be used.
        type: string
      description:
        description: This can be long form text.
        type: string
      distance_preference:
        default: OTR
        enum:
          - OTR
          - local
        type: string
      image_data:
        description: Base64 string of image. Base64 data must decode into a valid jpg or png file no more than 1MB in size. All images will be resized to 200x200. If this value is specified image_url cannot be used.
        type: string
      locations:
        description: |-
          If included the array only accepts 2 digit state codes. MO, BC, AR, and so on. 

          How did Jon implement country level coding? I think at the time I said it should be done by the "front end", I am still for that, but if the hack is already in place in the backend I am open to leveraging it.
        items:
          type: string
        type: array
      region_preference:
        $ref: '#/definitions/regions'
      team_preference:
        default: single
        enum:
          - single
          - team
        type: string
    type: object
  job_data:
    properties:
      contact:
        $ref: '#/definitions/job_data_contact'
      perks:
        $ref: '#/definitions/job_data_patch_perks'
      position:
        $ref: '#/definitions/job_data_position'
    required:
      - contact
    type: object
    x-restlet:
      section: JOBS
  job_list_contact:
    description: The contact information for this ad.
    properties:
      address:
        maxLength: 64
        type: string
      city:
        maxLength: 45
        type: string
      contact:
        maxLength: 45
        type: string
      email:
        maxLength: 45
        type: string
      id:
        description: This is the id you would use to send a message to this employer. Only logged in users can see this.
        type: integer
      name:
        maxLength: 45
        type: string
      phone:
        type: integer
      state:
        maxLength: 2
        type: string
      website:
        maxLength: 500
        type: string
      zip:
        maxLength: 10
        type: string
    required:
      - address
      - city
      - contact
      - name
      - phone
      - state
      - zip
    type: object
  job_list_list:
    properties:
      contact:
        $ref: '#/definitions/job_list_contact'
      job_id:
        type: number
      perks:
        $ref: '#/definitions/job_data_patch_perks'
      position:
        $ref: '#/definitions/job_list_position'
      relevance:
        description: Search relevance score.
        type: integer
    required:
      - contact
      - job_id
      - position
    type: object
  job_list_position:
    properties:
      description:
        description: This is a large text field.
        type: string
      distance_preference:
        enum:
          - OTR
          - local
        type: string
      image_url:
        type: string
      region_preference:
        $ref: '#/definitions/regions'
      states:
        description: Currently we return the full state name for display purposes.
        items:
          type: string
        type: array
      team_preference:
        enum:
          - single
          - team
        type: string
    required:
      - description
      - distance_preference
      - image_url
      - region_preference
      - states
      - team_preference
    type: object
  job_list_user_contact:
    description: The contact information for this ad.
    properties:
      address:
        maxLength: 64
        type: string
      city:
        maxLength: 45
        type: string
      contact:
        maxLength: 45
        type: string
      email:
        maxLength: 45
        type: string
      name:
        maxLength: 45
        type: string
      phone:
        type: integer
      state:
        maxLength: 2
        type: string
      website:
        maxLength: 500
        type: string
      zip:
        maxLength: 10
        type: string
    required:
      - address
      - city
      - contact
      - name
      - phone
      - state
      - zip
    type: object
  job_list_user_list:
    properties:
      bill_method:
        description: Whether or not the add will automatically renew.
        enum:
          - manual
          - automatic
        type: string
      contact:
        $ref: '#/definitions/job_list_user_contact'
      days_left:
        description: 'A positive value indicates the ad is both inactive, and can be run for that number of days.'
        type: integer
      expires_after:
        description: If this date is set for today or in the future the job ad is currently active.
        format: date
        type: string
      job_id:
        type: number
      perks:
        $ref: '#/definitions/job_data_patch_perks'
      position:
        $ref: '#/definitions/job_list_user_position'
    required:
      - bill_method
      - contact
      - days_left
      - expires_after
      - job_id
      - position
    type: object
  job_list_user_position:
    properties:
      description:
        description: This is a large text field.
        type: string
      distance_preference:
        enum:
          - local
          - OTR
        type: string
      image_url:
        description: the uri path to the image.
        example: 'http://df.co/job_images/ASOETUHAOSENTUHAOENUTSH.png'
        maxLength: 32
        type: string
      locations:
        items:
          type: string
        type: array
      region_preference:
        $ref: '#/definitions/regions'
      team_preference:
        enum:
          - team
          - single
        type: string
    required:
      - description
      - distance_preference
      - image_url
      - region_preference
      - team_preference
    type: object
  job_list_user:
    properties:
      list:
        items:
          $ref: '#/definitions/job_list_user_list'
        type: array
      page_number:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    required:
      - list
      - page_number
      - total_items
      - total_pages
    type: object
    x-restlet:
      section: JOBS
  job_list:
    properties:
      list:
        items:
          $ref: '#/definitions/job_list_list'
        type: array
      page_number:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    required:
      - list
      - page_number
      - total_items
      - total_pages
    type: object
    x-restlet:
      section: JOBS
  mobile_carriers:
    enum:
      - Other/Unknown
      - AT&T
      - Verizon
      - Sprint
      - T-Mobile
      - US Cellular
      - Nextel
      - Virgin Mobile
      - Boost Mobile
      - Straight Talk
      - Tracfone
      - NET10
      - Metro PCS
      - Cricket
      - Rogers
      - Fido
      - Bell Mobility
      - Telus
      - Clearnet
      - Solo Mobile
      - Koodo Mobile
    type: string
    x-restlet:
      section: common_definitions
  optins_tokens:
    description: 'This is how you can add multiple push notifications at once, or for systems that have multiple tokens required.'
    example: '"\"tokens\": { \"ios\": \"12345678\", \"android\": \"5432344\" } "'
    properties:
      $SERVICE_OR_KEY_NAME:
        description: 'Fill in the key in the value, and the service in the name. Look at our examples for clarification.'
        type: string
    required:
      - $SERVICE_OR_KEY_NAME
    type: object
  positions:
    enum:
      - other
      - student
      - company driver
      - owner operator
    type: string
    x-restlet:
      section: common_definitions
  profile_patch_response:
    properties:
      address:
        type: string
      city:
        type: string
      company:
        type: string
      contact_extension:
        description: Limited to 3 digits.
        type: integer
      contact_number:
        type: integer
      fax_number:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      mobile_carrier:
        $ref: '#/definitions/mobile_carriers'
      mobile_number:
        type: integer
      state:
        type: string
      web_page:
        type: string
      zip:
        type: string
    required:
      - address
      - city
      - company
      - contact_extension
      - contact_number
      - fax_number
      - first_name
      - last_name
      - mobile_carrier
      - mobile_number
      - state
      - web_page
      - zip
    type: object
    x-restlet:
      section: PROFILES
  profile_request:
    properties:
      address:
        maxLength: 50
        type: string
      city:
        maxLength: 30
        type: string
      company:
        maxLength: 50
        type: string
      contact_extension:
        description: Limited to 3 digits.
        type: integer
      contact_number:
        type: integer
      fax_number:
        type: integer
      first_name:
        maxLength: 50
        type: string
      last_name:
        maxLength: 50
        type: string
      mobile_carrier:
        $ref: '#/definitions/mobile_carriers'
      mobile_number:
        type: integer
      state:
        description: Please use an Abbreviation not a full name.
        maxLength: 3
        type: string
      web_page:
        maxLength: 120
        type: string
      zip:
        type: string
    type: object
    x-restlet:
      section: PROFILES
  profile_response:
    properties:
      address:
        type: string
      city:
        type: string
      company:
        type: string
      contact_extension:
        description: Limited to 3 digits.
        type: integer
      contact_number:
        type: integer
      fax_number:
        type: integer
      first_name:
        type: string
      id:
        description: This is their ID in messages.
        type: integer
      last_name:
        type: string
      mobile_carrier:
        $ref: '#/definitions/mobile_carriers'
      mobile_number:
        type: integer
      state:
        type: string
      web_page:
        type: string
      zip:
        type: string
    required:
      - address
      - city
      - company
      - contact_extension
      - contact_number
      - fax_number
      - first_name
      - id
      - last_name
      - mobile_carrier
      - mobile_number
      - state
      - web_page
      - zip
    type: object
    x-restlet:
      section: PROFILES
  regions:
    description: 'This is a list of possible regions. This matches the regions from searching and posting a job ad on our website. I am adding it to the API with the assumption that we can expand our resume regions to match. This should aviod some confusion and weirdness. An example would be alert options. '
    enum:
      - east coast
      - west coast
      - midwest
      - nationwide
      - north east
      - north west
      - south east
      - south west
      - local
    type: string
    x-restlet:
      section: common_definitions
  resume_board_data_contact:
    description: The non required fields will only show up on a single resume search. You can do that by specifying the alert_id.
    properties:
      address:
        description: Only available to subscribed users.
        maxLength: 40
        type: string
      city:
        maxLength: 30
        type: string
      contact_number:
        description: Only available to subscribed users.
        maximum: 14
        type: integer
      fax_number:
        description: Should we depricate this? How many new resumes come with this? Only available to subscribed users.
        maximum: 14
        type: integer
      first_name:
        description: Only available to subscribed users.
        maxLength: 50
        type: string
      id:
        description: This is the ID you would use to send a message. Only available to logged in users.
        type: integer
      last_name:
        description: Only available to subscribed users.
        maxLength: 50
        type: string
      mobile_carrier:
        $ref: '#/definitions/mobile_carriers'
      mobile_number:
        description: Same as home phone. Only available to subscribed users.
        maximum: 14
        type: integer
      state:
        maxLength: 3
        type: string
      web_page:
        description: Only available to subscribed users.
        maxLength: 120
        type: string
      zip:
        description: Only available to subscribed users.
        maxLength: 10
        type: string
    required:
      - city
      - first_name
      - last_name
      - state
    type: object
  resume_board_data_driving_record:
    properties:
      accidents:
        minimum: 0
        type: integer
      age:
        enum:
          - 18-20
          - 21-25
          - 26-30
          - Over 30
        type: string
      gender:
        enum:
          - male
          - female
        type: string
      license_type:
        enum:
          - A
          - B
          - '1'
          - '2'
          - '3'
        type: string
      tickets:
        minimum: 0
        type: integer
    required:
      - accidents
      - age
      - tickets
    type: object
  resume_board_data_experience:
    properties:
      current_employer:
        description: Only available to subscribed users.
        maxLength: 40
        type: string
      current_years_experience:
        minimum: 0
        type: integer
      felony_reason:
        description: Only available to subscribed users.
        type: string
      has_felony:
        type: boolean
      previous_employer:
        description: Only available to subscribed users.
        maxLength: 40
        type: string
      previous_years_experience:
        minimum: 0
        type: integer
      total_years_experience:
        minimum: 0
        type: integer
      trailer_experience:
        $ref: '#/definitions/trailers'
    required:
      - total_years_experience
    type: object
  resume_board_data_job_preference:
    properties:
      distance_preference:
        enum:
          - OTR
          - local
        type: string
      position:
        $ref: '#/definitions/positions'
      region_preference:
        $ref: '#/definitions/regions'
      team_preference:
        enum:
          - single
          - team
        type: string
    type: object
  resume_board_data:
    example: A resume.
    properties:
      comments:
        description: Only available to subscribed users.
        type: string
      contact:
        $ref: '#/definitions/resume_board_data_contact'
      created:
        format: date-time
        type: string
      driving_record:
        $ref: '#/definitions/resume_board_data_driving_record'
      experience:
        $ref: '#/definitions/resume_board_data_experience'
      job_preference:
        $ref: '#/definitions/resume_board_data_job_preference'
      resume_id:
        type: integer
      updated:
        format: date-time
        type: string
    required:
      - contact
      - created
      - driving_record
      - experience
      - resume_id
      - updated
    type: object
    x-restlet:
      section: RESUMES
  resume_data_optional_driving_record:
    properties:
      accidents:
        minimum: 0
        type: integer
      age:
        enum:
          - 18-20
          - 21-25
          - 26-30
          - Over 30
        type: string
      gender:
        enum:
          - male
          - female
        type: string
      license_type:
        enum:
          - A
          - B
          - '1'
          - '2'
          - '3'
        type: string
      tickets:
        minimum: 0
        type: integer
    type: object
  resume_data_optional_experience:
    properties:
      current_employer:
        maxLength: 40
        type: string
      current_years_experience:
        minimum: 0
        type: integer
      felony_reason:
        type: string
      has_felony:
        type: boolean
      previous_employer:
        maxLength: 40
        type: string
      previous_years_experience:
        minimum: 0
        type: integer
      total_years_experience:
        minimum: 0
        type: integer
      trailer_experience:
        $ref: '#/definitions/trailers'
    type: object
  resume_data_optional:
    properties:
      comments:
        type: string
      driving_record:
        $ref: '#/definitions/resume_data_optional_driving_record'
      experience:
        $ref: '#/definitions/resume_data_optional_experience'
      job_preference:
        $ref: '#/definitions/resume_board_data_job_preference'
    type: object
    x-restlet:
      section: RESUMES
  resume_search:
    properties:
      city:
        type: string
      driver_distance:
        enum:
          - local
          - OTR
        type: string
      driver_experience:
        type: integer
      driver_type:
        enum:
          - other
          - student
          - company
          - owner/operator
        type: string
      license_type:
        enum:
          - A
          - B
          - '1'
          - '2'
          - '3'
          - none
        type: string
      list_direction:
        enum:
          - desc
          - asc
        type: string
      list_order:
        description: Any of the results columns for a search are also valid for list_order
        type: string
      radius:
        type: integer
      region:
        enum:
          - east coast
          - west coast
          - mid west
          - nation wide
          - noth east
          - north west
          - south east
          - south west
          - local
        type: string
      state:
        items:
          enum:
            - AA
            - AE
            - AK
            - AL
            - AP
            - AR
            - AS
            - AZ
            - CA
            - CO
            - CT
            - DC
            - DE
            - FL
            - FM
            - GA
            - GU
            - HI
            - IA
            - ID
            - IL
            - IN
            - KS
            - KY
            - LA
            - MA
            - MD
            - ME
            - MH
            - MI
            - MN
            - MO
            - MP
            - MS
            - MT
            - MX
            - NC
            - ND
            - NE
            - NH
            - NJ
            - NM
            - NV
            - NY
            - OH
            - OK
            - OR
            - PA
            - PR
            - PW
            - RI
            - SC
            - SD
            - TN
            - TX
            - UT
            - VA
            - VI
            - VT
            - WA
            - WI
            - WV
            - WY
            - AB
            - BC
            - MB
            - NB
            - NL
            - NS
            - NT
            - NU
            - 'ON'
            - PE
            - QC
            - SK
            - YT
            - USA
            - CAN
          type: string
        type: array
      team_preference:
        enum:
          - single
          - team
        type: string
      trailer_experience:
        items:
          enum:
            - V
            - R
            - F
            - AC
            - HOP
            - TANK
            - S
          type: string
        type: array
    required:
      - state
    type: object
  social_login_credentials:
    properties:
      create_missing_account:
        default: false
        description: If true the endpoint will create the users account in case it doesnt already exist.
        type: boolean
      service:
        description: 'Takes a social login service name,'
        enum:
          - google
          - facebook
          - facebook-code
          - apple
        type: string
      token:
        description: ' The token returned by the social login service. For Google the value expected is : data.code For Facebook the value expected is : data.authResponse.accessToken For Apple the value expected is : data.detail.authorization.id_token'
        type: string
    required:
      - service
      - token
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  social-login-end-user-token:
    properties:
      email:
        description: The email address that was used to login.
        example: example@directfreight.com
        type: string
      end-user-token:
        description: On success and end-user-token is returned.
        example: XX423ASOEUHT4AESUTH
        type: string
      new_account:
        description: Indicates if a new account was created or an existing one was used to login.
        example: false
        type: boolean
    type: object
    x-restlet:
      section: END_USER_AUTHENTICATIONS
  trailers:
    items:
      enum:
        - V
        - R
        - F
        - AC
        - HOP
        - TANK
        - S
      type: string
    maxItems: 6
    minItems: 1
    type: array
    x-restlet:
      section: common_definitions
