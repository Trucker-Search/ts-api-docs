{
  "basePath": "/v1",
  "consumes": [
    "application/json"
  ],
  "host": "www.truckersearch.com",
  "info": {
    "contact": {
      "email": "support@truckersearch.com"
    },
    "description": "In order to use the Trucker Search API please first contact us to get an API Token. This token needs to be sent as a HTTP header argument in every request to our API.\n\napi-token=“SECRET KEY”\n\nPlease keep your api-token a secret. If the token is compromised please contact us to get a new one.\n\nThis api token authenticates your application and gives it access to the API.\n\nThe API token should not be confused with the end-user-token. That token is given to you via the end_user_authentications endpoint when the user logs in. This token is needed in order to use certain features, and get certain sensitive information.\n\nBoth Tokens are stateless, and delivered via the HTTP headers.",
    "title": "Trucker Search API",
    "version": "1.0",
    "x-logo": {
      "url": "https://www.truckersearch.com/home/images/logo-2015.png"
    }
  },
  "produces": [
    "application/json"
  ],
  "responses": {
    "error_422": {
      "description": "Unprocessable Entity. More information provided in the return object.",
      "schema": {
        "$ref": "#/definitions/error_object"
      }
    },
    "object_created": {
      "description": "Object created check the headers for a reference URL.",
      "schema": {
        "$ref": "#/definitions/create_status"
      }
    }
  },
  "schemes": [
    "https"
  ],
  "security": [
    {
      "api_key": []
    }
  ],
  "securityDefinitions": {
    "api_key": {
      "description": "This token needs to be sent as a HTTP header argument in every request to our API.",
      "in": "header",
      "name": "api-token",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "x-restlet": {
    "sections": {
      "ALERTS": {},
      "END_USER_AUTHENTICATIONS": {},
      "FAVORITES": {},
      "JOBS": {},
      "LOCATIONS": {},
      "MESSAGES": {},
      "Mobile Update": {},
      "Optins": {},
      "PROFILES": {},
      "RESUMES": {},
      "common_definitions": {}
    }
  },
  "parameters": {
    "end-user-token": {
      "in": "header",
      "name": "end-user-token",
      "required": true,
      "type": "string"
    },
    "end-user-token-optional": {
      "in": "header",
      "name": "end-user-token",
      "required": false,
      "type": "string"
    }
  },
  "paths": {
    "/alerts": {
      "delete": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "alert_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Delete an alert.",
        "tags": [
          "alerts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts?alert_id=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://www.truckersearch.com/v1/alerts',\n  qs: { alert_id: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://www.truckersearch.com/v1/alerts\");\n\nreq.query({\n  \"alert_id\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/alerts');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'alert_id' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/alerts');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'alert_id' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/alerts?alert_id=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/alerts\"\n\nquerystring = {\"alert_id\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get a list of alerts. You can optionally limit the list by specifying alerts by their alert_id.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "only get a subset of alerts. As this is a get request this is specified as a query string parameter",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "alert_id",
            "required": false,
            "type": "array"
          },
          {
            "description": "Currently only resume type is supported.",
            "enum": [
              "resume",
              "job"
            ],
            "in": "query",
            "name": "search_type",
            "required": true,
            "type": "string"
          },
          {
            "description": "Chooses the medium to send the alert through. Push is not yet implemented.",
            "enum": [
              "email",
              "text",
              "push"
            ],
            "in": "query",
            "name": "notification_medium",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/inline_response_200"
            }
          }
        },
        "summary": "STAGE=UNKNOWN Get a list of alerts.",
        "tags": [
          "alerts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/alerts',\n  qs: \n   { alert_id: 'SOME_ARRAY_VALUE',\n     search_type: 'SOME_STRING_VALUE',\n     notification_medium: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/alerts\");\n\nreq.query({\n  \"alert_id\": \"SOME_ARRAY_VALUE\",\n  \"search_type\": \"SOME_STRING_VALUE\",\n  \"notification_medium\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/alerts');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'alert_id' => 'SOME_ARRAY_VALUE',\n  'search_type' => 'SOME_STRING_VALUE',\n  'notification_medium' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/alerts');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'alert_id' => 'SOME_ARRAY_VALUE',\n  'search_type' => 'SOME_STRING_VALUE',\n  'notification_medium' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/alerts\"\n\nquerystring = {\"alert_id\":\"SOME_ARRAY_VALUE\",\"search_type\":\"SOME_STRING_VALUE\",\"notification_medium\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/alerts?alert_id=SOME_ARRAY_VALUE&search_type=SOME_STRING_VALUE&notification_medium=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/alert_request_object"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/object_created"
          }
        },
        "summary": "STAGE=UNK Create a new alert.",
        "tags": [
          "alerts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/alerts\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"notification_medium\\\":\\\"email\\\",\\\"only_new\\\":false,\\\"search_parameters\\\":{\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driver_distance\\\":\\\"local\\\",\\\"driver_experience\\\":0,\\\"driver_type\\\":\\\"other\\\",\\\"license_type\\\":\\\"A\\\",\\\"list_direction\\\":\\\"desc\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"radius\\\":0,\\\"region\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"},\\\"search_type\\\":\\\"job\\\",\\\"send_frequency\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/alerts\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"notification_medium\\\":\\\"email\\\",\\\"only_new\\\":false,\\\"search_parameters\\\":{\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driver_distance\\\":\\\"local\\\",\\\"driver_experience\\\":0,\\\"driver_type\\\":\\\"other\\\",\\\"license_type\\\":\\\"A\\\",\\\"list_direction\\\":\\\"desc\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"radius\\\":0,\\\"region\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"},\\\"search_type\\\":\\\"job\\\",\\\"send_frequency\\\":0}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/alerts\"\n\n\tpayload := strings.NewReader(\"{\\\"notification_medium\\\":\\\"email\\\",\\\"only_new\\\":false,\\\"search_parameters\\\":{\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driver_distance\\\":\\\"local\\\",\\\"driver_experience\\\":0,\\\"driver_type\\\":\\\"other\\\",\\\"license_type\\\":\\\"A\\\",\\\"list_direction\\\":\\\"desc\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"radius\\\":0,\\\"region\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"},\\\"search_type\\\":\\\"job\\\",\\\"send_frequency\\\":0}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"notification_medium\\\":\\\"email\\\",\\\"only_new\\\":false,\\\"search_parameters\\\":{\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driver_distance\\\":\\\"local\\\",\\\"driver_experience\\\":0,\\\"driver_type\\\":\\\"other\\\",\\\"license_type\\\":\\\"A\\\",\\\"list_direction\\\":\\\"desc\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"radius\\\":0,\\\"region\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"},\\\"search_type\\\":\\\"job\\\",\\\"send_frequency\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/alerts\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://www.truckersearch.com/v1/alerts\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"notification_medium\\\":\\\"email\\\",\\\"only_new\\\":false,\\\"search_parameters\\\":{\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driver_distance\\\":\\\"local\\\",\\\"driver_experience\\\":0,\\\"driver_type\\\":\\\"other\\\",\\\"license_type\\\":\\\"A\\\",\\\"list_direction\\\":\\\"desc\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"radius\\\":0,\\\"region\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"},\\\"search_type\\\":\\\"job\\\",\\\"send_frequency\\\":0}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/alerts\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"notification_medium\\\":\\\"email\\\",\\\"only_new\\\":false,\\\"search_parameters\\\":{\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driver_distance\\\":\\\"local\\\",\\\"driver_experience\\\":0,\\\"driver_type\\\":\\\"other\\\",\\\"license_type\\\":\\\"A\\\",\\\"list_direction\\\":\\\"desc\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"radius\\\":0,\\\"region\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"},\\\"search_type\\\":\\\"job\\\",\\\"send_frequency\\\":0}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"notification_medium\": \"email\",\n  \"only_new\": false,\n  \"search_parameters\": {\n    \"city\": \"<ADD EXAMPLE VALUE>\",\n    \"driver_distance\": \"local\",\n    \"driver_experience\": 0,\n    \"driver_type\": \"other\",\n    \"license_type\": \"A\",\n    \"list_direction\": \"desc\",\n    \"list_order\": \"<ADD EXAMPLE VALUE>\",\n    \"radius\": 0,\n    \"region\": \"east coast\",\n    \"team_preference\": \"single\"\n  },\n  \"search_type\": \"job\",\n  \"send_frequency\": 0\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.truckersearch.com/v1/alerts\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ notification_medium: 'email',\n  only_new: false,\n  search_parameters: \n   { city: '<ADD EXAMPLE VALUE>',\n     driver_distance: 'local',\n     driver_experience: 0,\n     driver_type: 'other',\n     license_type: 'A',\n     list_direction: 'desc',\n     list_order: '<ADD EXAMPLE VALUE>',\n     radius: 0,\n     region: 'east coast',\n     team_preference: 'single' },\n  search_type: 'job',\n  send_frequency: 0 }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://www.truckersearch.com/v1/alerts',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { notification_medium: 'email',\n     only_new: false,\n     search_parameters: \n      { city: '<ADD EXAMPLE VALUE>',\n        driver_distance: 'local',\n        driver_experience: 0,\n        driver_type: 'other',\n        license_type: 'A',\n        list_direction: 'desc',\n        list_order: '<ADD EXAMPLE VALUE>',\n        radius: 0,\n        region: 'east coast',\n        team_preference: 'single' },\n     search_type: 'job',\n     send_frequency: 0 },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://www.truckersearch.com/v1/alerts\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"notification_medium\": \"email\",\n  \"only_new\": false,\n  \"search_parameters\": {\n    \"city\": \"<ADD EXAMPLE VALUE>\",\n    \"driver_distance\": \"local\",\n    \"driver_experience\": 0,\n    \"driver_type\": \"other\",\n    \"license_type\": \"A\",\n    \"list_direction\": \"desc\",\n    \"list_order\": \"<ADD EXAMPLE VALUE>\",\n    \"radius\": 0,\n    \"region\": \"east coast\",\n    \"team_preference\": \"single\"\n  },\n  \"search_type\": \"job\",\n  \"send_frequency\": 0\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"notification_medium\": @\"email\",\n                              @\"only_new\": @NO,\n                              @\"search_parameters\": @{ @\"city\": @\"<ADD EXAMPLE VALUE>\", @\"driver_distance\": @\"local\", @\"driver_experience\": @0, @\"driver_type\": @\"other\", @\"license_type\": @\"A\", @\"list_direction\": @\"desc\", @\"list_order\": @\"<ADD EXAMPLE VALUE>\", @\"radius\": @0, @\"region\": @\"east coast\", @\"team_preference\": @\"single\" },\n                              @\"search_type\": @\"job\",\n                              @\"send_frequency\": @0 };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/alerts\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/alerts\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"notification_medium\\\":\\\"email\\\",\\\"only_new\\\":false,\\\"search_parameters\\\":{\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driver_distance\\\":\\\"local\\\",\\\"driver_experience\\\":0,\\\"driver_type\\\":\\\"other\\\",\\\"license_type\\\":\\\"A\\\",\\\"list_direction\\\":\\\"desc\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"radius\\\":0,\\\"region\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"},\\\"search_type\\\":\\\"job\\\",\\\"send_frequency\\\":0}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://www.truckersearch.com/v1/alerts\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"notification_medium\":\"email\",\"only_new\":false,\"search_parameters\":{\"city\":\"<ADD EXAMPLE VALUE>\",\"driver_distance\":\"local\",\"driver_experience\":0,\"driver_type\":\"other\",\"license_type\":\"A\",\"list_direction\":\"desc\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"radius\":0,\"region\":\"east coast\",\"team_preference\":\"single\"},\"search_type\":\"job\",\"send_frequency\":0}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/alerts\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"notification_medium\\\":\\\"email\\\",\\\"only_new\\\":false,\\\"search_parameters\\\":{\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driver_distance\\\":\\\"local\\\",\\\"driver_experience\\\":0,\\\"driver_type\\\":\\\"other\\\",\\\"license_type\\\":\\\"A\\\",\\\"list_direction\\\":\\\"desc\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"radius\\\":0,\\\"region\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"},\\\"search_type\\\":\\\"job\\\",\\\"send_frequency\\\":0}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/alerts');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"notification_medium\":\"email\",\"only_new\":false,\"search_parameters\":{\"city\":\"<ADD EXAMPLE VALUE>\",\"driver_distance\":\"local\",\"driver_experience\":0,\"driver_type\":\"other\",\"license_type\":\"A\",\"list_direction\":\"desc\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"radius\":0,\"region\":\"east coast\",\"team_preference\":\"single\"},\"search_type\":\"job\",\"send_frequency\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"notification_medium\":\"email\",\"only_new\":false,\"search_parameters\":{\"city\":\"<ADD EXAMPLE VALUE>\",\"driver_distance\":\"local\",\"driver_experience\":0,\"driver_type\":\"other\",\"license_type\":\"A\",\"list_direction\":\"desc\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"radius\":0,\"region\":\"east coast\",\"team_preference\":\"single\"},\"search_type\":\"job\",\"send_frequency\":0}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/alerts');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"notification_medium\\\":\\\"email\\\",\\\"only_new\\\":false,\\\"search_parameters\\\":{\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driver_distance\\\":\\\"local\\\",\\\"driver_experience\\\":0,\\\"driver_type\\\":\\\"other\\\",\\\"license_type\\\":\\\"A\\\",\\\"list_direction\\\":\\\"desc\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"radius\\\":0,\\\"region\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"},\\\"search_type\\\":\\\"job\\\",\\\"send_frequency\\\":0}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/alerts\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/alerts\"\n\npayload = \"{\\\"notification_medium\\\":\\\"email\\\",\\\"only_new\\\":false,\\\"search_parameters\\\":{\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driver_distance\\\":\\\"local\\\",\\\"driver_experience\\\":0,\\\"driver_type\\\":\\\"other\\\",\\\"license_type\\\":\\\"A\\\",\\\"list_direction\\\":\\\"desc\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"radius\\\":0,\\\"region\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"},\\\"search_type\\\":\\\"job\\\",\\\"send_frequency\\\":0}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/alerts\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"notification_medium\\\":\\\"email\\\",\\\"only_new\\\":false,\\\"search_parameters\\\":{\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driver_distance\\\":\\\"local\\\",\\\"driver_experience\\\":0,\\\"driver_type\\\":\\\"other\\\",\\\"license_type\\\":\\\"A\\\",\\\"list_direction\\\":\\\"desc\\\",\\\"list_order\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"radius\\\":0,\\\"region\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"},\\\"search_type\\\":\\\"job\\\",\\\"send_frequency\\\":0}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://www.truckersearch.com/v1/alerts \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"notification_medium\":\"email\",\"only_new\":false,\"search_parameters\":{\"city\":\"<ADD EXAMPLE VALUE>\",\"driver_distance\":\"local\",\"driver_experience\":0,\"driver_type\":\"other\",\"license_type\":\"A\",\"list_direction\":\"desc\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"radius\":0,\"region\":\"east coast\",\"team_preference\":\"single\"},\"search_type\":\"job\",\"send_frequency\":0}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"notification_medium\":\"email\",\"only_new\":false,\"search_parameters\":{\"city\":\"<ADD EXAMPLE VALUE>\",\"driver_distance\":\"local\",\"driver_experience\":0,\"driver_type\":\"other\",\"license_type\":\"A\",\"list_direction\":\"desc\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"radius\":0,\"region\":\"east coast\",\"team_preference\":\"single\"},\"search_type\":\"job\",\"send_frequency\":0}' |  \\\n  http POST https://www.truckersearch.com/v1/alerts \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"notification_medium\":\"email\",\"only_new\":false,\"search_parameters\":{\"city\":\"<ADD EXAMPLE VALUE>\",\"driver_distance\":\"local\",\"driver_experience\":0,\"driver_type\":\"other\",\"license_type\":\"A\",\"list_direction\":\"desc\",\"list_order\":\"<ADD EXAMPLE VALUE>\",\"radius\":0,\"region\":\"east coast\",\"team_preference\":\"single\"},\"search_type\":\"job\",\"send_frequency\":0}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/alerts"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"notification_medium\": \"email\",\n  \"only_new\": false,\n  \"search_parameters\": [\n    \"city\": \"<ADD EXAMPLE VALUE>\",\n    \"driver_distance\": \"local\",\n    \"driver_experience\": 0,\n    \"driver_type\": \"other\",\n    \"license_type\": \"A\",\n    \"list_direction\": \"desc\",\n    \"list_order\": \"<ADD EXAMPLE VALUE>\",\n    \"radius\": 0,\n    \"region\": \"east coast\",\n    \"team_preference\": \"single\"\n  ],\n  \"search_type\": \"job\",\n  \"send_frequency\": 0\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/alerts\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "ALERTS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/alerts\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/alerts\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/alerts\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/alerts\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/alerts\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/alerts\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/alerts\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/alerts',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/alerts\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/alerts\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/alerts\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/alerts\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/alerts\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/alerts');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/alerts');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/alerts\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/alerts\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/alerts\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/alerts \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/alerts \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/alerts"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/alerts\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications": {
      "delete": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "Log out.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/end_user_authentications\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://www.truckersearch.com/v1/end_user_authentications\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://www.truckersearch.com/v1/end_user_authentications\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://www.truckersearch.com/v1/end_user_authentications\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"https://www.truckersearch.com/v1/end_user_authentications\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications');\n$request->setRequestMethod('DELETE');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/end_user_authentications\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url https://www.truckersearch.com/v1/end_user_authentications \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE https://www.truckersearch.com/v1/end_user_authentications \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/end_user_authentications"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/inline_response_200_1"
            }
          }
        },
        "summary": "Get a users status.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/end_user_authentications\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/end_user_authentications\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/end_user_authentications\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/end_user_authentications\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://www.truckersearch.com/v1/end_user_authentications\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://www.truckersearch.com/v1/end_user_authentications \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://www.truckersearch.com/v1/end_user_authentications \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/end_user_authentications"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201",
            "schema": {
              "$ref": "#/definitions/error_object"
            }
          },
          "422": {
            "description": "Status 422",
            "schema": {
              "$ref": "#/definitions/inline_response_422"
            }
          }
        },
        "summary": "Log in.",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"email\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/end_user_authentications\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"email\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications\"\n\n\tpayload := strings.NewReader(\"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"email\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"email\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://www.truckersearch.com/v1/end_user_authentications\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"email\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"email\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"login\": \"<ADD EXAMPLE VALUE>\",\n  \"realm\": \"email\",\n  \"secret\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.truckersearch.com/v1/end_user_authentications\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ login: '<ADD EXAMPLE VALUE>',\n  realm: 'email',\n  secret: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { login: '<ADD EXAMPLE VALUE>',\n     realm: 'email',\n     secret: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://www.truckersearch.com/v1/end_user_authentications\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"login\": \"<ADD EXAMPLE VALUE>\",\n  \"realm\": \"email\",\n  \"secret\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"login\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"realm\": @\"email\",\n                              @\"secret\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"email\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://www.truckersearch.com/v1/end_user_authentications\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"email\",\"secret\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"email\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"email\",\"secret\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"email\",\"secret\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"email\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentications\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications\"\n\npayload = \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"email\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"login\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"realm\\\":\\\"email\\\",\\\"secret\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://www.truckersearch.com/v1/end_user_authentications \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --data '{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"email\",\"secret\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"email\",\"secret\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://www.truckersearch.com/v1/end_user_authentications \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"login\":\"<ADD EXAMPLE VALUE>\",\"realm\":\"email\",\"secret\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/end_user_authentications"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"login\": \"<ADD EXAMPLE VALUE>\",\n  \"realm\": \"email\",\n  \"secret\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/end_user_authentications\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/end_user_authentications\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/end_user_authentications\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/end_user_authentications\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/end_user_authentications \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/end_user_authentications \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/end_user_authentications"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/email": {
      "patch": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_2"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "Update Email",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications/email\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/end_user_authentications/email\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications/email\"\n\n\tpayload := strings.NewReader(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications/email\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://www.truckersearch.com/v1/end_user_authentications/email\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications/email\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"email\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://www.truckersearch.com/v1/end_user_authentications/email\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/email\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ email: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications/email',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { email: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://www.truckersearch.com/v1/end_user_authentications/email\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"email\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"email\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications/email\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications/email\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://www.truckersearch.com/v1/end_user_authentications/email\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"email\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications/email\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications/email');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"email\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"email\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications/email');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/end_user_authentications/email\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications/email\"\n\npayload = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications/email\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://www.truckersearch.com/v1/end_user_authentications/email \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"email\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"email\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://www.truckersearch.com/v1/end_user_authentications/email \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"email\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/end_user_authentications/email"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"email\": \"<ADD EXAMPLE VALUE>\"]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications/email\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications/email\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications/email\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications/email\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/end_user_authentications/email\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications/email\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/end_user_authentications/email\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/email\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications/email',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/end_user_authentications/email\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications/email\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications/email\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/end_user_authentications/email\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications/email\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications/email');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications/email');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/email\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications/email\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications/email\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/end_user_authentications/email \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/end_user_authentications/email \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/end_user_authentications/email"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications/email\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/passwords": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "email_address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "This will return successful even if we do not have the e-mail address in our records."
          }
        },
        "summary": "STAGE=UNK Forgot password",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications/passwords',\n  qs: { email_address: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/end_user_authentications/passwords\");\n\nreq.query({\n  \"email_address\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications/passwords');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'email_address' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications/passwords');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'email_address' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications/passwords\"\n\nquerystring = {\"email_address\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications/passwords?email_address=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_1"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "Update Password",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications/passwords\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/end_user_authentications/passwords\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications/passwords\"\n\n\tpayload := strings.NewReader(\"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications/passwords\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://www.truckersearch.com/v1/end_user_authentications/passwords\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications/passwords\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"new_password\": \"<ADD EXAMPLE VALUE>\",\n  \"old_password\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://www.truckersearch.com/v1/end_user_authentications/passwords\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/passwords\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ new_password: '<ADD EXAMPLE VALUE>',\n  old_password: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications/passwords',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { new_password: '<ADD EXAMPLE VALUE>',\n     old_password: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://www.truckersearch.com/v1/end_user_authentications/passwords\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"new_password\": \"<ADD EXAMPLE VALUE>\",\n  \"old_password\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"new_password\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"old_password\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications/passwords\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications/passwords\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://www.truckersearch.com/v1/end_user_authentications/passwords\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications/passwords\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications/passwords');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications/passwords');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/end_user_authentications/passwords\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications/passwords\"\n\npayload = \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications/passwords\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"new_password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"old_password\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://www.truckersearch.com/v1/end_user_authentications/passwords \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://www.truckersearch.com/v1/end_user_authentications/passwords \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"new_password\":\"<ADD EXAMPLE VALUE>\",\"old_password\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/end_user_authentications/passwords"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"new_password\": \"<ADD EXAMPLE VALUE>\",\n  \"old_password\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications/passwords\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications/passwords\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications/passwords\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications/passwords\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/end_user_authentications/passwords\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications/passwords\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/end_user_authentications/passwords\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/passwords\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications/passwords',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/end_user_authentications/passwords\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications/passwords\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications/passwords\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/end_user_authentications/passwords\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications/passwords\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications/passwords');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications/passwords');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/passwords\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications/passwords\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications/passwords\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/end_user_authentications/passwords \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/end_user_authentications/passwords \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/end_user_authentications/passwords"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications/passwords\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/social_login": {
      "post": {
        "description": "Logs in or creates a new account for the user based on their email. \"new_account\" is what indicates if a new account was created, or if an existing account was used to login.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/social_login_credentials"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/social-login-end-user-token"
            }
          },
          "422": {
            "$ref": "#/responses/error_422"
          }
        },
        "summary": "STAGE=Private Social Login/Create Account",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications/social_login\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"create_missing_account\\\":false,\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/end_user_authentications/social_login\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"create_missing_account\\\":false,\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications/social_login\"\n\n\tpayload := strings.NewReader(\"{\\\"create_missing_account\\\":false,\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"create_missing_account\\\":false,\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications/social_login\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://www.truckersearch.com/v1/end_user_authentications/social_login\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"create_missing_account\\\":false,\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications/social_login\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"create_missing_account\\\":false,\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"create_missing_account\": false,\n  \"service\": \"google\",\n  \"token\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.truckersearch.com/v1/end_user_authentications/social_login\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/social_login\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ create_missing_account: false,\n  service: 'google',\n  token: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications/social_login',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { create_missing_account: false,\n     service: 'google',\n     token: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://www.truckersearch.com/v1/end_user_authentications/social_login\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"create_missing_account\": false,\n  \"service\": \"google\",\n  \"token\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"create_missing_account\": @NO,\n                              @\"service\": @\"google\",\n                              @\"token\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications/social_login\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications/social_login\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"create_missing_account\\\":false,\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://www.truckersearch.com/v1/end_user_authentications/social_login\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"create_missing_account\":false,\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications/social_login\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"create_missing_account\\\":false,\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications/social_login');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"create_missing_account\":false,\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"create_missing_account\":false,\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications/social_login');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"create_missing_account\\\":false,\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentications/social_login\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications/social_login\"\n\npayload = \"{\\\"create_missing_account\\\":false,\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications/social_login\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"create_missing_account\\\":false,\\\"service\\\":\\\"google\\\",\\\"token\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://www.truckersearch.com/v1/end_user_authentications/social_login \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --data '{\"create_missing_account\":false,\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"create_missing_account\":false,\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://www.truckersearch.com/v1/end_user_authentications/social_login \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"create_missing_account\":false,\"service\":\"google\",\"token\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/end_user_authentications/social_login"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"create_missing_account\": false,\n  \"service\": \"google\",\n  \"token\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications/social_login\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications/social_login\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications/social_login\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications/social_login\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/end_user_authentications/social_login\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications/social_login\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/end_user_authentications/social_login\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/social_login\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications/social_login',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/end_user_authentications/social_login\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications/social_login\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications/social_login\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/end_user_authentications/social_login\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications/social_login\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications/social_login');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications/social_login');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/social_login\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications/social_login\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications/social_login\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/end_user_authentications/social_login \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/end_user_authentications/social_login \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/end_user_authentications/social_login"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications/social_login\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/end_user_authentications/users": {
      "post": {
        "consumes": [],
        "description": "Create a new user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_3"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201",
            "schema": {
              "$ref": "#/definitions/inline_response_201"
            }
          }
        },
        "summary": "Create user",
        "tags": [
          "end_user_authentications"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications/users\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"employer\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/end_user_authentications/users\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"employer\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications/users\"\n\n\tpayload := strings.NewReader(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"employer\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"employer\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications/users\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://www.truckersearch.com/v1/end_user_authentications/users\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"employer\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications/users\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"employer\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"email\": \"<ADD EXAMPLE VALUE>\",\n  \"password\": \"<ADD EXAMPLE VALUE>\",\n  \"status\": \"employer\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.truckersearch.com/v1/end_user_authentications/users\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/users\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ email: '<ADD EXAMPLE VALUE>',\n  password: '<ADD EXAMPLE VALUE>',\n  status: 'employer' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications/users',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { email: '<ADD EXAMPLE VALUE>',\n     password: '<ADD EXAMPLE VALUE>',\n     status: 'employer' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://www.truckersearch.com/v1/end_user_authentications/users\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"email\": \"<ADD EXAMPLE VALUE>\",\n  \"password\": \"<ADD EXAMPLE VALUE>\",\n  \"status\": \"employer\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"email\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"password\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"status\": @\"employer\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications/users\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications/users\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"employer\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://www.truckersearch.com/v1/end_user_authentications/users\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\",\"status\":\"employer\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications/users\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"employer\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications/users');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\",\"status\":\"employer\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\",\"status\":\"employer\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications/users');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"employer\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/end_user_authentications/users\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications/users\"\n\npayload = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"employer\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications/users\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"password\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"employer\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://www.truckersearch.com/v1/end_user_authentications/users \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --data '{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\",\"status\":\"employer\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\",\"status\":\"employer\"}' |  \\\n  http POST https://www.truckersearch.com/v1/end_user_authentications/users \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"email\":\"<ADD EXAMPLE VALUE>\",\"password\":\"<ADD EXAMPLE VALUE>\",\"status\":\"employer\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/end_user_authentications/users"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"email\": \"<ADD EXAMPLE VALUE>\",\n  \"password\": \"<ADD EXAMPLE VALUE>\",\n  \"status\": \"employer\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications/users\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/end_user_authentications/users\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/end_user_authentications/users\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/end_user_authentications/users\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/end_user_authentications/users\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/end_user_authentications/users\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/end_user_authentications/users\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/end_user_authentications/users\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/end_user_authentications/users',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/end_user_authentications/users\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/end_user_authentications/users\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/end_user_authentications/users\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/end_user_authentications/users\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/end_user_authentications/users\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/end_user_authentications/users');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/end_user_authentications/users');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/end_user_authentications/users\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/end_user_authentications/users\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/end_user_authentications/users\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/end_user_authentications/users \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/end_user_authentications/users \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/end_user_authentications/users"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/end_user_authentications/users\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/favorites": {
      "delete": {
        "parameters": [
          {
            "enum": [
              "job",
              "resume"
            ],
            "in": "query",
            "name": "favorite_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "favorite_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Remove  a favorite.",
        "tags": [
          "favorites"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://www.truckersearch.com/v1/favorites',\n  qs: \n   { favorite_type: 'SOME_STRING_VALUE',\n     favorite_id: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://www.truckersearch.com/v1/favorites\");\n\nreq.query({\n  \"favorite_type\": \"SOME_STRING_VALUE\",\n  \"favorite_id\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/favorites');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'favorite_type' => 'SOME_STRING_VALUE',\n  'favorite_id' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/favorites');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'favorite_type' => 'SOME_STRING_VALUE',\n  'favorite_id' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/favorites\"\n\nquerystring = {\"favorite_type\":\"SOME_STRING_VALUE\",\"favorite_id\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/favorites?favorite_type=SOME_STRING_VALUE&favorite_id=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "default": "resume",
            "enum": [
              "resume",
              "job"
            ],
            "in": "query",
            "name": "favorite_type",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/get_favorite_ids"
            }
          }
        },
        "summary": "STAGE=UNK Get the favorites.",
        "tags": [
          "favorites"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/favorites?favorite_type=resume\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/favorites?favorite_type=resume\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/favorites?favorite_type=resume\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/favorites?favorite_type=resume\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/favorites?favorite_type=resume\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/favorites?favorite_type=resume\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/favorites?favorite_type=resume\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/favorites?favorite_type=resume\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/favorites',\n  qs: { favorite_type: 'resume' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/favorites\");\n\nreq.query({\n  \"favorite_type\": \"resume\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/favorites?favorite_type=resume\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/favorites?favorite_type=resume\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/favorites?favorite_type=resume'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/favorites?favorite_type=resume\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/favorites');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'favorite_type' => 'resume'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/favorites');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'favorite_type' => 'resume'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/favorites?favorite_type=resume\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/favorites\"\n\nquerystring = {\"favorite_type\":\"resume\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/favorites?favorite_type=resume\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/favorites?favorite_type=resume' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/favorites?favorite_type=resume' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/favorites?favorite_type=resume'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/favorites?favorite_type=resume\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_4"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201"
          }
        },
        "summary": "STAGE=UNK Add a favorite",
        "tags": [
          "favorites"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/favorites\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"favorite_id\\\":0,\\\"type\\\":\\\"job\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/favorites\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"favorite_id\\\":0,\\\"type\\\":\\\"job\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/favorites\"\n\n\tpayload := strings.NewReader(\"{\\\"favorite_id\\\":0,\\\"type\\\":\\\"job\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"favorite_id\\\":0,\\\"type\\\":\\\"job\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/favorites\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://www.truckersearch.com/v1/favorites\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"favorite_id\\\":0,\\\"type\\\":\\\"job\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/favorites\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"favorite_id\\\":0,\\\"type\\\":\\\"job\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"favorite_id\": 0,\n  \"type\": \"job\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.truckersearch.com/v1/favorites\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/favorites\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ favorite_id: 0, type: 'job' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://www.truckersearch.com/v1/favorites',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { favorite_id: 0, type: 'job' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://www.truckersearch.com/v1/favorites\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"favorite_id\": 0,\n  \"type\": \"job\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"favorite_id\": @0,\n                              @\"type\": @\"job\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/favorites\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/favorites\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"favorite_id\\\":0,\\\"type\\\":\\\"job\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://www.truckersearch.com/v1/favorites\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"favorite_id\":0,\"type\":\"job\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/favorites\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"favorite_id\\\":0,\\\"type\\\":\\\"job\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/favorites');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"favorite_id\":0,\"type\":\"job\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"favorite_id\":0,\"type\":\"job\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/favorites');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"favorite_id\\\":0,\\\"type\\\":\\\"job\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/favorites\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/favorites\"\n\npayload = \"{\\\"favorite_id\\\":0,\\\"type\\\":\\\"job\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/favorites\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"favorite_id\\\":0,\\\"type\\\":\\\"job\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://www.truckersearch.com/v1/favorites \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"favorite_id\":0,\"type\":\"job\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"favorite_id\":0,\"type\":\"job\"}' |  \\\n  http POST https://www.truckersearch.com/v1/favorites \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"favorite_id\":0,\"type\":\"job\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/favorites"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"favorite_id\": 0,\n  \"type\": \"job\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/favorites\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "FAVORITES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/favorites\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/favorites\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/favorites\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/favorites\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/favorites\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/favorites\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/favorites\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/favorites',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/favorites\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/favorites\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/favorites\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/favorites\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/favorites\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/favorites');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/favorites');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/favorites\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/favorites\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/favorites\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/favorites \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/favorites \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/favorites"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/favorites\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/favorites/count": {
      "get": {
        "parameters": [
          {
            "enum": [
              "resume",
              "job"
            ],
            "in": "query",
            "name": "favorite_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          }
        },
        "summary": "STAGE=UNK Get a count of favorites",
        "tags": [
          "favorites"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/favorites/count?favorite_type=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/favorites/count',\n  qs: { favorite_type: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/favorites/count\");\n\nreq.query({\n  \"favorite_type\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/favorites/count');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'favorite_type' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/favorites/count');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'favorite_type' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/favorites/count?favorite_type=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/favorites/count\"\n\nquerystring = {\"favorite_type\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/favorites/count?favorite_type=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "FAVORITES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/favorites/count\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/favorites/count\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/favorites/count\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/favorites/count\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/favorites/count\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/favorites/count\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/favorites/count\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/favorites/count',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/favorites/count\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/favorites/count\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/favorites/count\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/favorites/count\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/favorites/count\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/favorites/count');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/favorites/count');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/favorites/count\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/favorites/count\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/favorites/count\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/favorites/count \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/favorites/count \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/favorites/count"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/favorites/count\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/jobs": {
      "delete": {
        "parameters": [
          {
            "description": "You can only delete 1 job at a time, and only if that Job is both not active, and does not have any days left.",
            "in": "query",
            "name": "job_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Delete the users job ad.",
        "tags": [
          "jobs"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/jobs?job_id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://www.truckersearch.com/v1/jobs',\n  qs: { job_id: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://www.truckersearch.com/v1/jobs\");\n\nreq.query({\n  \"job_id\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/jobs');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'job_id' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/jobs');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'job_id' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/jobs?job_id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/jobs\"\n\nquerystring = {\"job_id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "Get a list of the logged in users jobs.",
        "parameters": [
          {
            "description": "Optionally just return a few jobs.",
            "in": "query",
            "name": "job_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/job_list_user"
            }
          }
        },
        "summary": "STAGE=UNK Get logged in user's job ads.",
        "tags": [
          "jobs"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/jobs?job_id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/jobs',\n  qs: { job_id: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/jobs\");\n\nreq.query({\n  \"job_id\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/jobs');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'job_id' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/jobs');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'job_id' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/jobs?job_id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/jobs\"\n\nquerystring = {\"job_id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/jobs?job_id=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/job_data_patch"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Update a Job ad.",
        "tags": [
          "jobs"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/jobs\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"job_id\\\":0,\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/jobs\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"job_id\\\":0,\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/jobs\"\n\n\tpayload := strings.NewReader(\"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"job_id\\\":0,\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"job_id\\\":0,\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/jobs\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://www.truckersearch.com/v1/jobs\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"job_id\\\":0,\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/jobs\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"job_id\\\":0,\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"contact\": {\n    \"address\": \"<ADD EXAMPLE VALUE>\",\n    \"city\": \"<ADD EXAMPLE VALUE>\",\n    \"contact\": \"<ADD EXAMPLE VALUE>\",\n    \"email\": \"<ADD EXAMPLE VALUE>\",\n    \"name\": \"<ADD EXAMPLE VALUE>\",\n    \"phone\": 0,\n    \"state\": \"<ADD EXAMPLE VALUE>\",\n    \"website\": \"<ADD EXAMPLE VALUE>\",\n    \"zip\": \"<ADD EXAMPLE VALUE>\"\n  },\n  \"job_id\": 0,\n  \"perks\": {\n    \"24x7_dispatch\": false,\n    \"all_miles_paid\": false,\n    \"company_fuel_card\": false,\n    \"dental_insurance\": false,\n    \"detention_layover_pay\": false,\n    \"direct_deposit\": false,\n    \"equipment_age\": 0,\n    \"free_roadside_assistance\": false,\n    \"health_insurance\": false,\n    \"home\": \"daily\",\n    \"lease_purchase_available\": false,\n    \"life_insurance\": false,\n    \"no_touch_freight\": false,\n    \"paid\": \"weekly\",\n    \"paid_holidays\": false,\n    \"paid_sick_time\": false,\n    \"paid_vacation\": false,\n    \"pet_friendly\": false,\n    \"referral_bonuses\": false,\n    \"rider_program\": false,\n    \"round_trip_loads\": false,\n    \"safety_bonus\": false,\n    \"sign_on_bonus\": 0\n  },\n  \"position\": {\n    \"description\": \"<ADD EXAMPLE VALUE>\",\n    \"distance_preference\": \"OTR\",\n    \"image_url\": \"<ADD EXAMPLE VALUE>\",\n    \"region_preference\": \"east coast\",\n    \"team_preference\": \"single\"\n  }\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://www.truckersearch.com/v1/jobs\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/jobs\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ contact: \n   { address: '<ADD EXAMPLE VALUE>',\n     city: '<ADD EXAMPLE VALUE>',\n     contact: '<ADD EXAMPLE VALUE>',\n     email: '<ADD EXAMPLE VALUE>',\n     name: '<ADD EXAMPLE VALUE>',\n     phone: 0,\n     state: '<ADD EXAMPLE VALUE>',\n     website: '<ADD EXAMPLE VALUE>',\n     zip: '<ADD EXAMPLE VALUE>' },\n  job_id: 0,\n  perks: \n   { '24x7_dispatch': false,\n     all_miles_paid: false,\n     company_fuel_card: false,\n     dental_insurance: false,\n     detention_layover_pay: false,\n     direct_deposit: false,\n     equipment_age: 0,\n     free_roadside_assistance: false,\n     health_insurance: false,\n     home: 'daily',\n     lease_purchase_available: false,\n     life_insurance: false,\n     no_touch_freight: false,\n     paid: 'weekly',\n     paid_holidays: false,\n     paid_sick_time: false,\n     paid_vacation: false,\n     pet_friendly: false,\n     referral_bonuses: false,\n     rider_program: false,\n     round_trip_loads: false,\n     safety_bonus: false,\n     sign_on_bonus: 0 },\n  position: \n   { description: '<ADD EXAMPLE VALUE>',\n     distance_preference: 'OTR',\n     image_url: '<ADD EXAMPLE VALUE>',\n     region_preference: 'east coast',\n     team_preference: 'single' } }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://www.truckersearch.com/v1/jobs',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { contact: \n      { address: '<ADD EXAMPLE VALUE>',\n        city: '<ADD EXAMPLE VALUE>',\n        contact: '<ADD EXAMPLE VALUE>',\n        email: '<ADD EXAMPLE VALUE>',\n        name: '<ADD EXAMPLE VALUE>',\n        phone: 0,\n        state: '<ADD EXAMPLE VALUE>',\n        website: '<ADD EXAMPLE VALUE>',\n        zip: '<ADD EXAMPLE VALUE>' },\n     job_id: 0,\n     perks: \n      { '24x7_dispatch': false,\n        all_miles_paid: false,\n        company_fuel_card: false,\n        dental_insurance: false,\n        detention_layover_pay: false,\n        direct_deposit: false,\n        equipment_age: 0,\n        free_roadside_assistance: false,\n        health_insurance: false,\n        home: 'daily',\n        lease_purchase_available: false,\n        life_insurance: false,\n        no_touch_freight: false,\n        paid: 'weekly',\n        paid_holidays: false,\n        paid_sick_time: false,\n        paid_vacation: false,\n        pet_friendly: false,\n        referral_bonuses: false,\n        rider_program: false,\n        round_trip_loads: false,\n        safety_bonus: false,\n        sign_on_bonus: 0 },\n     position: \n      { description: '<ADD EXAMPLE VALUE>',\n        distance_preference: 'OTR',\n        image_url: '<ADD EXAMPLE VALUE>',\n        region_preference: 'east coast',\n        team_preference: 'single' } },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://www.truckersearch.com/v1/jobs\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"contact\": {\n    \"address\": \"<ADD EXAMPLE VALUE>\",\n    \"city\": \"<ADD EXAMPLE VALUE>\",\n    \"contact\": \"<ADD EXAMPLE VALUE>\",\n    \"email\": \"<ADD EXAMPLE VALUE>\",\n    \"name\": \"<ADD EXAMPLE VALUE>\",\n    \"phone\": 0,\n    \"state\": \"<ADD EXAMPLE VALUE>\",\n    \"website\": \"<ADD EXAMPLE VALUE>\",\n    \"zip\": \"<ADD EXAMPLE VALUE>\"\n  },\n  \"job_id\": 0,\n  \"perks\": {\n    \"24x7_dispatch\": false,\n    \"all_miles_paid\": false,\n    \"company_fuel_card\": false,\n    \"dental_insurance\": false,\n    \"detention_layover_pay\": false,\n    \"direct_deposit\": false,\n    \"equipment_age\": 0,\n    \"free_roadside_assistance\": false,\n    \"health_insurance\": false,\n    \"home\": \"daily\",\n    \"lease_purchase_available\": false,\n    \"life_insurance\": false,\n    \"no_touch_freight\": false,\n    \"paid\": \"weekly\",\n    \"paid_holidays\": false,\n    \"paid_sick_time\": false,\n    \"paid_vacation\": false,\n    \"pet_friendly\": false,\n    \"referral_bonuses\": false,\n    \"rider_program\": false,\n    \"round_trip_loads\": false,\n    \"safety_bonus\": false,\n    \"sign_on_bonus\": 0\n  },\n  \"position\": {\n    \"description\": \"<ADD EXAMPLE VALUE>\",\n    \"distance_preference\": \"OTR\",\n    \"image_url\": \"<ADD EXAMPLE VALUE>\",\n    \"region_preference\": \"east coast\",\n    \"team_preference\": \"single\"\n  }\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"contact\": @{ @\"address\": @\"<ADD EXAMPLE VALUE>\", @\"city\": @\"<ADD EXAMPLE VALUE>\", @\"contact\": @\"<ADD EXAMPLE VALUE>\", @\"email\": @\"<ADD EXAMPLE VALUE>\", @\"name\": @\"<ADD EXAMPLE VALUE>\", @\"phone\": @0, @\"state\": @\"<ADD EXAMPLE VALUE>\", @\"website\": @\"<ADD EXAMPLE VALUE>\", @\"zip\": @\"<ADD EXAMPLE VALUE>\" },\n                              @\"job_id\": @0,\n                              @\"perks\": @{ @\"24x7_dispatch\": @NO, @\"all_miles_paid\": @NO, @\"company_fuel_card\": @NO, @\"dental_insurance\": @NO, @\"detention_layover_pay\": @NO, @\"direct_deposit\": @NO, @\"equipment_age\": @0, @\"free_roadside_assistance\": @NO, @\"health_insurance\": @NO, @\"home\": @\"daily\", @\"lease_purchase_available\": @NO, @\"life_insurance\": @NO, @\"no_touch_freight\": @NO, @\"paid\": @\"weekly\", @\"paid_holidays\": @NO, @\"paid_sick_time\": @NO, @\"paid_vacation\": @NO, @\"pet_friendly\": @NO, @\"referral_bonuses\": @NO, @\"rider_program\": @NO, @\"round_trip_loads\": @NO, @\"safety_bonus\": @NO, @\"sign_on_bonus\": @0 },\n                              @\"position\": @{ @\"description\": @\"<ADD EXAMPLE VALUE>\", @\"distance_preference\": @\"OTR\", @\"image_url\": @\"<ADD EXAMPLE VALUE>\", @\"region_preference\": @\"east coast\", @\"team_preference\": @\"single\" } };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/jobs\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/jobs\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"job_id\\\":0,\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://www.truckersearch.com/v1/jobs\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"contact\":{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"contact\":\"<ADD EXAMPLE VALUE>\",\"email\":\"<ADD EXAMPLE VALUE>\",\"name\":\"<ADD EXAMPLE VALUE>\",\"phone\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"website\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"},\"job_id\":0,\"perks\":{\"24x7_dispatch\":false,\"all_miles_paid\":false,\"company_fuel_card\":false,\"dental_insurance\":false,\"detention_layover_pay\":false,\"direct_deposit\":false,\"equipment_age\":0,\"free_roadside_assistance\":false,\"health_insurance\":false,\"home\":\"daily\",\"lease_purchase_available\":false,\"life_insurance\":false,\"no_touch_freight\":false,\"paid\":\"weekly\",\"paid_holidays\":false,\"paid_sick_time\":false,\"paid_vacation\":false,\"pet_friendly\":false,\"referral_bonuses\":false,\"rider_program\":false,\"round_trip_loads\":false,\"safety_bonus\":false,\"sign_on_bonus\":0},\"position\":{\"description\":\"<ADD EXAMPLE VALUE>\",\"distance_preference\":\"OTR\",\"image_url\":\"<ADD EXAMPLE VALUE>\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/jobs\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"job_id\\\":0,\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/jobs');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"contact\":{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"contact\":\"<ADD EXAMPLE VALUE>\",\"email\":\"<ADD EXAMPLE VALUE>\",\"name\":\"<ADD EXAMPLE VALUE>\",\"phone\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"website\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"},\"job_id\":0,\"perks\":{\"24x7_dispatch\":false,\"all_miles_paid\":false,\"company_fuel_card\":false,\"dental_insurance\":false,\"detention_layover_pay\":false,\"direct_deposit\":false,\"equipment_age\":0,\"free_roadside_assistance\":false,\"health_insurance\":false,\"home\":\"daily\",\"lease_purchase_available\":false,\"life_insurance\":false,\"no_touch_freight\":false,\"paid\":\"weekly\",\"paid_holidays\":false,\"paid_sick_time\":false,\"paid_vacation\":false,\"pet_friendly\":false,\"referral_bonuses\":false,\"rider_program\":false,\"round_trip_loads\":false,\"safety_bonus\":false,\"sign_on_bonus\":0},\"position\":{\"description\":\"<ADD EXAMPLE VALUE>\",\"distance_preference\":\"OTR\",\"image_url\":\"<ADD EXAMPLE VALUE>\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"contact\":{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"contact\":\"<ADD EXAMPLE VALUE>\",\"email\":\"<ADD EXAMPLE VALUE>\",\"name\":\"<ADD EXAMPLE VALUE>\",\"phone\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"website\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"},\"job_id\":0,\"perks\":{\"24x7_dispatch\":false,\"all_miles_paid\":false,\"company_fuel_card\":false,\"dental_insurance\":false,\"detention_layover_pay\":false,\"direct_deposit\":false,\"equipment_age\":0,\"free_roadside_assistance\":false,\"health_insurance\":false,\"home\":\"daily\",\"lease_purchase_available\":false,\"life_insurance\":false,\"no_touch_freight\":false,\"paid\":\"weekly\",\"paid_holidays\":false,\"paid_sick_time\":false,\"paid_vacation\":false,\"pet_friendly\":false,\"referral_bonuses\":false,\"rider_program\":false,\"round_trip_loads\":false,\"safety_bonus\":false,\"sign_on_bonus\":0},\"position\":{\"description\":\"<ADD EXAMPLE VALUE>\",\"distance_preference\":\"OTR\",\"image_url\":\"<ADD EXAMPLE VALUE>\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/jobs');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"job_id\\\":0,\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/jobs\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/jobs\"\n\npayload = \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"job_id\\\":0,\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/jobs\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"job_id\\\":0,\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://www.truckersearch.com/v1/jobs \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"contact\":{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"contact\":\"<ADD EXAMPLE VALUE>\",\"email\":\"<ADD EXAMPLE VALUE>\",\"name\":\"<ADD EXAMPLE VALUE>\",\"phone\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"website\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"},\"job_id\":0,\"perks\":{\"24x7_dispatch\":false,\"all_miles_paid\":false,\"company_fuel_card\":false,\"dental_insurance\":false,\"detention_layover_pay\":false,\"direct_deposit\":false,\"equipment_age\":0,\"free_roadside_assistance\":false,\"health_insurance\":false,\"home\":\"daily\",\"lease_purchase_available\":false,\"life_insurance\":false,\"no_touch_freight\":false,\"paid\":\"weekly\",\"paid_holidays\":false,\"paid_sick_time\":false,\"paid_vacation\":false,\"pet_friendly\":false,\"referral_bonuses\":false,\"rider_program\":false,\"round_trip_loads\":false,\"safety_bonus\":false,\"sign_on_bonus\":0},\"position\":{\"description\":\"<ADD EXAMPLE VALUE>\",\"distance_preference\":\"OTR\",\"image_url\":\"<ADD EXAMPLE VALUE>\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"contact\":{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"contact\":\"<ADD EXAMPLE VALUE>\",\"email\":\"<ADD EXAMPLE VALUE>\",\"name\":\"<ADD EXAMPLE VALUE>\",\"phone\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"website\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"},\"job_id\":0,\"perks\":{\"24x7_dispatch\":false,\"all_miles_paid\":false,\"company_fuel_card\":false,\"dental_insurance\":false,\"detention_layover_pay\":false,\"direct_deposit\":false,\"equipment_age\":0,\"free_roadside_assistance\":false,\"health_insurance\":false,\"home\":\"daily\",\"lease_purchase_available\":false,\"life_insurance\":false,\"no_touch_freight\":false,\"paid\":\"weekly\",\"paid_holidays\":false,\"paid_sick_time\":false,\"paid_vacation\":false,\"pet_friendly\":false,\"referral_bonuses\":false,\"rider_program\":false,\"round_trip_loads\":false,\"safety_bonus\":false,\"sign_on_bonus\":0},\"position\":{\"description\":\"<ADD EXAMPLE VALUE>\",\"distance_preference\":\"OTR\",\"image_url\":\"<ADD EXAMPLE VALUE>\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}' |  \\\n  http PATCH https://www.truckersearch.com/v1/jobs \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"contact\":{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"contact\":\"<ADD EXAMPLE VALUE>\",\"email\":\"<ADD EXAMPLE VALUE>\",\"name\":\"<ADD EXAMPLE VALUE>\",\"phone\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"website\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"},\"job_id\":0,\"perks\":{\"24x7_dispatch\":false,\"all_miles_paid\":false,\"company_fuel_card\":false,\"dental_insurance\":false,\"detention_layover_pay\":false,\"direct_deposit\":false,\"equipment_age\":0,\"free_roadside_assistance\":false,\"health_insurance\":false,\"home\":\"daily\",\"lease_purchase_available\":false,\"life_insurance\":false,\"no_touch_freight\":false,\"paid\":\"weekly\",\"paid_holidays\":false,\"paid_sick_time\":false,\"paid_vacation\":false,\"pet_friendly\":false,\"referral_bonuses\":false,\"rider_program\":false,\"round_trip_loads\":false,\"safety_bonus\":false,\"sign_on_bonus\":0},\"position\":{\"description\":\"<ADD EXAMPLE VALUE>\",\"distance_preference\":\"OTR\",\"image_url\":\"<ADD EXAMPLE VALUE>\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/jobs"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"contact\": [\n    \"address\": \"<ADD EXAMPLE VALUE>\",\n    \"city\": \"<ADD EXAMPLE VALUE>\",\n    \"contact\": \"<ADD EXAMPLE VALUE>\",\n    \"email\": \"<ADD EXAMPLE VALUE>\",\n    \"name\": \"<ADD EXAMPLE VALUE>\",\n    \"phone\": 0,\n    \"state\": \"<ADD EXAMPLE VALUE>\",\n    \"website\": \"<ADD EXAMPLE VALUE>\",\n    \"zip\": \"<ADD EXAMPLE VALUE>\"\n  ],\n  \"job_id\": 0,\n  \"perks\": [\n    \"24x7_dispatch\": false,\n    \"all_miles_paid\": false,\n    \"company_fuel_card\": false,\n    \"dental_insurance\": false,\n    \"detention_layover_pay\": false,\n    \"direct_deposit\": false,\n    \"equipment_age\": 0,\n    \"free_roadside_assistance\": false,\n    \"health_insurance\": false,\n    \"home\": \"daily\",\n    \"lease_purchase_available\": false,\n    \"life_insurance\": false,\n    \"no_touch_freight\": false,\n    \"paid\": \"weekly\",\n    \"paid_holidays\": false,\n    \"paid_sick_time\": false,\n    \"paid_vacation\": false,\n    \"pet_friendly\": false,\n    \"referral_bonuses\": false,\n    \"rider_program\": false,\n    \"round_trip_loads\": false,\n    \"safety_bonus\": false,\n    \"sign_on_bonus\": 0\n  ],\n  \"position\": [\n    \"description\": \"<ADD EXAMPLE VALUE>\",\n    \"distance_preference\": \"OTR\",\n    \"image_url\": \"<ADD EXAMPLE VALUE>\",\n    \"region_preference\": \"east coast\",\n    \"team_preference\": \"single\"\n  ]\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/jobs\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "Create a new Job ad for the currently logged in user.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/job_data"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201",
            "headers": {
              "url": {
                "description": "A url pointing to the newly created resource.",
                "type": "string",
                "x-example": ".../jobs/?id=1234"
              }
            }
          }
        },
        "summary": "STAGE=UNK Post a new job ad.",
        "tags": [
          "jobs"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/jobs\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"Image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_data\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/jobs\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"Image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_data\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/jobs\"\n\n\tpayload := strings.NewReader(\"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"Image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_data\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"Image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_data\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/jobs\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://www.truckersearch.com/v1/jobs\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"Image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_data\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/jobs\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"Image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_data\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"contact\": {\n    \"address\": \"<ADD EXAMPLE VALUE>\",\n    \"city\": \"<ADD EXAMPLE VALUE>\",\n    \"contact\": \"<ADD EXAMPLE VALUE>\",\n    \"email\": \"<ADD EXAMPLE VALUE>\",\n    \"name\": \"<ADD EXAMPLE VALUE>\",\n    \"phone\": 0,\n    \"state\": \"<ADD EXAMPLE VALUE>\",\n    \"website\": \"<ADD EXAMPLE VALUE>\",\n    \"zip\": \"<ADD EXAMPLE VALUE>\"\n  },\n  \"perks\": {\n    \"24x7_dispatch\": false,\n    \"all_miles_paid\": false,\n    \"company_fuel_card\": false,\n    \"dental_insurance\": false,\n    \"detention_layover_pay\": false,\n    \"direct_deposit\": false,\n    \"equipment_age\": 0,\n    \"free_roadside_assistance\": false,\n    \"health_insurance\": false,\n    \"home\": \"daily\",\n    \"lease_purchase_available\": false,\n    \"life_insurance\": false,\n    \"no_touch_freight\": false,\n    \"paid\": \"weekly\",\n    \"paid_holidays\": false,\n    \"paid_sick_time\": false,\n    \"paid_vacation\": false,\n    \"pet_friendly\": false,\n    \"referral_bonuses\": false,\n    \"rider_program\": false,\n    \"round_trip_loads\": false,\n    \"safety_bonus\": false,\n    \"sign_on_bonus\": 0\n  },\n  \"position\": {\n    \"Image_url\": \"<ADD EXAMPLE VALUE>\",\n    \"description\": \"<ADD EXAMPLE VALUE>\",\n    \"distance_preference\": \"OTR\",\n    \"image_data\": \"<ADD EXAMPLE VALUE>\",\n    \"region_preference\": \"east coast\",\n    \"team_preference\": \"single\"\n  }\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.truckersearch.com/v1/jobs\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/jobs\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ contact: \n   { address: '<ADD EXAMPLE VALUE>',\n     city: '<ADD EXAMPLE VALUE>',\n     contact: '<ADD EXAMPLE VALUE>',\n     email: '<ADD EXAMPLE VALUE>',\n     name: '<ADD EXAMPLE VALUE>',\n     phone: 0,\n     state: '<ADD EXAMPLE VALUE>',\n     website: '<ADD EXAMPLE VALUE>',\n     zip: '<ADD EXAMPLE VALUE>' },\n  perks: \n   { '24x7_dispatch': false,\n     all_miles_paid: false,\n     company_fuel_card: false,\n     dental_insurance: false,\n     detention_layover_pay: false,\n     direct_deposit: false,\n     equipment_age: 0,\n     free_roadside_assistance: false,\n     health_insurance: false,\n     home: 'daily',\n     lease_purchase_available: false,\n     life_insurance: false,\n     no_touch_freight: false,\n     paid: 'weekly',\n     paid_holidays: false,\n     paid_sick_time: false,\n     paid_vacation: false,\n     pet_friendly: false,\n     referral_bonuses: false,\n     rider_program: false,\n     round_trip_loads: false,\n     safety_bonus: false,\n     sign_on_bonus: 0 },\n  position: \n   { Image_url: '<ADD EXAMPLE VALUE>',\n     description: '<ADD EXAMPLE VALUE>',\n     distance_preference: 'OTR',\n     image_data: '<ADD EXAMPLE VALUE>',\n     region_preference: 'east coast',\n     team_preference: 'single' } }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://www.truckersearch.com/v1/jobs',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { contact: \n      { address: '<ADD EXAMPLE VALUE>',\n        city: '<ADD EXAMPLE VALUE>',\n        contact: '<ADD EXAMPLE VALUE>',\n        email: '<ADD EXAMPLE VALUE>',\n        name: '<ADD EXAMPLE VALUE>',\n        phone: 0,\n        state: '<ADD EXAMPLE VALUE>',\n        website: '<ADD EXAMPLE VALUE>',\n        zip: '<ADD EXAMPLE VALUE>' },\n     perks: \n      { '24x7_dispatch': false,\n        all_miles_paid: false,\n        company_fuel_card: false,\n        dental_insurance: false,\n        detention_layover_pay: false,\n        direct_deposit: false,\n        equipment_age: 0,\n        free_roadside_assistance: false,\n        health_insurance: false,\n        home: 'daily',\n        lease_purchase_available: false,\n        life_insurance: false,\n        no_touch_freight: false,\n        paid: 'weekly',\n        paid_holidays: false,\n        paid_sick_time: false,\n        paid_vacation: false,\n        pet_friendly: false,\n        referral_bonuses: false,\n        rider_program: false,\n        round_trip_loads: false,\n        safety_bonus: false,\n        sign_on_bonus: 0 },\n     position: \n      { Image_url: '<ADD EXAMPLE VALUE>',\n        description: '<ADD EXAMPLE VALUE>',\n        distance_preference: 'OTR',\n        image_data: '<ADD EXAMPLE VALUE>',\n        region_preference: 'east coast',\n        team_preference: 'single' } },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://www.truckersearch.com/v1/jobs\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"contact\": {\n    \"address\": \"<ADD EXAMPLE VALUE>\",\n    \"city\": \"<ADD EXAMPLE VALUE>\",\n    \"contact\": \"<ADD EXAMPLE VALUE>\",\n    \"email\": \"<ADD EXAMPLE VALUE>\",\n    \"name\": \"<ADD EXAMPLE VALUE>\",\n    \"phone\": 0,\n    \"state\": \"<ADD EXAMPLE VALUE>\",\n    \"website\": \"<ADD EXAMPLE VALUE>\",\n    \"zip\": \"<ADD EXAMPLE VALUE>\"\n  },\n  \"perks\": {\n    \"24x7_dispatch\": false,\n    \"all_miles_paid\": false,\n    \"company_fuel_card\": false,\n    \"dental_insurance\": false,\n    \"detention_layover_pay\": false,\n    \"direct_deposit\": false,\n    \"equipment_age\": 0,\n    \"free_roadside_assistance\": false,\n    \"health_insurance\": false,\n    \"home\": \"daily\",\n    \"lease_purchase_available\": false,\n    \"life_insurance\": false,\n    \"no_touch_freight\": false,\n    \"paid\": \"weekly\",\n    \"paid_holidays\": false,\n    \"paid_sick_time\": false,\n    \"paid_vacation\": false,\n    \"pet_friendly\": false,\n    \"referral_bonuses\": false,\n    \"rider_program\": false,\n    \"round_trip_loads\": false,\n    \"safety_bonus\": false,\n    \"sign_on_bonus\": 0\n  },\n  \"position\": {\n    \"Image_url\": \"<ADD EXAMPLE VALUE>\",\n    \"description\": \"<ADD EXAMPLE VALUE>\",\n    \"distance_preference\": \"OTR\",\n    \"image_data\": \"<ADD EXAMPLE VALUE>\",\n    \"region_preference\": \"east coast\",\n    \"team_preference\": \"single\"\n  }\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"contact\": @{ @\"address\": @\"<ADD EXAMPLE VALUE>\", @\"city\": @\"<ADD EXAMPLE VALUE>\", @\"contact\": @\"<ADD EXAMPLE VALUE>\", @\"email\": @\"<ADD EXAMPLE VALUE>\", @\"name\": @\"<ADD EXAMPLE VALUE>\", @\"phone\": @0, @\"state\": @\"<ADD EXAMPLE VALUE>\", @\"website\": @\"<ADD EXAMPLE VALUE>\", @\"zip\": @\"<ADD EXAMPLE VALUE>\" },\n                              @\"perks\": @{ @\"24x7_dispatch\": @NO, @\"all_miles_paid\": @NO, @\"company_fuel_card\": @NO, @\"dental_insurance\": @NO, @\"detention_layover_pay\": @NO, @\"direct_deposit\": @NO, @\"equipment_age\": @0, @\"free_roadside_assistance\": @NO, @\"health_insurance\": @NO, @\"home\": @\"daily\", @\"lease_purchase_available\": @NO, @\"life_insurance\": @NO, @\"no_touch_freight\": @NO, @\"paid\": @\"weekly\", @\"paid_holidays\": @NO, @\"paid_sick_time\": @NO, @\"paid_vacation\": @NO, @\"pet_friendly\": @NO, @\"referral_bonuses\": @NO, @\"rider_program\": @NO, @\"round_trip_loads\": @NO, @\"safety_bonus\": @NO, @\"sign_on_bonus\": @0 },\n                              @\"position\": @{ @\"Image_url\": @\"<ADD EXAMPLE VALUE>\", @\"description\": @\"<ADD EXAMPLE VALUE>\", @\"distance_preference\": @\"OTR\", @\"image_data\": @\"<ADD EXAMPLE VALUE>\", @\"region_preference\": @\"east coast\", @\"team_preference\": @\"single\" } };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/jobs\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/jobs\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"Image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_data\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://www.truckersearch.com/v1/jobs\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"contact\":{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"contact\":\"<ADD EXAMPLE VALUE>\",\"email\":\"<ADD EXAMPLE VALUE>\",\"name\":\"<ADD EXAMPLE VALUE>\",\"phone\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"website\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"},\"perks\":{\"24x7_dispatch\":false,\"all_miles_paid\":false,\"company_fuel_card\":false,\"dental_insurance\":false,\"detention_layover_pay\":false,\"direct_deposit\":false,\"equipment_age\":0,\"free_roadside_assistance\":false,\"health_insurance\":false,\"home\":\"daily\",\"lease_purchase_available\":false,\"life_insurance\":false,\"no_touch_freight\":false,\"paid\":\"weekly\",\"paid_holidays\":false,\"paid_sick_time\":false,\"paid_vacation\":false,\"pet_friendly\":false,\"referral_bonuses\":false,\"rider_program\":false,\"round_trip_loads\":false,\"safety_bonus\":false,\"sign_on_bonus\":0},\"position\":{\"Image_url\":\"<ADD EXAMPLE VALUE>\",\"description\":\"<ADD EXAMPLE VALUE>\",\"distance_preference\":\"OTR\",\"image_data\":\"<ADD EXAMPLE VALUE>\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/jobs\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"Image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_data\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/jobs');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"contact\":{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"contact\":\"<ADD EXAMPLE VALUE>\",\"email\":\"<ADD EXAMPLE VALUE>\",\"name\":\"<ADD EXAMPLE VALUE>\",\"phone\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"website\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"},\"perks\":{\"24x7_dispatch\":false,\"all_miles_paid\":false,\"company_fuel_card\":false,\"dental_insurance\":false,\"detention_layover_pay\":false,\"direct_deposit\":false,\"equipment_age\":0,\"free_roadside_assistance\":false,\"health_insurance\":false,\"home\":\"daily\",\"lease_purchase_available\":false,\"life_insurance\":false,\"no_touch_freight\":false,\"paid\":\"weekly\",\"paid_holidays\":false,\"paid_sick_time\":false,\"paid_vacation\":false,\"pet_friendly\":false,\"referral_bonuses\":false,\"rider_program\":false,\"round_trip_loads\":false,\"safety_bonus\":false,\"sign_on_bonus\":0},\"position\":{\"Image_url\":\"<ADD EXAMPLE VALUE>\",\"description\":\"<ADD EXAMPLE VALUE>\",\"distance_preference\":\"OTR\",\"image_data\":\"<ADD EXAMPLE VALUE>\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"contact\":{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"contact\":\"<ADD EXAMPLE VALUE>\",\"email\":\"<ADD EXAMPLE VALUE>\",\"name\":\"<ADD EXAMPLE VALUE>\",\"phone\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"website\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"},\"perks\":{\"24x7_dispatch\":false,\"all_miles_paid\":false,\"company_fuel_card\":false,\"dental_insurance\":false,\"detention_layover_pay\":false,\"direct_deposit\":false,\"equipment_age\":0,\"free_roadside_assistance\":false,\"health_insurance\":false,\"home\":\"daily\",\"lease_purchase_available\":false,\"life_insurance\":false,\"no_touch_freight\":false,\"paid\":\"weekly\",\"paid_holidays\":false,\"paid_sick_time\":false,\"paid_vacation\":false,\"pet_friendly\":false,\"referral_bonuses\":false,\"rider_program\":false,\"round_trip_loads\":false,\"safety_bonus\":false,\"sign_on_bonus\":0},\"position\":{\"Image_url\":\"<ADD EXAMPLE VALUE>\",\"description\":\"<ADD EXAMPLE VALUE>\",\"distance_preference\":\"OTR\",\"image_data\":\"<ADD EXAMPLE VALUE>\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/jobs');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"Image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_data\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/jobs\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/jobs\"\n\npayload = \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"Image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_data\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/jobs\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"contact\\\":{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"email\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"phone\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"website\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"},\\\"perks\\\":{\\\"24x7_dispatch\\\":false,\\\"all_miles_paid\\\":false,\\\"company_fuel_card\\\":false,\\\"dental_insurance\\\":false,\\\"detention_layover_pay\\\":false,\\\"direct_deposit\\\":false,\\\"equipment_age\\\":0,\\\"free_roadside_assistance\\\":false,\\\"health_insurance\\\":false,\\\"home\\\":\\\"daily\\\",\\\"lease_purchase_available\\\":false,\\\"life_insurance\\\":false,\\\"no_touch_freight\\\":false,\\\"paid\\\":\\\"weekly\\\",\\\"paid_holidays\\\":false,\\\"paid_sick_time\\\":false,\\\"paid_vacation\\\":false,\\\"pet_friendly\\\":false,\\\"referral_bonuses\\\":false,\\\"rider_program\\\":false,\\\"round_trip_loads\\\":false,\\\"safety_bonus\\\":false,\\\"sign_on_bonus\\\":0},\\\"position\\\":{\\\"Image_url\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"description\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"distance_preference\\\":\\\"OTR\\\",\\\"image_data\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://www.truckersearch.com/v1/jobs \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"contact\":{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"contact\":\"<ADD EXAMPLE VALUE>\",\"email\":\"<ADD EXAMPLE VALUE>\",\"name\":\"<ADD EXAMPLE VALUE>\",\"phone\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"website\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"},\"perks\":{\"24x7_dispatch\":false,\"all_miles_paid\":false,\"company_fuel_card\":false,\"dental_insurance\":false,\"detention_layover_pay\":false,\"direct_deposit\":false,\"equipment_age\":0,\"free_roadside_assistance\":false,\"health_insurance\":false,\"home\":\"daily\",\"lease_purchase_available\":false,\"life_insurance\":false,\"no_touch_freight\":false,\"paid\":\"weekly\",\"paid_holidays\":false,\"paid_sick_time\":false,\"paid_vacation\":false,\"pet_friendly\":false,\"referral_bonuses\":false,\"rider_program\":false,\"round_trip_loads\":false,\"safety_bonus\":false,\"sign_on_bonus\":0},\"position\":{\"Image_url\":\"<ADD EXAMPLE VALUE>\",\"description\":\"<ADD EXAMPLE VALUE>\",\"distance_preference\":\"OTR\",\"image_data\":\"<ADD EXAMPLE VALUE>\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"contact\":{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"contact\":\"<ADD EXAMPLE VALUE>\",\"email\":\"<ADD EXAMPLE VALUE>\",\"name\":\"<ADD EXAMPLE VALUE>\",\"phone\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"website\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"},\"perks\":{\"24x7_dispatch\":false,\"all_miles_paid\":false,\"company_fuel_card\":false,\"dental_insurance\":false,\"detention_layover_pay\":false,\"direct_deposit\":false,\"equipment_age\":0,\"free_roadside_assistance\":false,\"health_insurance\":false,\"home\":\"daily\",\"lease_purchase_available\":false,\"life_insurance\":false,\"no_touch_freight\":false,\"paid\":\"weekly\",\"paid_holidays\":false,\"paid_sick_time\":false,\"paid_vacation\":false,\"pet_friendly\":false,\"referral_bonuses\":false,\"rider_program\":false,\"round_trip_loads\":false,\"safety_bonus\":false,\"sign_on_bonus\":0},\"position\":{\"Image_url\":\"<ADD EXAMPLE VALUE>\",\"description\":\"<ADD EXAMPLE VALUE>\",\"distance_preference\":\"OTR\",\"image_data\":\"<ADD EXAMPLE VALUE>\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}' |  \\\n  http POST https://www.truckersearch.com/v1/jobs \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"contact\":{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"contact\":\"<ADD EXAMPLE VALUE>\",\"email\":\"<ADD EXAMPLE VALUE>\",\"name\":\"<ADD EXAMPLE VALUE>\",\"phone\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"website\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"},\"perks\":{\"24x7_dispatch\":false,\"all_miles_paid\":false,\"company_fuel_card\":false,\"dental_insurance\":false,\"detention_layover_pay\":false,\"direct_deposit\":false,\"equipment_age\":0,\"free_roadside_assistance\":false,\"health_insurance\":false,\"home\":\"daily\",\"lease_purchase_available\":false,\"life_insurance\":false,\"no_touch_freight\":false,\"paid\":\"weekly\",\"paid_holidays\":false,\"paid_sick_time\":false,\"paid_vacation\":false,\"pet_friendly\":false,\"referral_bonuses\":false,\"rider_program\":false,\"round_trip_loads\":false,\"safety_bonus\":false,\"sign_on_bonus\":0},\"position\":{\"Image_url\":\"<ADD EXAMPLE VALUE>\",\"description\":\"<ADD EXAMPLE VALUE>\",\"distance_preference\":\"OTR\",\"image_data\":\"<ADD EXAMPLE VALUE>\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/jobs"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"contact\": [\n    \"address\": \"<ADD EXAMPLE VALUE>\",\n    \"city\": \"<ADD EXAMPLE VALUE>\",\n    \"contact\": \"<ADD EXAMPLE VALUE>\",\n    \"email\": \"<ADD EXAMPLE VALUE>\",\n    \"name\": \"<ADD EXAMPLE VALUE>\",\n    \"phone\": 0,\n    \"state\": \"<ADD EXAMPLE VALUE>\",\n    \"website\": \"<ADD EXAMPLE VALUE>\",\n    \"zip\": \"<ADD EXAMPLE VALUE>\"\n  ],\n  \"perks\": [\n    \"24x7_dispatch\": false,\n    \"all_miles_paid\": false,\n    \"company_fuel_card\": false,\n    \"dental_insurance\": false,\n    \"detention_layover_pay\": false,\n    \"direct_deposit\": false,\n    \"equipment_age\": 0,\n    \"free_roadside_assistance\": false,\n    \"health_insurance\": false,\n    \"home\": \"daily\",\n    \"lease_purchase_available\": false,\n    \"life_insurance\": false,\n    \"no_touch_freight\": false,\n    \"paid\": \"weekly\",\n    \"paid_holidays\": false,\n    \"paid_sick_time\": false,\n    \"paid_vacation\": false,\n    \"pet_friendly\": false,\n    \"referral_bonuses\": false,\n    \"rider_program\": false,\n    \"round_trip_loads\": false,\n    \"safety_bonus\": false,\n    \"sign_on_bonus\": 0\n  ],\n  \"position\": [\n    \"Image_url\": \"<ADD EXAMPLE VALUE>\",\n    \"description\": \"<ADD EXAMPLE VALUE>\",\n    \"distance_preference\": \"OTR\",\n    \"image_data\": \"<ADD EXAMPLE VALUE>\",\n    \"region_preference\": \"east coast\",\n    \"team_preference\": \"single\"\n  ]\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/jobs\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "JOBS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/jobs\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/jobs\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/jobs\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/jobs\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/jobs\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/jobs\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/jobs\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/jobs',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/jobs\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/jobs\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/jobs\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/jobs\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/jobs\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/jobs');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/jobs');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/jobs\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/jobs\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/jobs\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/jobs \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/jobs \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/jobs"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/jobs\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/jobs/boards": {
      "get": {
        "description": "Gets a list of other people's jobs.",
        "parameters": [
          {
            "in": "query",
            "name": "state",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "24x7_dispatch",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "all_miles_paid",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "company_fuel_card",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "dental_insurance",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "detention_layover_pay",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "direct_deposit",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "equipment_age",
            "required": false,
            "type": "number"
          },
          {
            "in": "query",
            "name": "free_roadside_assistance",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "health_insurance",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "home",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "lease_purchase_available",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "life_insurance",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "no_touch_freight",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "paid",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "paid_holidays",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "paid_sick_time",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "paid_vacation",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "pet_friendly",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "referral_bonuses",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "rider_program",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "round_trip_loads",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "safety_bonus",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "sign_on_bonus",
            "required": false,
            "type": "number"
          },
          {
            "description": "If specified it will return either only local jobs, or only OTR jobs.",
            "enum": [
              "local",
              "OTR"
            ],
            "in": "query",
            "name": "distance_preference",
            "required": false,
            "type": "string"
          },
          {
            "description": "This is a list of possible regions. This matches the regions from searching and posting a job ad on our website. I am adding it to the API with the assumption that we can expand our resume regions to match. This should aviod some confusion and weirdness. An example would be alert options. ",
            "enum": [
              "east coast",
              "west coast",
              "mid west",
              "nationwide",
              "north east",
              "north west",
              "south east",
              "south west",
              "local"
            ],
            "in": "query",
            "name": "region_preference",
            "required": false,
            "type": "string"
          },
          {
            "description": "This will return just 1 job.",
            "in": "query",
            "name": "job_id",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "page_number",
            "required": false,
            "type": "integer"
          },
          {
            "default": 50,
            "description": "Results per page.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "item_count",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Only return a team or a single driver",
            "enum": [
              "single",
              "team"
            ],
            "in": "query",
            "name": "team_preference",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "returns a list of jobs.",
            "schema": {
              "$ref": "#/definitions/job_list"
            }
          }
        },
        "summary": "Get a list of jobs",
        "tags": [
          "jobs"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/jobs/boards',\n  qs: \n   { state: 'SOME_STRING_VALUE',\n     '24x7_dispatch': 'SOME_BOOLEAN_VALUE',\n     all_miles_paid: 'SOME_BOOLEAN_VALUE',\n     company_fuel_card: 'SOME_BOOLEAN_VALUE',\n     dental_insurance: 'SOME_BOOLEAN_VALUE',\n     detention_layover_pay: 'SOME_BOOLEAN_VALUE',\n     direct_deposit: 'SOME_BOOLEAN_VALUE',\n     equipment_age: 'SOME_NUMBER_VALUE',\n     free_roadside_assistance: 'SOME_BOOLEAN_VALUE',\n     health_insurance: 'SOME_BOOLEAN_VALUE',\n     home: 'SOME_STRING_VALUE',\n     lease_purchase_available: 'SOME_BOOLEAN_VALUE',\n     life_insurance: 'SOME_BOOLEAN_VALUE',\n     no_touch_freight: 'SOME_BOOLEAN_VALUE',\n     paid: 'SOME_STRING_VALUE',\n     paid_holidays: 'SOME_BOOLEAN_VALUE',\n     paid_sick_time: 'SOME_BOOLEAN_VALUE',\n     paid_vacation: 'SOME_BOOLEAN_VALUE',\n     pet_friendly: 'SOME_BOOLEAN_VALUE',\n     referral_bonuses: 'SOME_BOOLEAN_VALUE',\n     rider_program: 'SOME_BOOLEAN_VALUE',\n     round_trip_loads: 'SOME_BOOLEAN_VALUE',\n     safety_bonus: 'SOME_BOOLEAN_VALUE',\n     sign_on_bonus: 'SOME_NUMBER_VALUE',\n     distance_preference: 'SOME_STRING_VALUE',\n     region_preference: 'SOME_STRING_VALUE',\n     job_id: 'SOME_INTEGER_VALUE',\n     page_number: 'SOME_INTEGER_VALUE',\n     item_count: '50',\n     team_preference: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/jobs/boards\");\n\nreq.query({\n  \"state\": \"SOME_STRING_VALUE\",\n  \"24x7_dispatch\": \"SOME_BOOLEAN_VALUE\",\n  \"all_miles_paid\": \"SOME_BOOLEAN_VALUE\",\n  \"company_fuel_card\": \"SOME_BOOLEAN_VALUE\",\n  \"dental_insurance\": \"SOME_BOOLEAN_VALUE\",\n  \"detention_layover_pay\": \"SOME_BOOLEAN_VALUE\",\n  \"direct_deposit\": \"SOME_BOOLEAN_VALUE\",\n  \"equipment_age\": \"SOME_NUMBER_VALUE\",\n  \"free_roadside_assistance\": \"SOME_BOOLEAN_VALUE\",\n  \"health_insurance\": \"SOME_BOOLEAN_VALUE\",\n  \"home\": \"SOME_STRING_VALUE\",\n  \"lease_purchase_available\": \"SOME_BOOLEAN_VALUE\",\n  \"life_insurance\": \"SOME_BOOLEAN_VALUE\",\n  \"no_touch_freight\": \"SOME_BOOLEAN_VALUE\",\n  \"paid\": \"SOME_STRING_VALUE\",\n  \"paid_holidays\": \"SOME_BOOLEAN_VALUE\",\n  \"paid_sick_time\": \"SOME_BOOLEAN_VALUE\",\n  \"paid_vacation\": \"SOME_BOOLEAN_VALUE\",\n  \"pet_friendly\": \"SOME_BOOLEAN_VALUE\",\n  \"referral_bonuses\": \"SOME_BOOLEAN_VALUE\",\n  \"rider_program\": \"SOME_BOOLEAN_VALUE\",\n  \"round_trip_loads\": \"SOME_BOOLEAN_VALUE\",\n  \"safety_bonus\": \"SOME_BOOLEAN_VALUE\",\n  \"sign_on_bonus\": \"SOME_NUMBER_VALUE\",\n  \"distance_preference\": \"SOME_STRING_VALUE\",\n  \"region_preference\": \"SOME_STRING_VALUE\",\n  \"job_id\": \"SOME_INTEGER_VALUE\",\n  \"page_number\": \"SOME_INTEGER_VALUE\",\n  \"item_count\": \"50\",\n  \"team_preference\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/jobs/boards');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'state' => 'SOME_STRING_VALUE',\n  '24x7_dispatch' => 'SOME_BOOLEAN_VALUE',\n  'all_miles_paid' => 'SOME_BOOLEAN_VALUE',\n  'company_fuel_card' => 'SOME_BOOLEAN_VALUE',\n  'dental_insurance' => 'SOME_BOOLEAN_VALUE',\n  'detention_layover_pay' => 'SOME_BOOLEAN_VALUE',\n  'direct_deposit' => 'SOME_BOOLEAN_VALUE',\n  'equipment_age' => 'SOME_NUMBER_VALUE',\n  'free_roadside_assistance' => 'SOME_BOOLEAN_VALUE',\n  'health_insurance' => 'SOME_BOOLEAN_VALUE',\n  'home' => 'SOME_STRING_VALUE',\n  'lease_purchase_available' => 'SOME_BOOLEAN_VALUE',\n  'life_insurance' => 'SOME_BOOLEAN_VALUE',\n  'no_touch_freight' => 'SOME_BOOLEAN_VALUE',\n  'paid' => 'SOME_STRING_VALUE',\n  'paid_holidays' => 'SOME_BOOLEAN_VALUE',\n  'paid_sick_time' => 'SOME_BOOLEAN_VALUE',\n  'paid_vacation' => 'SOME_BOOLEAN_VALUE',\n  'pet_friendly' => 'SOME_BOOLEAN_VALUE',\n  'referral_bonuses' => 'SOME_BOOLEAN_VALUE',\n  'rider_program' => 'SOME_BOOLEAN_VALUE',\n  'round_trip_loads' => 'SOME_BOOLEAN_VALUE',\n  'safety_bonus' => 'SOME_BOOLEAN_VALUE',\n  'sign_on_bonus' => 'SOME_NUMBER_VALUE',\n  'distance_preference' => 'SOME_STRING_VALUE',\n  'region_preference' => 'SOME_STRING_VALUE',\n  'job_id' => 'SOME_INTEGER_VALUE',\n  'page_number' => 'SOME_INTEGER_VALUE',\n  'item_count' => '50',\n  'team_preference' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/jobs/boards');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'state' => 'SOME_STRING_VALUE',\n  '24x7_dispatch' => 'SOME_BOOLEAN_VALUE',\n  'all_miles_paid' => 'SOME_BOOLEAN_VALUE',\n  'company_fuel_card' => 'SOME_BOOLEAN_VALUE',\n  'dental_insurance' => 'SOME_BOOLEAN_VALUE',\n  'detention_layover_pay' => 'SOME_BOOLEAN_VALUE',\n  'direct_deposit' => 'SOME_BOOLEAN_VALUE',\n  'equipment_age' => 'SOME_NUMBER_VALUE',\n  'free_roadside_assistance' => 'SOME_BOOLEAN_VALUE',\n  'health_insurance' => 'SOME_BOOLEAN_VALUE',\n  'home' => 'SOME_STRING_VALUE',\n  'lease_purchase_available' => 'SOME_BOOLEAN_VALUE',\n  'life_insurance' => 'SOME_BOOLEAN_VALUE',\n  'no_touch_freight' => 'SOME_BOOLEAN_VALUE',\n  'paid' => 'SOME_STRING_VALUE',\n  'paid_holidays' => 'SOME_BOOLEAN_VALUE',\n  'paid_sick_time' => 'SOME_BOOLEAN_VALUE',\n  'paid_vacation' => 'SOME_BOOLEAN_VALUE',\n  'pet_friendly' => 'SOME_BOOLEAN_VALUE',\n  'referral_bonuses' => 'SOME_BOOLEAN_VALUE',\n  'rider_program' => 'SOME_BOOLEAN_VALUE',\n  'round_trip_loads' => 'SOME_BOOLEAN_VALUE',\n  'safety_bonus' => 'SOME_BOOLEAN_VALUE',\n  'sign_on_bonus' => 'SOME_NUMBER_VALUE',\n  'distance_preference' => 'SOME_STRING_VALUE',\n  'region_preference' => 'SOME_STRING_VALUE',\n  'job_id' => 'SOME_INTEGER_VALUE',\n  'page_number' => 'SOME_INTEGER_VALUE',\n  'item_count' => '50',\n  'team_preference' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/jobs/boards\"\n\nquerystring = {\"state\":\"SOME_STRING_VALUE\",\"24x7_dispatch\":\"SOME_BOOLEAN_VALUE\",\"all_miles_paid\":\"SOME_BOOLEAN_VALUE\",\"company_fuel_card\":\"SOME_BOOLEAN_VALUE\",\"dental_insurance\":\"SOME_BOOLEAN_VALUE\",\"detention_layover_pay\":\"SOME_BOOLEAN_VALUE\",\"direct_deposit\":\"SOME_BOOLEAN_VALUE\",\"equipment_age\":\"SOME_NUMBER_VALUE\",\"free_roadside_assistance\":\"SOME_BOOLEAN_VALUE\",\"health_insurance\":\"SOME_BOOLEAN_VALUE\",\"home\":\"SOME_STRING_VALUE\",\"lease_purchase_available\":\"SOME_BOOLEAN_VALUE\",\"life_insurance\":\"SOME_BOOLEAN_VALUE\",\"no_touch_freight\":\"SOME_BOOLEAN_VALUE\",\"paid\":\"SOME_STRING_VALUE\",\"paid_holidays\":\"SOME_BOOLEAN_VALUE\",\"paid_sick_time\":\"SOME_BOOLEAN_VALUE\",\"paid_vacation\":\"SOME_BOOLEAN_VALUE\",\"pet_friendly\":\"SOME_BOOLEAN_VALUE\",\"referral_bonuses\":\"SOME_BOOLEAN_VALUE\",\"rider_program\":\"SOME_BOOLEAN_VALUE\",\"round_trip_loads\":\"SOME_BOOLEAN_VALUE\",\"safety_bonus\":\"SOME_BOOLEAN_VALUE\",\"sign_on_bonus\":\"SOME_NUMBER_VALUE\",\"distance_preference\":\"SOME_STRING_VALUE\",\"region_preference\":\"SOME_STRING_VALUE\",\"job_id\":\"SOME_INTEGER_VALUE\",\"page_number\":\"SOME_INTEGER_VALUE\",\"item_count\":\"50\",\"team_preference\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/jobs/boards?state=SOME_STRING_VALUE&24x7_dispatch=SOME_BOOLEAN_VALUE&all_miles_paid=SOME_BOOLEAN_VALUE&company_fuel_card=SOME_BOOLEAN_VALUE&dental_insurance=SOME_BOOLEAN_VALUE&detention_layover_pay=SOME_BOOLEAN_VALUE&direct_deposit=SOME_BOOLEAN_VALUE&equipment_age=SOME_NUMBER_VALUE&free_roadside_assistance=SOME_BOOLEAN_VALUE&health_insurance=SOME_BOOLEAN_VALUE&home=SOME_STRING_VALUE&lease_purchase_available=SOME_BOOLEAN_VALUE&life_insurance=SOME_BOOLEAN_VALUE&no_touch_freight=SOME_BOOLEAN_VALUE&paid=SOME_STRING_VALUE&paid_holidays=SOME_BOOLEAN_VALUE&paid_sick_time=SOME_BOOLEAN_VALUE&paid_vacation=SOME_BOOLEAN_VALUE&pet_friendly=SOME_BOOLEAN_VALUE&referral_bonuses=SOME_BOOLEAN_VALUE&rider_program=SOME_BOOLEAN_VALUE&round_trip_loads=SOME_BOOLEAN_VALUE&safety_bonus=SOME_BOOLEAN_VALUE&sign_on_bonus=SOME_NUMBER_VALUE&distance_preference=SOME_STRING_VALUE&region_preference=SOME_STRING_VALUE&job_id=SOME_INTEGER_VALUE&page_number=SOME_INTEGER_VALUE&item_count=50&team_preference=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "JOBS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/jobs/boards\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/jobs/boards\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/jobs/boards\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/jobs/boards\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/jobs/boards\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/jobs/boards\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/jobs/boards\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/jobs/boards',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/jobs/boards\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/jobs/boards\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/jobs/boards\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/jobs/boards\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/jobs/boards\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/jobs/boards');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/jobs/boards');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/jobs/boards\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/jobs/boards\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/jobs/boards\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/jobs/boards \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/jobs/boards \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/jobs/boards"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/jobs/boards\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/jobs/status": {
      "delete": {
        "parameters": [
          {
            "description": "The job ad to deactivate.",
            "in": "query",
            "name": "job_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "end-user-auth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Decativate a Job ad",
        "tags": [
          "jobs_status"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-auth: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-auth\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-auth\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-auth\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-auth\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-auth\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-auth\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/jobs/status?job_id=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-auth\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://www.truckersearch.com/v1/jobs/status',\n  qs: { job_id: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-auth': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://www.truckersearch.com/v1/jobs/status\");\n\nreq.query({\n  \"job_id\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-auth\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-auth\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-auth\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-auth\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-auth: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/jobs/status');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'job_id' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-auth' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/jobs/status');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'job_id' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-auth' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-auth': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/jobs/status?job_id=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/jobs/status\"\n\nquerystring = {\"job_id\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-auth': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-auth\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-auth: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-auth:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-auth: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-auth\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "This method will return back enough information to determine if a job ad is runnig, and when it will stop.",
        "parameters": [
          {
            "in": "query",
            "name": "job_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/inline_response_200_3"
            }
          }
        },
        "summary": "STAGE=UNK Get the status of a job ad.",
        "tags": [
          "jobs_status"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/jobs/status?job_id=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/jobs/status',\n  qs: { job_id: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/jobs/status\");\n\nreq.query({\n  \"job_id\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/jobs/status');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'job_id' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/jobs/status');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'job_id' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/jobs/status?job_id=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/jobs/status\"\n\nquerystring = {\"job_id\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/jobs/status?job_id=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "This method will only work if the add has days left of > 0, otherwise in theory it should return a url to a chargebee payment portal. ",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_5"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201",
            "headers": {
              "url": {
                "description": "The board location of the active job ad.",
                "type": "string"
              }
            }
          }
        },
        "summary": "STAGE=UNK Activate a job ad.",
        "tags": [
          "jobs_status"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/jobs/status\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"job_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/jobs/status\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"job_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/jobs/status\"\n\n\tpayload := strings.NewReader(\"{\\\"job_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"job_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/jobs/status\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://www.truckersearch.com/v1/jobs/status\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"job_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/jobs/status\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"job_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"job_id\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.truckersearch.com/v1/jobs/status\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/jobs/status\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ job_id: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://www.truckersearch.com/v1/jobs/status',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { job_id: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://www.truckersearch.com/v1/jobs/status\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"job_id\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"job_id\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/jobs/status\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/jobs/status\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"job_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://www.truckersearch.com/v1/jobs/status\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"job_id\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/jobs/status\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"job_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/jobs/status');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"job_id\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"job_id\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/jobs/status');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"job_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/jobs/status\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/jobs/status\"\n\npayload = \"{\\\"job_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/jobs/status\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"job_id\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://www.truckersearch.com/v1/jobs/status \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"job_id\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"job_id\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://www.truckersearch.com/v1/jobs/status \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"job_id\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/jobs/status"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"job_id\": \"<ADD EXAMPLE VALUE>\"]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/jobs/status\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "JOBS",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/jobs/status\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/jobs/status\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/jobs/status\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/jobs/status\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/jobs/status\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/jobs/status\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/jobs/status\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/jobs/status',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/jobs/status\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/jobs/status\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/jobs/status\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/jobs/status\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/jobs/status\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/jobs/status');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/jobs/status');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/jobs/status\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/jobs/status\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/jobs/status\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/jobs/status \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/jobs/status \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/jobs/status"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/jobs/status\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/messages": {
      "get": {
        "description": "This is the method that pulls down a conversation. Eeach user can only  only have one conversation per contact. \n Hidden messages are returned along with the  normal sent & read messages. This gives you the API developer the option to show  them if requested by the user, as well as updating individual messages. Hidden messages  ignore the mark_as_read flag. \n  Internally we have other statuses like pending, and rejected, but public users  of our API don't have access to them.",
        "parameters": [
          {
            "description": "Who the conversation is with.",
            "in": "query",
            "name": "contact_id",
            "required": true,
            "type": "number"
          },
          {
            "default": "yes",
            "description": "This will mark all messages in the conversation as read for the logged in user.",
            "enum": [
              "yes",
              "no"
            ],
            "in": "query",
            "name": "mark_as_read",
            "required": false,
            "type": "string"
          },
          {
            "default": "no",
            "description": "This gets the latest new message from the specified contact. It will return an empty list if there are no new messages.",
            "enum": [
              "yes",
              "no"
            ],
            "in": "query",
            "name": "newest_message_only",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/conversation_list"
            }
          }
        },
        "summary": "Get a conversation.",
        "tags": [
          "messages"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/messages',\n  qs: \n   { contact_id: 'SOME_NUMBER_VALUE',\n     mark_as_read: 'yes',\n     newest_message_only: 'no' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/messages\");\n\nreq.query({\n  \"contact_id\": \"SOME_NUMBER_VALUE\",\n  \"mark_as_read\": \"yes\",\n  \"newest_message_only\": \"no\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'contact_id' => 'SOME_NUMBER_VALUE',\n  'mark_as_read' => 'yes',\n  'newest_message_only' => 'no'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'contact_id' => 'SOME_NUMBER_VALUE',\n  'mark_as_read' => 'yes',\n  'newest_message_only' => 'no'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages\"\n\nquerystring = {\"contact_id\":\"SOME_NUMBER_VALUE\",\"mark_as_read\":\"yes\",\"newest_message_only\":\"no\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages?contact_id=SOME_NUMBER_VALUE&mark_as_read=yes&newest_message_only=no\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "description": "¨",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_7"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Status 202",
            "schema": {
              "$ref": "#/definitions/conversation_list"
            }
          }
        },
        "summary": "Alter a message status",
        "tags": [
          "messages"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"contact_id\\\":0,\\\"sent_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"user_block\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/messages\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"contact_id\\\":0,\\\"sent_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"user_block\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages\"\n\n\tpayload := strings.NewReader(\"{\\\"contact_id\\\":0,\\\"sent_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"user_block\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"contact_id\\\":0,\\\"sent_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"user_block\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://www.truckersearch.com/v1/messages\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"contact_id\\\":0,\\\"sent_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"user_block\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"contact_id\\\":0,\\\"sent_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"user_block\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"contact_id\": 0,\n  \"sent_date\": \"<ADD EXAMPLE VALUE>\",\n  \"status\": \"user_block\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://www.truckersearch.com/v1/messages\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ contact_id: 0,\n  sent_date: '<ADD EXAMPLE VALUE>',\n  status: 'user_block' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://www.truckersearch.com/v1/messages',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { contact_id: 0,\n     sent_date: '<ADD EXAMPLE VALUE>',\n     status: 'user_block' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://www.truckersearch.com/v1/messages\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"contact_id\": 0,\n  \"sent_date\": \"<ADD EXAMPLE VALUE>\",\n  \"status\": \"user_block\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"contact_id\": @0,\n                              @\"sent_date\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"status\": @\"user_block\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"contact_id\\\":0,\\\"sent_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"user_block\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://www.truckersearch.com/v1/messages\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"contact_id\":0,\"sent_date\":\"<ADD EXAMPLE VALUE>\",\"status\":\"user_block\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"contact_id\\\":0,\\\"sent_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"user_block\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"contact_id\":0,\"sent_date\":\"<ADD EXAMPLE VALUE>\",\"status\":\"user_block\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"contact_id\":0,\"sent_date\":\"<ADD EXAMPLE VALUE>\",\"status\":\"user_block\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"contact_id\\\":0,\\\"sent_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"user_block\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/messages\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages\"\n\npayload = \"{\\\"contact_id\\\":0,\\\"sent_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"user_block\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/messages\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"contact_id\\\":0,\\\"sent_date\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"status\\\":\\\"user_block\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://www.truckersearch.com/v1/messages \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"contact_id\":0,\"sent_date\":\"<ADD EXAMPLE VALUE>\",\"status\":\"user_block\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"contact_id\":0,\"sent_date\":\"<ADD EXAMPLE VALUE>\",\"status\":\"user_block\"}' |  \\\n  http PATCH https://www.truckersearch.com/v1/messages \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"contact_id\":0,\"sent_date\":\"<ADD EXAMPLE VALUE>\",\"status\":\"user_block\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/messages"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"contact_id\": 0,\n  \"sent_date\": \"<ADD EXAMPLE VALUE>\",\n  \"status\": \"user_block\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "This will send a message to any other user. Currently there are no blocks or set restrictions if an API user just started guessing. In order to get a contact_id a contact user would need to pull that info from a resume, or a job ad.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_6"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Status 202",
            "schema": {
              "$ref": "#/definitions/conversation_list"
            }
          }
        },
        "summary": "Send a message",
        "tags": [
          "messages"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"contact_id\\\":0,\\\"message\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/messages\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"contact_id\\\":0,\\\"message\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages\"\n\n\tpayload := strings.NewReader(\"{\\\"contact_id\\\":0,\\\"message\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"contact_id\\\":0,\\\"message\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://www.truckersearch.com/v1/messages\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"contact_id\\\":0,\\\"message\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"contact_id\\\":0,\\\"message\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"contact_id\": 0,\n  \"message\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.truckersearch.com/v1/messages\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ contact_id: 0, message: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://www.truckersearch.com/v1/messages',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { contact_id: 0, message: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://www.truckersearch.com/v1/messages\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"contact_id\": 0,\n  \"message\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"contact_id\": @0,\n                              @\"message\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"contact_id\\\":0,\\\"message\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://www.truckersearch.com/v1/messages\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"contact_id\":0,\"message\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"contact_id\\\":0,\\\"message\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"contact_id\":0,\"message\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"contact_id\":0,\"message\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"contact_id\\\":0,\\\"message\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/messages\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages\"\n\npayload = \"{\\\"contact_id\\\":0,\\\"message\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/messages\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"contact_id\\\":0,\\\"message\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://www.truckersearch.com/v1/messages \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"contact_id\":0,\"message\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"contact_id\":0,\"message\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://www.truckersearch.com/v1/messages \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"contact_id\":0,\"message\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/messages"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"contact_id\": 0,\n  \"message\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "MESSAGES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/messages\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/messages\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/messages',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/messages\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/messages\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/messages\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/messages\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/messages \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/messages \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/messages"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/messages/contacts": {
      "get": {
        "description": "This method provides the information nedeed to display all the contacts within a folder.",
        "parameters": [
          {
            "in": "query",
            "name": "folder_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/inline_response_200_4"
            }
          }
        },
        "summary": "Get a list of contacts for that folder.",
        "tags": [
          "messages_contacts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/messages/contacts',\n  qs: { folder_id: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/messages/contacts\");\n\nreq.query({\n  \"folder_id\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages/contacts');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'folder_id' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages/contacts');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'folder_id' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages/contacts\"\n\nquerystring = {\"folder_id\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages/contacts?folder_id=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "description": "By default all new contacts are able to send messages to the user. By blocking a contact, all future messages from the contact will be marked as user_block.\n  Also by design, users are unable to \"delete\" contacts, but this action will be  simulated using this endpoint. In order to hide the conversation move it to the Trash folder.\n",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_8"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "Move a contact from one folder to another or block the contact.",
        "tags": [
          "messages_contacts"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages/contacts\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"block_contact\\\":false,\\\"contact_id\\\":0,\\\"new_folder\\\":0,\\\"old_folder\\\":0}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/messages/contacts\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"block_contact\\\":false,\\\"contact_id\\\":0,\\\"new_folder\\\":0,\\\"old_folder\\\":0}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages/contacts\"\n\n\tpayload := strings.NewReader(\"{\\\"block_contact\\\":false,\\\"contact_id\\\":0,\\\"new_folder\\\":0,\\\"old_folder\\\":0}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"block_contact\\\":false,\\\"contact_id\\\":0,\\\"new_folder\\\":0,\\\"old_folder\\\":0}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages/contacts\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://www.truckersearch.com/v1/messages/contacts\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"block_contact\\\":false,\\\"contact_id\\\":0,\\\"new_folder\\\":0,\\\"old_folder\\\":0}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages/contacts\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"block_contact\\\":false,\\\"contact_id\\\":0,\\\"new_folder\\\":0,\\\"old_folder\\\":0}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"block_contact\": false,\n  \"contact_id\": 0,\n  \"new_folder\": 0,\n  \"old_folder\": 0\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://www.truckersearch.com/v1/messages/contacts\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages/contacts\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ block_contact: false,\n  contact_id: 0,\n  new_folder: 0,\n  old_folder: 0 }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://www.truckersearch.com/v1/messages/contacts',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { block_contact: false,\n     contact_id: 0,\n     new_folder: 0,\n     old_folder: 0 },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://www.truckersearch.com/v1/messages/contacts\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"block_contact\": false,\n  \"contact_id\": 0,\n  \"new_folder\": 0,\n  \"old_folder\": 0\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"block_contact\": @NO,\n                              @\"contact_id\": @0,\n                              @\"new_folder\": @0,\n                              @\"old_folder\": @0 };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages/contacts\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages/contacts\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"block_contact\\\":false,\\\"contact_id\\\":0,\\\"new_folder\\\":0,\\\"old_folder\\\":0}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://www.truckersearch.com/v1/messages/contacts\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"block_contact\":false,\"contact_id\":0,\"new_folder\":0,\"old_folder\":0}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages/contacts\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"block_contact\\\":false,\\\"contact_id\\\":0,\\\"new_folder\\\":0,\\\"old_folder\\\":0}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages/contacts');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"block_contact\":false,\"contact_id\":0,\"new_folder\":0,\"old_folder\":0}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"block_contact\":false,\"contact_id\":0,\"new_folder\":0,\"old_folder\":0}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages/contacts');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"block_contact\\\":false,\\\"contact_id\\\":0,\\\"new_folder\\\":0,\\\"old_folder\\\":0}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/messages/contacts\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages/contacts\"\n\npayload = \"{\\\"block_contact\\\":false,\\\"contact_id\\\":0,\\\"new_folder\\\":0,\\\"old_folder\\\":0}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/messages/contacts\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"block_contact\\\":false,\\\"contact_id\\\":0,\\\"new_folder\\\":0,\\\"old_folder\\\":0}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://www.truckersearch.com/v1/messages/contacts \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"block_contact\":false,\"contact_id\":0,\"new_folder\":0,\"old_folder\":0}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"block_contact\":false,\"contact_id\":0,\"new_folder\":0,\"old_folder\":0}' |  \\\n  http PATCH https://www.truckersearch.com/v1/messages/contacts \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"block_contact\":false,\"contact_id\":0,\"new_folder\":0,\"old_folder\":0}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/messages/contacts"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"block_contact\": false,\n  \"contact_id\": 0,\n  \"new_folder\": 0,\n  \"old_folder\": 0\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages/contacts\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "MESSAGES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages/contacts\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages/contacts\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages/contacts\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/messages/contacts\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages/contacts\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/messages/contacts\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages/contacts\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/messages/contacts',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/messages/contacts\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages/contacts\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages/contacts\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/messages/contacts\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages/contacts\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages/contacts');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages/contacts');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/messages/contacts\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages/contacts\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/messages/contacts\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/messages/contacts \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/messages/contacts \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/messages/contacts"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages/contacts\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/messages/count": {
      "get": {
        "description": "This is a coneniene method provided for pages like the driver/recruiter dasboard. The same information could be obtained by getting the folder list, and adding the new count. \n\nIt can also be used to update individual contacts new count. An example of this is the page automatically checking for new messages every once in a while, on a per user basis. ",
        "parameters": [
          {
            "description": "Just return a count of new messages from one contact.",
            "in": "query",
            "name": "contact_id",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          }
        },
        "summary": "Returns how many unread messages the user has.",
        "tags": [
          "messages"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages/count?contact_id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/messages/count',\n  qs: { contact_id: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/messages/count\");\n\nreq.query({\n  \"contact_id\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages/count');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'contact_id' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages/count');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'contact_id' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/messages/count?contact_id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages/count\"\n\nquerystring = {\"contact_id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages/count?contact_id=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "MESSAGES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages/count\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages/count\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages/count\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/messages/count\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages/count\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/messages/count\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages/count\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/messages/count',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/messages/count\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages/count\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages/count\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/messages/count\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages/count\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages/count');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages/count');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/messages/count\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages/count\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/messages/count\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/messages/count \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/messages/count \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/messages/count"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages/count\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/messages/folders": {
      "delete": {
        "description": "Active, Pending, Trash, and Deleted are special folders, and this command will ignore them.",
        "parameters": [
          {
            "description": "Deletes one folder at a time.",
            "in": "query",
            "name": "folder_id",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "Remove a custom folder.",
        "tags": [
          "messages_folders"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages/folders?folder_id=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://www.truckersearch.com/v1/messages/folders',\n  qs: { folder_id: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://www.truckersearch.com/v1/messages/folders\");\n\nreq.query({\n  \"folder_id\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages/folders');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'folder_id' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages/folders');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'folder_id' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/messages/folders?folder_id=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages/folders\"\n\nquerystring = {\"folder_id\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "description": "This returns a list of all folders for this user, along with how many unread messages each folder contains. I belive the website's behavior is 0 or 1 per contact, but it could be 1 per total messages. ",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Just get a few folders. This takes the place of a specific new count function.",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "folder_id",
            "required": false,
            "type": "array",
            "x-example": "?folder_id=2334&folder_id=3324"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/inline_response_200_5"
            }
          }
        },
        "summary": "Get a list of folders",
        "tags": [
          "messages_folders"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/messages/folders',\n  qs: { folder_id: 'SOME_ARRAY_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/messages/folders\");\n\nreq.query({\n  \"folder_id\": \"SOME_ARRAY_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages/folders');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'folder_id' => 'SOME_ARRAY_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages/folders');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'folder_id' => 'SOME_ARRAY_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages/folders\"\n\nquerystring = {\"folder_id\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages/folders?folder_id=SOME_ARRAY_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "This method allows a user to add custom folders. These folders must have unique names.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_9"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201",
            "schema": {
              "$ref": "#/definitions/inline_response_201_1"
            }
          }
        },
        "summary": "Add a folder",
        "tags": [
          "messages_folders"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages/folders\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/messages/folders\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages/folders\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages/folders\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://www.truckersearch.com/v1/messages/folders\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages/folders\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.truckersearch.com/v1/messages/folders\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages/folders\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ name: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://www.truckersearch.com/v1/messages/folders',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: { name: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://www.truckersearch.com/v1/messages/folders\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"name\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"name\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages/folders\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages/folders\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://www.truckersearch.com/v1/messages/folders\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"name\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages/folders\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages/folders');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"name\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"name\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages/folders');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/messages/folders\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages/folders\"\n\npayload = \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/messages/folders\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"name\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://www.truckersearch.com/v1/messages/folders \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"name\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"name\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://www.truckersearch.com/v1/messages/folders \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"name\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/messages/folders"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\"name\": \"<ADD EXAMPLE VALUE>\"]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages/folders\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "MESSAGES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/messages/folders\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/messages/folders\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/messages/folders\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/messages/folders\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/messages/folders\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/messages/folders\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/messages/folders\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/messages/folders',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/messages/folders\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/messages/folders\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/messages/folders\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/messages/folders\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/messages/folders\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/messages/folders');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/messages/folders');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/messages/folders\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/messages/folders\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/messages/folders\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/messages/folders \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/messages/folders \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/messages/folders"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/messages/folders\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/mobile_updates": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "email_address",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/inline_response_200_6"
            }
          }
        },
        "summary": "Get any available update information.",
        "tags": [
          "mobile update"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/mobile_updates?email_address=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/mobile_updates',\n  qs: { email_address: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/mobile_updates\");\n\nreq.query({\n  \"email_address\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/mobile_updates');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'email_address' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/mobile_updates');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'email_address' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/mobile_updates?email_address=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/mobile_updates\"\n\nquerystring = {\"email_address\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/mobile_updates?email_address=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "Mobile Update",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/mobile_updates\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/mobile_updates\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/mobile_updates\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/mobile_updates\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/mobile_updates\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/mobile_updates\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/mobile_updates\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/mobile_updates',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/mobile_updates\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/mobile_updates\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/mobile_updates\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/mobile_updates\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/mobile_updates\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/mobile_updates');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/mobile_updates');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/mobile_updates\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/mobile_updates\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/mobile_updates\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/mobile_updates \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/mobile_updates \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/mobile_updates"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/mobile_updates\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/optins": {
      "delete": {
        "description": "By only sending in their EUA token you would be requesting to opt them out of everything.",
        "parameters": [
          {
            "enum": [
              "email",
              "text",
              "push"
            ],
            "in": "query",
            "name": "notification_medium",
            "required": false,
            "type": "string"
          },
          {
            "default": "all",
            "description": "This would allow granular optouts. Currently ignored.",
            "enum": [
              "all",
              "alerts"
            ],
            "in": "query",
            "name": "notification_channel",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Opt someone out of one or more mediums and channels.",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://www.truckersearch.com/v1/optins',\n  qs: \n   { notification_medium: 'SOME_STRING_VALUE',\n     notification_channel: 'all' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://www.truckersearch.com/v1/optins\");\n\nreq.query({\n  \"notification_medium\": \"SOME_STRING_VALUE\",\n  \"notification_channel\": \"all\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"'https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/optins');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setQueryData(array(\n  'notification_medium' => 'SOME_STRING_VALUE',\n  'notification_channel' => 'all'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/optins');\n$request->setRequestMethod('DELETE');\n$request->setQuery(new http\\QueryString(array(\n  'notification_medium' => 'SOME_STRING_VALUE',\n  'notification_channel' => 'all'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/optins\"\n\nquerystring = {\"notification_medium\":\"SOME_STRING_VALUE\",\"notification_channel\":\"all\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url 'https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE 'https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE&notification_channel=all\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "To limit your list to just one medium.",
            "enum": [
              "email",
              "text",
              "push"
            ],
            "in": "query",
            "name": "notification_medium",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/inline_response_200_7"
            }
          }
        },
        "summary": "STAGE=UNKNOWN Get the optin status of a user.",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins?notification_medium=SOME_STRING_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/optins',\n  qs: { notification_medium: 'SOME_STRING_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/optins\");\n\nreq.query({\n  \"notification_medium\": \"SOME_STRING_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/optins');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'notification_medium' => 'SOME_STRING_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/optins');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'notification_medium' => 'SOME_STRING_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/optins?notification_medium=SOME_STRING_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/optins\"\n\nquerystring = {\"notification_medium\":\"SOME_STRING_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/optins?notification_medium=SOME_STRING_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_11"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "STAGE=UNK Confirm an optin.",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/optins\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/optins\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/optins\"\n\n\tpayload := strings.NewReader(\"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/optins\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://www.truckersearch.com/v1/optins\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/optins\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"notification_medium\": \"email\",\n  \"verification_code\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://www.truckersearch.com/v1/optins\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ notification_medium: 'email',\n  verification_code: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://www.truckersearch.com/v1/optins',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { notification_medium: 'email',\n     verification_code: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://www.truckersearch.com/v1/optins\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"notification_medium\": \"email\",\n  \"verification_code\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"notification_medium\": @\"email\",\n                              @\"verification_code\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/optins\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/optins\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://www.truckersearch.com/v1/optins\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/optins\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/optins');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/optins');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/optins\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/optins\"\n\npayload = \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/optins\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"notification_medium\\\":\\\"email\\\",\\\"verification_code\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://www.truckersearch.com/v1/optins \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://www.truckersearch.com/v1/optins \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"notification_medium\":\"email\",\"verification_code\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/optins"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"notification_medium\": \"email\",\n  \"verification_code\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/optins\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "Currently only Push notifications are implemented. With them a post creates and approves the optin. Later on when text/email is ported post will create the optin with the status of 'no response' meaning they haven't replied with the propper code, or clicked an authorization link.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/body_10"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201"
          }
        },
        "summary": "STAGE=UNKNOWN Submit a request to be opted in.",
        "tags": [
          "optins"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/optins\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/optins\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/optins\"\n\n\tpayload := strings.NewReader(\"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/optins\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://www.truckersearch.com/v1/optins\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/optins\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"notification_channel\": \"<ADD EXAMPLE VALUE>\",\n  \"notification_medium\": \"email\",\n  \"tokens\": {\n    \"$SERVICE_OR_KEY_NAME\": \"<ADD EXAMPLE VALUE>\"\n  }\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.truckersearch.com/v1/optins\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ notification_channel: '<ADD EXAMPLE VALUE>',\n  notification_medium: 'email',\n  tokens: { '$SERVICE_OR_KEY_NAME': '<ADD EXAMPLE VALUE>' } }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://www.truckersearch.com/v1/optins',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { notification_channel: '<ADD EXAMPLE VALUE>',\n     notification_medium: 'email',\n     tokens: { '$SERVICE_OR_KEY_NAME': '<ADD EXAMPLE VALUE>' } },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://www.truckersearch.com/v1/optins\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"notification_channel\": \"<ADD EXAMPLE VALUE>\",\n  \"notification_medium\": \"email\",\n  \"tokens\": {\n    \"$SERVICE_OR_KEY_NAME\": \"<ADD EXAMPLE VALUE>\"\n  }\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"notification_channel\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"notification_medium\": @\"email\",\n                              @\"tokens\": @{ @\"$SERVICE_OR_KEY_NAME\": @\"<ADD EXAMPLE VALUE>\" } };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/optins\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/optins\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://www.truckersearch.com/v1/optins\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/optins\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/optins');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/optins');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/optins\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/optins\"\n\npayload = \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/optins\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"notification_channel\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"notification_medium\\\":\\\"email\\\",\\\"tokens\\\":{\\\"$SERVICE_OR_KEY_NAME\\\":\\\"<ADD EXAMPLE VALUE>\\\"}}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://www.truckersearch.com/v1/optins \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}' |  \\\n  http POST https://www.truckersearch.com/v1/optins \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"notification_channel\":\"<ADD EXAMPLE VALUE>\",\"notification_medium\":\"email\",\"tokens\":{\"$SERVICE_OR_KEY_NAME\":\"<ADD EXAMPLE VALUE>\"}}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/optins"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"notification_channel\": \"<ADD EXAMPLE VALUE>\",\n  \"notification_medium\": \"email\",\n  \"tokens\": [\"$SERVICE_OR_KEY_NAME\": \"<ADD EXAMPLE VALUE>\"]\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/optins\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "Optins",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/optins\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/optins\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/optins\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/optins\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/optins\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/optins\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/optins\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/optins',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/optins\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/optins\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/optins\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/optins\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/optins\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/optins');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/optins');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/optins\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/optins\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/optins\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/optins \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/optins \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/optins"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/optins\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/profiles": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/profile_response"
            }
          }
        },
        "summary": "STAGE=UNK Get their profile",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/profiles\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/profiles\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/profiles\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/profiles\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://www.truckersearch.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/profiles');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/profiles');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/profiles\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/profiles\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://www.truckersearch.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://www.truckersearch.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profile_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/profile_patch_response"
            }
          }
        },
        "summary": "STAGE=UNK Update a profile.",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/profiles\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/profiles\"\n\n\tpayload := strings.NewReader(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/profiles\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://www.truckersearch.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/profiles\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_number\": 0,\n  \"fax_number\": 0,\n  \"first_name\": \"<ADD EXAMPLE VALUE>\",\n  \"last_name\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://www.truckersearch.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ address: '<ADD EXAMPLE VALUE>',\n  city: '<ADD EXAMPLE VALUE>',\n  company: '<ADD EXAMPLE VALUE>',\n  contact_extension: 0,\n  contact_number: 0,\n  fax_number: 0,\n  first_name: '<ADD EXAMPLE VALUE>',\n  last_name: '<ADD EXAMPLE VALUE>',\n  mobile_carrier: 'Other/Unknown',\n  mobile_number: 0,\n  state: '<ADD EXAMPLE VALUE>',\n  web_page: '<ADD EXAMPLE VALUE>',\n  zip: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://www.truckersearch.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { address: '<ADD EXAMPLE VALUE>',\n     city: '<ADD EXAMPLE VALUE>',\n     company: '<ADD EXAMPLE VALUE>',\n     contact_extension: 0,\n     contact_number: 0,\n     fax_number: 0,\n     first_name: '<ADD EXAMPLE VALUE>',\n     last_name: '<ADD EXAMPLE VALUE>',\n     mobile_carrier: 'Other/Unknown',\n     mobile_number: 0,\n     state: '<ADD EXAMPLE VALUE>',\n     web_page: '<ADD EXAMPLE VALUE>',\n     zip: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://www.truckersearch.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_number\": 0,\n  \"fax_number\": 0,\n  \"first_name\": \"<ADD EXAMPLE VALUE>\",\n  \"last_name\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"address\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"city\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"company\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"contact_extension\": @0,\n                              @\"contact_number\": @0,\n                              @\"fax_number\": @0,\n                              @\"first_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"last_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"mobile_carrier\": @\"Other/Unknown\",\n                              @\"mobile_number\": @0,\n                              @\"state\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"web_page\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"zip\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://www.truckersearch.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_number\":0,\"fax_number\":0,\"first_name\":\"<ADD EXAMPLE VALUE>\",\"last_name\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/profiles');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_number\":0,\"fax_number\":0,\"first_name\":\"<ADD EXAMPLE VALUE>\",\"last_name\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_number\":0,\"fax_number\":0,\"first_name\":\"<ADD EXAMPLE VALUE>\",\"last_name\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/profiles');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/profiles\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/profiles\"\n\npayload = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://www.truckersearch.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_number\":0,\"fax_number\":0,\"first_name\":\"<ADD EXAMPLE VALUE>\",\"last_name\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_number\":0,\"fax_number\":0,\"first_name\":\"<ADD EXAMPLE VALUE>\",\"last_name\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http PATCH https://www.truckersearch.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_number\":0,\"fax_number\":0,\"first_name\":\"<ADD EXAMPLE VALUE>\",\"last_name\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_number\": 0,\n  \"fax_number\": 0,\n  \"first_name\": \"<ADD EXAMPLE VALUE>\",\n  \"last_name\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/profile_request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Status 201",
            "headers": {
              "url": {
                "type": "string"
              }
            }
          }
        },
        "summary": "STAGE=UNK Create a profile",
        "tags": [
          "profiles"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/profiles\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/profiles\"\n\n\tpayload := strings.NewReader(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/profiles\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://www.truckersearch.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/profiles\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_number\": 0,\n  \"fax_number\": 0,\n  \"first_name\": \"<ADD EXAMPLE VALUE>\",\n  \"last_name\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.truckersearch.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ address: '<ADD EXAMPLE VALUE>',\n  city: '<ADD EXAMPLE VALUE>',\n  company: '<ADD EXAMPLE VALUE>',\n  contact_extension: 0,\n  contact_number: 0,\n  fax_number: 0,\n  first_name: '<ADD EXAMPLE VALUE>',\n  last_name: '<ADD EXAMPLE VALUE>',\n  mobile_carrier: 'Other/Unknown',\n  mobile_number: 0,\n  state: '<ADD EXAMPLE VALUE>',\n  web_page: '<ADD EXAMPLE VALUE>',\n  zip: '<ADD EXAMPLE VALUE>' }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://www.truckersearch.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { address: '<ADD EXAMPLE VALUE>',\n     city: '<ADD EXAMPLE VALUE>',\n     company: '<ADD EXAMPLE VALUE>',\n     contact_extension: 0,\n     contact_number: 0,\n     fax_number: 0,\n     first_name: '<ADD EXAMPLE VALUE>',\n     last_name: '<ADD EXAMPLE VALUE>',\n     mobile_carrier: 'Other/Unknown',\n     mobile_number: 0,\n     state: '<ADD EXAMPLE VALUE>',\n     web_page: '<ADD EXAMPLE VALUE>',\n     zip: '<ADD EXAMPLE VALUE>' },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://www.truckersearch.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_number\": 0,\n  \"fax_number\": 0,\n  \"first_name\": \"<ADD EXAMPLE VALUE>\",\n  \"last_name\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"address\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"city\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"company\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"contact_extension\": @0,\n                              @\"contact_number\": @0,\n                              @\"fax_number\": @0,\n                              @\"first_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"last_name\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"mobile_carrier\": @\"Other/Unknown\",\n                              @\"mobile_number\": @0,\n                              @\"state\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"web_page\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"zip\": @\"<ADD EXAMPLE VALUE>\" };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://www.truckersearch.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_number\":0,\"fax_number\":0,\"first_name\":\"<ADD EXAMPLE VALUE>\",\"last_name\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/profiles');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_number\":0,\"fax_number\":0,\"first_name\":\"<ADD EXAMPLE VALUE>\",\"last_name\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_number\":0,\"fax_number\":0,\"first_name\":\"<ADD EXAMPLE VALUE>\",\"last_name\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/profiles');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/profiles\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/profiles\"\n\npayload = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"address\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"city\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"company\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"contact_extension\\\":0,\\\"contact_number\\\":0,\\\"fax_number\\\":0,\\\"first_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"last_name\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"mobile_carrier\\\":\\\"Other/Unknown\\\",\\\"mobile_number\\\":0,\\\"state\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"web_page\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"zip\\\":\\\"<ADD EXAMPLE VALUE>\\\"}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://www.truckersearch.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_number\":0,\"fax_number\":0,\"first_name\":\"<ADD EXAMPLE VALUE>\",\"last_name\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_number\":0,\"fax_number\":0,\"first_name\":\"<ADD EXAMPLE VALUE>\",\"last_name\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}' |  \\\n  http POST https://www.truckersearch.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"address\":\"<ADD EXAMPLE VALUE>\",\"city\":\"<ADD EXAMPLE VALUE>\",\"company\":\"<ADD EXAMPLE VALUE>\",\"contact_extension\":0,\"contact_number\":0,\"fax_number\":0,\"first_name\":\"<ADD EXAMPLE VALUE>\",\"last_name\":\"<ADD EXAMPLE VALUE>\",\"mobile_carrier\":\"Other/Unknown\",\"mobile_number\":0,\"state\":\"<ADD EXAMPLE VALUE>\",\"web_page\":\"<ADD EXAMPLE VALUE>\",\"zip\":\"<ADD EXAMPLE VALUE>\"}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"address\": \"<ADD EXAMPLE VALUE>\",\n  \"city\": \"<ADD EXAMPLE VALUE>\",\n  \"company\": \"<ADD EXAMPLE VALUE>\",\n  \"contact_extension\": 0,\n  \"contact_number\": 0,\n  \"fax_number\": 0,\n  \"first_name\": \"<ADD EXAMPLE VALUE>\",\n  \"last_name\": \"<ADD EXAMPLE VALUE>\",\n  \"mobile_carrier\": \"Other/Unknown\",\n  \"mobile_number\": 0,\n  \"state\": \"<ADD EXAMPLE VALUE>\",\n  \"web_page\": \"<ADD EXAMPLE VALUE>\",\n  \"zip\": \"<ADD EXAMPLE VALUE>\"\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "PROFILES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/profiles\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/profiles\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/profiles\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/profiles\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/profiles\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/profiles\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/profiles\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/profiles',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/profiles\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/profiles\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/profiles\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/profiles\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/profiles\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/profiles');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/profiles');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/profiles\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/profiles\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/profiles\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/profiles \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/profiles \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/profiles"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/profiles\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/resumes": {
      "delete": {
        "description": "No extra information is needed because we only allow one resume per account.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Status 204"
          }
        },
        "summary": "Delete the user's resume",
        "tags": [
          "resumes"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"DELETE\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/resumes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/resumes\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/resumes\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/resumes\")\n  .delete(null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.delete(\"https://www.truckersearch.com/v1/resumes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/resumes\",\n  \"method\": \"DELETE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://www.truckersearch.com/v1/resumes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"DELETE\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/resumes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'DELETE',\n  url: 'https://www.truckersearch.com/v1/resumes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"DELETE\", \"https://www.truckersearch.com/v1/resumes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/resumes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"DELETE\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/resumes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `DELETE uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"DELETE\",\n\"https://www.truckersearch.com/v1/resumes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/resumes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/resumes');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/resumes');\n$request->setRequestMethod('DELETE');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"DELETE\", \"/v1/resumes\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/resumes\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/resumes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request DELETE \\\n  --url https://www.truckersearch.com/v1/resumes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http DELETE https://www.truckersearch.com/v1/resumes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method DELETE \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/resumes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/resumes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"DELETE\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/resume_data_optional"
            }
          }
        },
        "summary": "Get the user's resume.",
        "tags": [
          "resumes"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/resumes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/resumes\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/resumes\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/resumes\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/resumes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/resumes\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/resumes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/resumes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/resumes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/resumes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/resumes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/resumes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://www.truckersearch.com/v1/resumes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/resumes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/resumes');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/resumes');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/resumes\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/resumes\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/resumes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://www.truckersearch.com/v1/resumes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://www.truckersearch.com/v1/resumes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/resumes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/resumes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "patch": {
        "consumes": [],
        "description": "Each user only has 1 resume. Setting any field to null will set it to a null or for a number 0.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resume_data_optional"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200"
          }
        },
        "summary": "Update the user's resume.",
        "tags": [
          "resumes"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"PATCH\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/resumes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/resumes\");\nvar request = new RestRequest(Method.PATCH);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/resumes\"\n\n\tpayload := strings.NewReader(\"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/resumes\")\n  .patch(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.patch(\"https://www.truckersearch.com/v1/resumes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/resumes\",\n  \"method\": \"PATCH\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"comments\": \"<ADD EXAMPLE VALUE>\",\n  \"driving_record\": {\n    \"accidents\": 0,\n    \"age\": \"18-20\",\n    \"gender\": \"male\",\n    \"license_type\": \"A\",\n    \"tickets\": 0\n  },\n  \"experience\": {\n    \"current_employer\": \"<ADD EXAMPLE VALUE>\",\n    \"current_years_experience\": 0,\n    \"felony_reason\": \"<ADD EXAMPLE VALUE>\",\n    \"has_felony\": false,\n    \"previous_employer\": \"<ADD EXAMPLE VALUE>\",\n    \"previous_years_experience\": 0,\n    \"total_years_experience\": 0\n  },\n  \"job_preference\": {\n    \"distance_preference\": \"OTR\",\n    \"position\": \"other\",\n    \"region_preference\": \"east coast\",\n    \"team_preference\": \"single\"\n  }\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://www.truckersearch.com/v1/resumes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"PATCH\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/resumes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ comments: '<ADD EXAMPLE VALUE>',\n  driving_record: \n   { accidents: 0,\n     age: '18-20',\n     gender: 'male',\n     license_type: 'A',\n     tickets: 0 },\n  experience: \n   { current_employer: '<ADD EXAMPLE VALUE>',\n     current_years_experience: 0,\n     felony_reason: '<ADD EXAMPLE VALUE>',\n     has_felony: false,\n     previous_employer: '<ADD EXAMPLE VALUE>',\n     previous_years_experience: 0,\n     total_years_experience: 0 },\n  job_preference: \n   { distance_preference: 'OTR',\n     position: 'other',\n     region_preference: 'east coast',\n     team_preference: 'single' } }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'PATCH',\n  url: 'https://www.truckersearch.com/v1/resumes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { comments: '<ADD EXAMPLE VALUE>',\n     driving_record: \n      { accidents: 0,\n        age: '18-20',\n        gender: 'male',\n        license_type: 'A',\n        tickets: 0 },\n     experience: \n      { current_employer: '<ADD EXAMPLE VALUE>',\n        current_years_experience: 0,\n        felony_reason: '<ADD EXAMPLE VALUE>',\n        has_felony: false,\n        previous_employer: '<ADD EXAMPLE VALUE>',\n        previous_years_experience: 0,\n        total_years_experience: 0 },\n     job_preference: \n      { distance_preference: 'OTR',\n        position: 'other',\n        region_preference: 'east coast',\n        team_preference: 'single' } },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"PATCH\", \"https://www.truckersearch.com/v1/resumes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"comments\": \"<ADD EXAMPLE VALUE>\",\n  \"driving_record\": {\n    \"accidents\": 0,\n    \"age\": \"18-20\",\n    \"gender\": \"male\",\n    \"license_type\": \"A\",\n    \"tickets\": 0\n  },\n  \"experience\": {\n    \"current_employer\": \"<ADD EXAMPLE VALUE>\",\n    \"current_years_experience\": 0,\n    \"felony_reason\": \"<ADD EXAMPLE VALUE>\",\n    \"has_felony\": false,\n    \"previous_employer\": \"<ADD EXAMPLE VALUE>\",\n    \"previous_years_experience\": 0,\n    \"total_years_experience\": 0\n  },\n  \"job_preference\": {\n    \"distance_preference\": \"OTR\",\n    \"position\": \"other\",\n    \"region_preference\": \"east coast\",\n    \"team_preference\": \"single\"\n  }\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"comments\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"driving_record\": @{ @\"accidents\": @0, @\"age\": @\"18-20\", @\"gender\": @\"male\", @\"license_type\": @\"A\", @\"tickets\": @0 },\n                              @\"experience\": @{ @\"current_employer\": @\"<ADD EXAMPLE VALUE>\", @\"current_years_experience\": @0, @\"felony_reason\": @\"<ADD EXAMPLE VALUE>\", @\"has_felony\": @NO, @\"previous_employer\": @\"<ADD EXAMPLE VALUE>\", @\"previous_years_experience\": @0, @\"total_years_experience\": @0 },\n                              @\"job_preference\": @{ @\"distance_preference\": @\"OTR\", @\"position\": @\"other\", @\"region_preference\": @\"east coast\", @\"team_preference\": @\"single\" } };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/resumes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"PATCH\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/resumes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\" in\n\nClient.call ~headers ~body `PATCH uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"PATCH\",\n\"https://www.truckersearch.com/v1/resumes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"comments\":\"<ADD EXAMPLE VALUE>\",\"driving_record\":{\"accidents\":0,\"age\":\"18-20\",\"gender\":\"male\",\"license_type\":\"A\",\"tickets\":0},\"experience\":{\"current_employer\":\"<ADD EXAMPLE VALUE>\",\"current_years_experience\":0,\"felony_reason\":\"<ADD EXAMPLE VALUE>\",\"has_felony\":false,\"previous_employer\":\"<ADD EXAMPLE VALUE>\",\"previous_years_experience\":0,\"total_years_experience\":0},\"job_preference\":{\"distance_preference\":\"OTR\",\"position\":\"other\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/resumes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"PATCH\",\n  CURLOPT_POSTFIELDS => \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('PATCH');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/resumes');\n$request->setMethod(HttpRequest::HTTP_METH_PATCH);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"comments\":\"<ADD EXAMPLE VALUE>\",\"driving_record\":{\"accidents\":0,\"age\":\"18-20\",\"gender\":\"male\",\"license_type\":\"A\",\"tickets\":0},\"experience\":{\"current_employer\":\"<ADD EXAMPLE VALUE>\",\"current_years_experience\":0,\"felony_reason\":\"<ADD EXAMPLE VALUE>\",\"has_felony\":false,\"previous_employer\":\"<ADD EXAMPLE VALUE>\",\"previous_years_experience\":0,\"total_years_experience\":0},\"job_preference\":{\"distance_preference\":\"OTR\",\"position\":\"other\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"comments\":\"<ADD EXAMPLE VALUE>\",\"driving_record\":{\"accidents\":0,\"age\":\"18-20\",\"gender\":\"male\",\"license_type\":\"A\",\"tickets\":0},\"experience\":{\"current_employer\":\"<ADD EXAMPLE VALUE>\",\"current_years_experience\":0,\"felony_reason\":\"<ADD EXAMPLE VALUE>\",\"has_felony\":false,\"previous_employer\":\"<ADD EXAMPLE VALUE>\",\"previous_years_experience\":0,\"total_years_experience\":0},\"job_preference\":{\"distance_preference\":\"OTR\",\"position\":\"other\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/resumes');\n$request->setRequestMethod('PATCH');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"PATCH\", \"/v1/resumes\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/resumes\"\n\npayload = \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"PATCH\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/resumes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Patch.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request PATCH \\\n  --url https://www.truckersearch.com/v1/resumes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"comments\":\"<ADD EXAMPLE VALUE>\",\"driving_record\":{\"accidents\":0,\"age\":\"18-20\",\"gender\":\"male\",\"license_type\":\"A\",\"tickets\":0},\"experience\":{\"current_employer\":\"<ADD EXAMPLE VALUE>\",\"current_years_experience\":0,\"felony_reason\":\"<ADD EXAMPLE VALUE>\",\"has_felony\":false,\"previous_employer\":\"<ADD EXAMPLE VALUE>\",\"previous_years_experience\":0,\"total_years_experience\":0},\"job_preference\":{\"distance_preference\":\"OTR\",\"position\":\"other\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"comments\":\"<ADD EXAMPLE VALUE>\",\"driving_record\":{\"accidents\":0,\"age\":\"18-20\",\"gender\":\"male\",\"license_type\":\"A\",\"tickets\":0},\"experience\":{\"current_employer\":\"<ADD EXAMPLE VALUE>\",\"current_years_experience\":0,\"felony_reason\":\"<ADD EXAMPLE VALUE>\",\"has_felony\":false,\"previous_employer\":\"<ADD EXAMPLE VALUE>\",\"previous_years_experience\":0,\"total_years_experience\":0},\"job_preference\":{\"distance_preference\":\"OTR\",\"position\":\"other\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}' |  \\\n  http PATCH https://www.truckersearch.com/v1/resumes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method PATCH \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"comments\":\"<ADD EXAMPLE VALUE>\",\"driving_record\":{\"accidents\":0,\"age\":\"18-20\",\"gender\":\"male\",\"license_type\":\"A\",\"tickets\":0},\"experience\":{\"current_employer\":\"<ADD EXAMPLE VALUE>\",\"current_years_experience\":0,\"felony_reason\":\"<ADD EXAMPLE VALUE>\",\"has_felony\":false,\"previous_employer\":\"<ADD EXAMPLE VALUE>\",\"previous_years_experience\":0,\"total_years_experience\":0},\"job_preference\":{\"distance_preference\":\"OTR\",\"position\":\"other\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/resumes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"comments\": \"<ADD EXAMPLE VALUE>\",\n  \"driving_record\": [\n    \"accidents\": 0,\n    \"age\": \"18-20\",\n    \"gender\": \"male\",\n    \"license_type\": \"A\",\n    \"tickets\": 0\n  ],\n  \"experience\": [\n    \"current_employer\": \"<ADD EXAMPLE VALUE>\",\n    \"current_years_experience\": 0,\n    \"felony_reason\": \"<ADD EXAMPLE VALUE>\",\n    \"has_felony\": false,\n    \"previous_employer\": \"<ADD EXAMPLE VALUE>\",\n    \"previous_years_experience\": 0,\n    \"total_years_experience\": 0\n  ],\n  \"job_preference\": [\n    \"distance_preference\": \"OTR\",\n    \"position\": \"other\",\n    \"region_preference\": \"east coast\",\n    \"team_preference\": \"single\"\n  ]\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/resumes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"PATCH\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "post": {
        "consumes": [],
        "description": "You must send in at least one valid request parameter in the body. It doesn't matter which one, but at least one.",
        "parameters": [
          {
            "in": "header",
            "name": "end-user-token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resume_data_optional"
            },
            "x-examples": {
              "application/json": "{\n  \"experience\": {\n    \"current_employer\": \"Jim Swift's Logistics\"\n  }\n}"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Object created",
            "headers": {
              "Location": {
                "description": "Link to the newly created resume.",
                "type": "string"
              }
            }
          }
        },
        "summary": "Submit the user's resume.",
        "tags": [
          "resumes"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"POST\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/resumes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\ncurl_easy_setopt(hnd, CURLOPT_POSTFIELDS, \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\");\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/resumes\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nrequest.AddParameter(\"undefined\", \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/resumes\"\n\n\tpayload := strings.NewReader(\"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\");\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/resumes\")\n  .post(body)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.post(\"https://www.truckersearch.com/v1/resumes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .body(\"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/resumes\",\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  },\n  \"processData\": false,\n  \"data\": \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = JSON.stringify({\n  \"comments\": \"<ADD EXAMPLE VALUE>\",\n  \"driving_record\": {\n    \"accidents\": 0,\n    \"age\": \"18-20\",\n    \"gender\": \"male\",\n    \"license_type\": \"A\",\n    \"tickets\": 0\n  },\n  \"experience\": {\n    \"current_employer\": \"<ADD EXAMPLE VALUE>\",\n    \"current_years_experience\": 0,\n    \"felony_reason\": \"<ADD EXAMPLE VALUE>\",\n    \"has_felony\": false,\n    \"previous_employer\": \"<ADD EXAMPLE VALUE>\",\n    \"previous_years_experience\": 0,\n    \"total_years_experience\": 0\n  },\n  \"job_preference\": {\n    \"distance_preference\": \"OTR\",\n    \"position\": \"other\",\n    \"region_preference\": \"east coast\",\n    \"team_preference\": \"single\"\n  }\n});\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://www.truckersearch.com/v1/resumes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"POST\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/resumes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.write(JSON.stringify({ comments: '<ADD EXAMPLE VALUE>',\n  driving_record: \n   { accidents: 0,\n     age: '18-20',\n     gender: 'male',\n     license_type: 'A',\n     tickets: 0 },\n  experience: \n   { current_employer: '<ADD EXAMPLE VALUE>',\n     current_years_experience: 0,\n     felony_reason: '<ADD EXAMPLE VALUE>',\n     has_felony: false,\n     previous_employer: '<ADD EXAMPLE VALUE>',\n     previous_years_experience: 0,\n     total_years_experience: 0 },\n  job_preference: \n   { distance_preference: 'OTR',\n     position: 'other',\n     region_preference: 'east coast',\n     team_preference: 'single' } }));\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'POST',\n  url: 'https://www.truckersearch.com/v1/resumes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' },\n  body: \n   { comments: '<ADD EXAMPLE VALUE>',\n     driving_record: \n      { accidents: 0,\n        age: '18-20',\n        gender: 'male',\n        license_type: 'A',\n        tickets: 0 },\n     experience: \n      { current_employer: '<ADD EXAMPLE VALUE>',\n        current_years_experience: 0,\n        felony_reason: '<ADD EXAMPLE VALUE>',\n        has_felony: false,\n        previous_employer: '<ADD EXAMPLE VALUE>',\n        previous_years_experience: 0,\n        total_years_experience: 0 },\n     job_preference: \n      { distance_preference: 'OTR',\n        position: 'other',\n        region_preference: 'east coast',\n        team_preference: 'single' } },\n  json: true };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"POST\", \"https://www.truckersearch.com/v1/resumes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\nreq.type(\"json\");\nreq.send({\n  \"comments\": \"<ADD EXAMPLE VALUE>\",\n  \"driving_record\": {\n    \"accidents\": 0,\n    \"age\": \"18-20\",\n    \"gender\": \"male\",\n    \"license_type\": \"A\",\n    \"tickets\": 0\n  },\n  \"experience\": {\n    \"current_employer\": \"<ADD EXAMPLE VALUE>\",\n    \"current_years_experience\": 0,\n    \"felony_reason\": \"<ADD EXAMPLE VALUE>\",\n    \"has_felony\": false,\n    \"previous_employer\": \"<ADD EXAMPLE VALUE>\",\n    \"previous_years_experience\": 0,\n    \"total_years_experience\": 0\n  },\n  \"job_preference\": {\n    \"distance_preference\": \"OTR\",\n    \"position\": \"other\",\n    \"region_preference\": \"east coast\",\n    \"team_preference\": \"single\"\n  }\n});\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\nNSDictionary *parameters = @{ @\"comments\": @\"<ADD EXAMPLE VALUE>\",\n                              @\"driving_record\": @{ @\"accidents\": @0, @\"age\": @\"18-20\", @\"gender\": @\"male\", @\"license_type\": @\"A\", @\"tickets\": @0 },\n                              @\"experience\": @{ @\"current_employer\": @\"<ADD EXAMPLE VALUE>\", @\"current_years_experience\": @0, @\"felony_reason\": @\"<ADD EXAMPLE VALUE>\", @\"has_felony\": @NO, @\"previous_employer\": @\"<ADD EXAMPLE VALUE>\", @\"previous_years_experience\": @0, @\"total_years_experience\": @0 },\n                              @\"job_preference\": @{ @\"distance_preference\": @\"OTR\", @\"position\": @\"other\", @\"region_preference\": @\"east coast\", @\"team_preference\": @\"single\" } };\n\nNSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/resumes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"POST\"];\n[request setAllHTTPHeaderFields:headers];\n[request setHTTPBody:postData];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/resumes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\nlet body = Cohttp_lwt_body.of_string \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\" in\n\nClient.call ~headers ~body `POST uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"POST\",\n\"https://www.truckersearch.com/v1/resumes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\n$request->content('{\"comments\":\"<ADD EXAMPLE VALUE>\",\"driving_record\":{\"accidents\":0,\"age\":\"18-20\",\"gender\":\"male\",\"license_type\":\"A\",\"tickets\":0},\"experience\":{\"current_employer\":\"<ADD EXAMPLE VALUE>\",\"current_years_experience\":0,\"felony_reason\":\"<ADD EXAMPLE VALUE>\",\"has_felony\":false,\"previous_employer\":\"<ADD EXAMPLE VALUE>\",\"previous_years_experience\":0,\"total_years_experience\":0},\"job_preference\":{\"distance_preference\":\"OTR\",\"position\":\"other\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}');\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/resumes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"POST\",\n  CURLOPT_POSTFIELDS => \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/resumes');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$request->setBody('{\"comments\":\"<ADD EXAMPLE VALUE>\",\"driving_record\":{\"accidents\":0,\"age\":\"18-20\",\"gender\":\"male\",\"license_type\":\"A\",\"tickets\":0},\"experience\":{\"current_employer\":\"<ADD EXAMPLE VALUE>\",\"current_years_experience\":0,\"felony_reason\":\"<ADD EXAMPLE VALUE>\",\"has_felony\":false,\"previous_employer\":\"<ADD EXAMPLE VALUE>\",\"previous_years_experience\":0,\"total_years_experience\":0},\"job_preference\":{\"distance_preference\":\"OTR\",\"position\":\"other\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append('{\"comments\":\"<ADD EXAMPLE VALUE>\",\"driving_record\":{\"accidents\":0,\"age\":\"18-20\",\"gender\":\"male\",\"license_type\":\"A\",\"tickets\":0},\"experience\":{\"current_employer\":\"<ADD EXAMPLE VALUE>\",\"current_years_experience\":0,\"felony_reason\":\"<ADD EXAMPLE VALUE>\",\"has_felony\":false,\"previous_employer\":\"<ADD EXAMPLE VALUE>\",\"previous_years_experience\":0,\"total_years_experience\":0},\"job_preference\":{\"distance_preference\":\"OTR\",\"position\":\"other\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}');\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/resumes');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\npayload = \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"POST\", \"/v1/resumes\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/resumes\"\n\npayload = \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"POST\", url, data=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/resumes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\nrequest.body = \"{\\\"comments\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"driving_record\\\":{\\\"accidents\\\":0,\\\"age\\\":\\\"18-20\\\",\\\"gender\\\":\\\"male\\\",\\\"license_type\\\":\\\"A\\\",\\\"tickets\\\":0},\\\"experience\\\":{\\\"current_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"current_years_experience\\\":0,\\\"felony_reason\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"has_felony\\\":false,\\\"previous_employer\\\":\\\"<ADD EXAMPLE VALUE>\\\",\\\"previous_years_experience\\\":0,\\\"total_years_experience\\\":0},\\\"job_preference\\\":{\\\"distance_preference\\\":\\\"OTR\\\",\\\"position\\\":\\\"other\\\",\\\"region_preference\\\":\\\"east coast\\\",\\\"team_preference\\\":\\\"single\\\"}}\"\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request POST \\\n  --url https://www.truckersearch.com/v1/resumes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --data '{\"comments\":\"<ADD EXAMPLE VALUE>\",\"driving_record\":{\"accidents\":0,\"age\":\"18-20\",\"gender\":\"male\",\"license_type\":\"A\",\"tickets\":0},\"experience\":{\"current_employer\":\"<ADD EXAMPLE VALUE>\",\"current_years_experience\":0,\"felony_reason\":\"<ADD EXAMPLE VALUE>\",\"has_felony\":false,\"previous_employer\":\"<ADD EXAMPLE VALUE>\",\"previous_years_experience\":0,\"total_years_experience\":0},\"job_preference\":{\"distance_preference\":\"OTR\",\"position\":\"other\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}'"
          },
          {
            "lang": "Shell_httpie",
            "source": "echo '{\"comments\":\"<ADD EXAMPLE VALUE>\",\"driving_record\":{\"accidents\":0,\"age\":\"18-20\",\"gender\":\"male\",\"license_type\":\"A\",\"tickets\":0},\"experience\":{\"current_employer\":\"<ADD EXAMPLE VALUE>\",\"current_years_experience\":0,\"felony_reason\":\"<ADD EXAMPLE VALUE>\",\"has_felony\":false,\"previous_employer\":\"<ADD EXAMPLE VALUE>\",\"previous_years_experience\":0,\"total_years_experience\":0},\"job_preference\":{\"distance_preference\":\"OTR\",\"position\":\"other\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}' |  \\\n  http POST https://www.truckersearch.com/v1/resumes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method POST \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --body-data '{\"comments\":\"<ADD EXAMPLE VALUE>\",\"driving_record\":{\"accidents\":0,\"age\":\"18-20\",\"gender\":\"male\",\"license_type\":\"A\",\"tickets\":0},\"experience\":{\"current_employer\":\"<ADD EXAMPLE VALUE>\",\"current_years_experience\":0,\"felony_reason\":\"<ADD EXAMPLE VALUE>\",\"has_felony\":false,\"previous_employer\":\"<ADD EXAMPLE VALUE>\",\"previous_years_experience\":0,\"total_years_experience\":0},\"job_preference\":{\"distance_preference\":\"OTR\",\"position\":\"other\",\"region_preference\":\"east coast\",\"team_preference\":\"single\"}}' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/resumes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\nlet parameters = [\n  \"comments\": \"<ADD EXAMPLE VALUE>\",\n  \"driving_record\": [\n    \"accidents\": 0,\n    \"age\": \"18-20\",\n    \"gender\": \"male\",\n    \"license_type\": \"A\",\n    \"tickets\": 0\n  ],\n  \"experience\": [\n    \"current_employer\": \"<ADD EXAMPLE VALUE>\",\n    \"current_years_experience\": 0,\n    \"felony_reason\": \"<ADD EXAMPLE VALUE>\",\n    \"has_felony\": false,\n    \"previous_employer\": \"<ADD EXAMPLE VALUE>\",\n    \"previous_years_experience\": 0,\n    \"total_years_experience\": 0\n  ],\n  \"job_preference\": [\n    \"distance_preference\": \"OTR\",\n    \"position\": \"other\",\n    \"region_preference\": \"east coast\",\n    \"team_preference\": \"single\"\n  ]\n]\n\nlet postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/resumes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.HTTPBody = postData\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "RESUMES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/resumes\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/resumes\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/resumes\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/resumes\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/resumes\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/resumes\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/resumes\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/resumes',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/resumes\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/resumes\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/resumes\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/resumes\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/resumes\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/resumes');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/resumes');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/resumes\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/resumes\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/resumes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/resumes \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/resumes \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/resumes"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/resumes\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/resumes/boards": {
      "get": {
        "description": "Behind the scenes a resume goes through an appoval process before it will show up on a board. This could be a few seconds, or a few days. The resume poster can always se their resume, but until it is approved the resume won't be displayed on the board.",
        "parameters": [
          {
            "description": "If included all other options will be ignored, and a list of 1 resume will be returned. Also the full contact information will be returned with this single resume.",
            "in": "query",
            "name": "resume_id",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "A list of state codes.",
            "in": "query",
            "items": {
              "maxLength": 2,
              "minLength": 2,
              "type": "string"
            },
            "name": "state",
            "required": false,
            "type": "array",
            "x-example": "?state=\"MO,AR,IL,KY\""
          },
          {
            "description": "If this option is included we will use the first state in the array.",
            "in": "query",
            "maxLength": 20,
            "name": "city",
            "required": false,
            "type": "string"
          },
          {
            "default": 30,
            "description": "Will be set if city is.",
            "in": "query",
            "maximum": 300,
            "minimum": 1,
            "name": "radius",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "other",
              "student",
              "company driver",
              "owner operator"
            ],
            "in": "query",
            "name": "position",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "You can have up to an additional 4 custom trailers of a length of 6 or less each.",
            "in": "query",
            "items": {
              "enum": [
                "V",
                "R",
                "F",
                "AC",
                "HOP",
                "TANK",
                "S"
              ],
              "type": "string"
            },
            "maxItems": 6,
            "minItems": 1,
            "name": "trailer_experience",
            "required": false,
            "type": "array"
          },
          {
            "description": "This is a list of possible regions. This matches the regions from searching and posting a job ad on our website. I am adding it to the API with the assumption that we can expand our resume regions to match. This should aviod some confusion and weirdness. An example would be alert options. ",
            "enum": [
              "east coast",
              "west coast",
              "midwest",
              "nationwide",
              "north east",
              "north west",
              "south east",
              "south west",
              "local"
            ],
            "in": "query",
            "name": "region_preference",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "team",
              "single"
            ],
            "in": "query",
            "name": "team_preference",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "local",
              "OTR"
            ],
            "in": "query",
            "name": "distance_preference",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "minimum": 0,
            "name": "total_years_experience",
            "required": false,
            "type": "integer"
          },
          {
            "enum": [
              "none",
              "A",
              "B",
              "1",
              "2",
              "3"
            ],
            "in": "query",
            "name": "license_type",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "page_number",
            "required": false,
            "type": "integer"
          },
          {
            "description": "You can sort on any field in the return object.",
            "in": "query",
            "name": "list_order",
            "required": false,
            "type": "string"
          },
          {
            "enum": [
              "-asc",
              "-desc"
            ],
            "in": "query",
            "name": "list_direction",
            "required": false,
            "type": "string"
          },
          {
            "description": "Results per page.",
            "in": "query",
            "maximum": 100,
            "minimum": 1,
            "name": "item_count",
            "required": false,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "end-user-token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/inline_response_200_8"
            }
          }
        },
        "summary": "STAGE=UNK Get a list of Resumes",
        "tags": [
          "resumes"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"end-user-token: NO DEFAULT\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"end-user-token\", \"NO DEFAULT\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"end-user-token\", \"NO DEFAULT\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"end-user-token\", \"NO DEFAULT\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"end-user-token\", \"NO DEFAULT\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"end-user-token\", \"NO DEFAULT\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"end-user-token\": \"NO DEFAULT\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/resumes/boards',\n  qs: \n   { resume_id: 'SOME_INTEGER_VALUE',\n     state: 'SOME_ARRAY_VALUE',\n     city: 'SOME_STRING_VALUE',\n     radius: '30',\n     position: 'SOME_STRING_VALUE',\n     trailer_experience: 'SOME_ARRAY_VALUE',\n     region_preference: 'SOME_STRING_VALUE',\n     team_preference: 'SOME_STRING_VALUE',\n     distance_preference: 'SOME_STRING_VALUE',\n     total_years_experience: 'SOME_INTEGER_VALUE',\n     license_type: 'SOME_STRING_VALUE',\n     page_number: 'SOME_INTEGER_VALUE',\n     list_order: 'SOME_STRING_VALUE',\n     list_direction: 'SOME_STRING_VALUE',\n     item_count: 'SOME_INTEGER_VALUE' },\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'end-user-token': 'NO DEFAULT',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/resumes/boards\");\n\nreq.query({\n  \"resume_id\": \"SOME_INTEGER_VALUE\",\n  \"state\": \"SOME_ARRAY_VALUE\",\n  \"city\": \"SOME_STRING_VALUE\",\n  \"radius\": \"30\",\n  \"position\": \"SOME_STRING_VALUE\",\n  \"trailer_experience\": \"SOME_ARRAY_VALUE\",\n  \"region_preference\": \"SOME_STRING_VALUE\",\n  \"team_preference\": \"SOME_STRING_VALUE\",\n  \"distance_preference\": \"SOME_STRING_VALUE\",\n  \"total_years_experience\": \"SOME_INTEGER_VALUE\",\n  \"license_type\": \"SOME_STRING_VALUE\",\n  \"page_number\": \"SOME_INTEGER_VALUE\",\n  \"list_order\": \"SOME_STRING_VALUE\",\n  \"list_direction\": \"SOME_STRING_VALUE\",\n  \"item_count\": \"SOME_INTEGER_VALUE\"\n});\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"end-user-token\": @\"NO DEFAULT\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"end-user-token\", \"NO DEFAULT\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"'https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE'\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"end-user-token\" => \"NO DEFAULT\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\",\n    \"end-user-token: NO DEFAULT\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/resumes/boards');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setQueryData(array(\n  'resume_id' => 'SOME_INTEGER_VALUE',\n  'state' => 'SOME_ARRAY_VALUE',\n  'city' => 'SOME_STRING_VALUE',\n  'radius' => '30',\n  'position' => 'SOME_STRING_VALUE',\n  'trailer_experience' => 'SOME_ARRAY_VALUE',\n  'region_preference' => 'SOME_STRING_VALUE',\n  'team_preference' => 'SOME_STRING_VALUE',\n  'distance_preference' => 'SOME_STRING_VALUE',\n  'total_years_experience' => 'SOME_INTEGER_VALUE',\n  'license_type' => 'SOME_STRING_VALUE',\n  'page_number' => 'SOME_INTEGER_VALUE',\n  'list_order' => 'SOME_STRING_VALUE',\n  'list_direction' => 'SOME_STRING_VALUE',\n  'item_count' => 'SOME_INTEGER_VALUE'\n));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/resumes/boards');\n$request->setRequestMethod('GET');\n$request->setQuery(new http\\QueryString(array(\n  'resume_id' => 'SOME_INTEGER_VALUE',\n  'state' => 'SOME_ARRAY_VALUE',\n  'city' => 'SOME_STRING_VALUE',\n  'radius' => '30',\n  'position' => 'SOME_STRING_VALUE',\n  'trailer_experience' => 'SOME_ARRAY_VALUE',\n  'region_preference' => 'SOME_STRING_VALUE',\n  'team_preference' => 'SOME_STRING_VALUE',\n  'distance_preference' => 'SOME_STRING_VALUE',\n  'total_years_experience' => 'SOME_INTEGER_VALUE',\n  'license_type' => 'SOME_STRING_VALUE',\n  'page_number' => 'SOME_INTEGER_VALUE',\n  'list_order' => 'SOME_STRING_VALUE',\n  'list_direction' => 'SOME_STRING_VALUE',\n  'item_count' => 'SOME_INTEGER_VALUE'\n)));\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'end-user-token' => 'NO DEFAULT',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/resumes/boards\"\n\nquerystring = {\"resume_id\":\"SOME_INTEGER_VALUE\",\"state\":\"SOME_ARRAY_VALUE\",\"city\":\"SOME_STRING_VALUE\",\"radius\":\"30\",\"position\":\"SOME_STRING_VALUE\",\"trailer_experience\":\"SOME_ARRAY_VALUE\",\"region_preference\":\"SOME_STRING_VALUE\",\"team_preference\":\"SOME_STRING_VALUE\",\"distance_preference\":\"SOME_STRING_VALUE\",\"total_years_experience\":\"SOME_INTEGER_VALUE\",\"license_type\":\"SOME_STRING_VALUE\",\"page_number\":\"SOME_INTEGER_VALUE\",\"list_order\":\"SOME_STRING_VALUE\",\"list_direction\":\"SOME_STRING_VALUE\",\"item_count\":\"SOME_INTEGER_VALUE\"}\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'end-user-token': \"NO DEFAULT\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"end-user-token\"] = 'NO DEFAULT'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url 'https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE' \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --header 'end-user-token: NO DEFAULT'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET 'https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE' \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE \\\n  end-user-token:'NO DEFAULT'"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'end-user-token: NO DEFAULT' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - 'https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE'"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"end-user-token\": \"NO DEFAULT\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/resumes/boards?resume_id=SOME_INTEGER_VALUE&state=SOME_ARRAY_VALUE&city=SOME_STRING_VALUE&radius=30&position=SOME_STRING_VALUE&trailer_experience=SOME_ARRAY_VALUE&region_preference=SOME_STRING_VALUE&team_preference=SOME_STRING_VALUE&distance_preference=SOME_STRING_VALUE&total_years_experience=SOME_INTEGER_VALUE&license_type=SOME_STRING_VALUE&page_number=SOME_INTEGER_VALUE&list_order=SOME_STRING_VALUE&list_direction=SOME_STRING_VALUE&item_count=SOME_INTEGER_VALUE\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "RESUMES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/resumes/boards\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/resumes/boards\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/resumes/boards\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/resumes/boards\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/resumes/boards\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/resumes/boards\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/resumes/boards\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/resumes/boards',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/resumes/boards\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/resumes/boards\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/resumes/boards\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/resumes/boards\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/resumes/boards\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/resumes/boards');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/resumes/boards');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/resumes/boards\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/resumes/boards\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/resumes/boards\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/resumes/boards \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/resumes/boards \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/resumes/boards"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/resumes/boards\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    },
    "/resumes/exists": {
      "get": {
        "description": "Returns the status of a users resume:\nNOT-FOUND : No resume has been created\nDELETED : There was a resume but the user deleted it\nUPDATED : Pending approval\nAPPROVED : Available in search results",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/inline_response_200_9"
            }
          }
        },
        "summary": "Returns status of a users resume",
        "tags": [
          "resumes"
        ],
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"GET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/resumes/exists\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "var client = new RestClient(\"https://www.truckersearch.com/v1/resumes/exists\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\nrequest.AddHeader(\"Accept\", \"application/json\");\nIRestResponse response = client.Execute(request);"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/resumes/exists\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/resumes/exists\")\n  .get()\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.get(\"https://www.truckersearch.com/v1/resumes/exists\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/resumes/exists\",\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://www.truckersearch.com/v1/resumes/exists\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"GET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/resumes/exists\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'GET',\n  url: 'https://www.truckersearch.com/v1/resumes/exists',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"GET\", \"https://www.truckersearch.com/v1/resumes/exists\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/resumes/exists\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"GET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/resumes/exists\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers `GET uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"GET\",\n\"https://www.truckersearch.com/v1/resumes/exists\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/resumes/exists\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/resumes/exists');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/resumes/exists');\n$request->setRequestMethod('GET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"GET\", \"/v1/resumes/exists\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/resumes/exists\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://www.truckersearch.com/v1/resumes/exists\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request GET \\\n  --url https://www.truckersearch.com/v1/resumes/exists \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http GET https://www.truckersearch.com/v1/resumes/exists \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method GET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/resumes/exists"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/resumes/exists\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"GET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      },
      "x-restlet": {
        "section": "RESUMES",
        "x-code-samples": [
          {
            "lang": "C_libcurl",
            "source": "CURL *hnd = curl_easy_init();\n\ncurl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, \"X-RESTLET\");\ncurl_easy_setopt(hnd, CURLOPT_URL, \"https://www.truckersearch.com/v1/resumes/exists\");\n\nstruct curl_slist *headers = NULL;\nheaders = curl_slist_append(headers, \"api-token: REPLACE_KEY_VALUE\");\nheaders = curl_slist_append(headers, \"Content-Type: application/json\");\nheaders = curl_slist_append(headers, \"Accept: application/json\");\ncurl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);\n\nCURLcode ret = curl_easy_perform(hnd);"
          },
          {
            "lang": "Csharp_restsharp",
            "source": "Method not supported"
          },
          {
            "lang": "Go_native",
            "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://www.truckersearch.com/v1/resumes/exists\"\n\n\treq, _ := http.NewRequest(\"X-RESTLET\", url, nil)\n\n\treq.Header.Add(\"Accept\", \"application/json\")\n\treq.Header.Add(\"Content-Type\", \"application/json\")\n\treq.Header.Add(\"api-token\", \"REPLACE_KEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
          },
          {
            "lang": "Java_okhttp",
            "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"https://www.truckersearch.com/v1/resumes/exists\")\n  .method(\"X-RESTLET\", null)\n  .addHeader(\"Accept\", \"application/json\")\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
          },
          {
            "lang": "Java_unirest",
            "source": "HttpResponse<String> response = Unirest.customMethod(\"X-RESTLET\",\"https://www.truckersearch.com/v1/resumes/exists\")\n  .header(\"Accept\", \"application/json\")\n  .header(\"Content-Type\", \"application/json\")\n  .header(\"api-token\", \"REPLACE_KEY_VALUE\")\n  .asString();"
          },
          {
            "lang": "Javascript_jquery",
            "source": "var settings = {\n  \"async\": true,\n  \"crossDomain\": true,\n  \"url\": \"https://www.truckersearch.com/v1/resumes/exists\",\n  \"method\": \"X-RESTLET\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n}\n\n$.ajax(settings).done(function (response) {\n  console.log(response);\n});"
          },
          {
            "lang": "Javascript_xhr",
            "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"X-RESTLET\", \"https://www.truckersearch.com/v1/resumes/exists\");\nxhr.setRequestHeader(\"Accept\", \"application/json\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.setRequestHeader(\"api-token\", \"REPLACE_KEY_VALUE\");\n\nxhr.send(data);"
          },
          {
            "lang": "Node_native",
            "source": "var http = require(\"https\");\n\nvar options = {\n  \"method\": \"X-RESTLET\",\n  \"hostname\": \"www.truckersearch.com\",\n  \"port\": null,\n  \"path\": \"/v1/resumes/exists\",\n  \"headers\": {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"api-token\": \"REPLACE_KEY_VALUE\"\n  }\n};\n\nvar req = http.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function () {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n});\n\nreq.end();"
          },
          {
            "lang": "Node_request",
            "source": "var request = require(\"request\");\n\nvar options = { method: 'X-RESTLET',\n  url: 'https://www.truckersearch.com/v1/resumes/exists',\n  headers: \n   { 'api-token': 'REPLACE_KEY_VALUE',\n     'Content-Type': 'application/json',\n     Accept: 'application/json' } };\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
          },
          {
            "lang": "Node_unirest",
            "source": "var unirest = require(\"unirest\");\n\nvar req = unirest(\"X-RESTLET\", \"https://www.truckersearch.com/v1/resumes/exists\");\n\nreq.headers({\n  \"api-token\": \"REPLACE_KEY_VALUE\",\n  \"Content-Type\": \"application/json\",\n  \"Accept\": \"application/json\"\n});\n\n\nreq.end(function (res) {\n  if (res.error) throw new Error(res.error);\n\n  console.log(res.body);\n});\n"
          },
          {
            "lang": "Objc_nsurlsession",
            "source": "#import <Foundation/Foundation.h>\n\nNSDictionary *headers = @{ @\"Accept\": @\"application/json\",\n                           @\"Content-Type\": @\"application/json\",\n                           @\"api-token\": @\"REPLACE_KEY_VALUE\" };\n\nNSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@\"https://www.truckersearch.com/v1/resumes/exists\"]\n                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy\n                                                   timeoutInterval:10.0];\n[request setHTTPMethod:@\"X-RESTLET\"];\n[request setAllHTTPHeaderFields:headers];\n\nNSURLSession *session = [NSURLSession sharedSession];\nNSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request\n                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {\n                                                if (error) {\n                                                    NSLog(@\"%@\", error);\n                                                } else {\n                                                    NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;\n                                                    NSLog(@\"%@\", httpResponse);\n                                                }\n                                            }];\n[dataTask resume];"
          },
          {
            "lang": "Ocaml_cohttp",
            "source": "open Cohttp_lwt_unix\nopen Cohttp\nopen Lwt\n\nlet uri = Uri.of_string \"https://www.truckersearch.com/v1/resumes/exists\" in\nlet headers = Header.add_list (Header.init ()) [\n  (\"Accept\", \"application/json\");\n  (\"Content-Type\", \"application/json\");\n  (\"api-token\", \"REPLACE_KEY_VALUE\");\n] in\n\nClient.call ~headers (Code.method_of_string \"X-RESTLET\") uri\n>>= fun (res, body_stream) ->\n  (* Do stuff with the result *)"
          },
          {
            "lang": "Perl_perl5",
            "source": "#!/usr/bin/perl\nuse Modern::Perl;\nuse Data::Dumper;\nuse HTTP::Request::JSON;\nuse LWP::UserAgent::JSON;\nmy $request = HTTP::Request::JSON->new(\"X-RESTLET\",\n\"https://www.truckersearch.com/v1/resumes/exists\");\n$request->header( \"Accept\" => \"application/json\" );\n$request->header( \"Content-Type\" => \"application/json\" );\n$request->header( \"api-token\" => \"REPLACE_KEY_VALUE\" );\nmy $browser = LWP::UserAgent::JSON->new();\nmy $response = $browser->request($request);\nprint Dumper($response->json_content);"
          },
          {
            "lang": "Php_curl",
            "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => \"https://www.truckersearch.com/v1/resumes/exists\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"X-RESTLET\",\n  CURLOPT_HTTPHEADER => array(\n    \"Accept: application/json\",\n    \"Content-Type: application/json\",\n    \"api-token: REPLACE_KEY_VALUE\"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
          },
          {
            "lang": "Php_http1",
            "source": "<?php\n\nHttpRequest::methodRegister('X-RESTLET');\n$request = new HttpRequest();\n$request->setUrl('https://www.truckersearch.com/v1/resumes/exists');\n$request->setMethod(HttpRequest::HTTP_METH_X-RESTLET);\n\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
          },
          {
            "lang": "Php_http2",
            "source": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$request->setRequestUrl('https://www.truckersearch.com/v1/resumes/exists');\n$request->setRequestMethod('X-RESTLET');\n$request->setHeaders(array(\n  'api-token' => 'REPLACE_KEY_VALUE',\n  'Content-Type' => 'application/json',\n  'Accept' => 'application/json'\n));\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
          },
          {
            "lang": "Python_python3",
            "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"www.truckersearch.com\")\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nconn.request(\"X-RESTLET\", \"/v1/resumes/exists\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
          },
          {
            "lang": "Python_requests",
            "source": "import requests\n\nurl = \"https://www.truckersearch.com/v1/resumes/exists\"\n\nheaders = {\n    'Accept': \"application/json\",\n    'Content-Type': \"application/json\",\n    'api-token': \"REPLACE_KEY_VALUE\"\n    }\n\nresponse = requests.request(\"X-RESTLET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Ruby_native",
            "source": "require 'uri'\nrequire 'net/http'\n\nclass Net::HTTP::X-restlet < Net::HTTPRequest\n  METHOD = 'X-RESTLET'\n  REQUEST_HAS_BODY = 'false'\n  RESPONSE_HAS_BODY = true\nend\n\nurl = URI(\"https://www.truckersearch.com/v1/resumes/exists\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::X-restlet.new(url)\nrequest[\"Accept\"] = 'application/json'\nrequest[\"Content-Type\"] = 'application/json'\nrequest[\"api-token\"] = 'REPLACE_KEY_VALUE'\n\nresponse = http.request(request)\nputs response.read_body"
          },
          {
            "lang": "Shell_curl",
            "source": "curl --request X-RESTLET \\\n  --url https://www.truckersearch.com/v1/resumes/exists \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE'"
          },
          {
            "lang": "Shell_httpie",
            "source": "http X-RESTLET https://www.truckersearch.com/v1/resumes/exists \\\n  Accept:application/json \\\n  Content-Type:application/json \\\n  api-token:REPLACE_KEY_VALUE"
          },
          {
            "lang": "Shell_wget",
            "source": "wget --verbose \\\n  --method X-RESTLET \\\n  --header 'Accept: application/json' \\\n  --header 'Content-Type: application/json' \\\n  --header 'api-token: REPLACE_KEY_VALUE' \\\n  --output-document \\\n  - https://www.truckersearch.com/v1/resumes/exists"
          },
          {
            "lang": "Swift_nsurlsession",
            "source": "import Foundation\n\nlet headers = [\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"api-token\": \"REPLACE_KEY_VALUE\"\n]\n\nvar request = NSMutableURLRequest(URL: NSURL(string: \"https://www.truckersearch.com/v1/resumes/exists\")!,\n                                        cachePolicy: .UseProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.HTTPMethod = \"X-RESTLET\"\nrequest.allHTTPHeaderFields = headers\n\nlet session = NSURLSession.sharedSession()\nlet dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    println(error)\n  } else {\n    let httpResponse = response as? NSHTTPURLResponse\n    println(httpResponse)\n  }\n})\n\ndataTask.resume()"
          }
        ]
      }
    }
  },
  "definitions": {
    "alert_request_object": {
      "properties": {
        "notification_medium": {
          "description": "Push is not yet implemented.",
          "enum": [
            "email",
            "text",
            "push"
          ],
          "type": "string"
        },
        "only_new": {
          "description": "Whether to send both new and updated resumes, or just new resumes.",
          "type": "boolean"
        },
        "search_parameters": {
          "$ref": "#/definitions/resume_search"
        },
        "search_type": {
          "default": "resume",
          "enum": [
            "job",
            "resume"
          ],
          "type": "string"
        },
        "send_frequency": {
          "description": "Frequency in minutes that the alert is sent. We stop sending alerts between 12am and 3am CST.",
          "type": "integer"
        }
      },
      "required": [
        "notification_medium",
        "only_new",
        "search_parameters",
        "send_frequency"
      ],
      "type": "object",
      "x-restlet": {
        "section": "ALERTS"
      }
    },
    "alert_response_object": {
      "properties": {
        "alert_id": {
          "type": "integer"
        },
        "last_sent": {
          "description": "Last time the alert was sent.",
          "format": "date-time",
          "type": "string"
        },
        "notification_medium": {
          "enum": [
            "email",
            "text",
            "push"
          ],
          "type": "string"
        },
        "only_new": {
          "description": "Whether to send both new and updated resumes, or just new resumes.",
          "type": "boolean"
        },
        "search_parameters": {
          "$ref": "#/definitions/resume_search"
        },
        "send_frequency": {
          "description": "Frequency in minutes that the alert is sent.",
          "type": "integer"
        }
      },
      "required": [
        "alert_id",
        "last_sent",
        "notification_medium",
        "only_new",
        "search_parameters",
        "send_frequency"
      ],
      "type": "object",
      "x-restlet": {
        "section": "ALERTS"
      }
    },
    "body_1": {
      "properties": {
        "new_password": {
          "type": "string"
        },
        "old_password": {
          "type": "string"
        }
      },
      "required": [
        "new_password",
        "old_password"
      ],
      "type": "object"
    },
    "body_10": {
      "properties": {
        "notification_channel": {
          "default": "all",
          "description": "Currently defaults to all, and is ignored. When we start using it it will be for opting people out or in one list like alerts, or messages, but not others.",
          "type": "string"
        },
        "notification_medium": {
          "description": "We currently only accept push",
          "enum": [
            "email",
            "text",
            "push"
          ],
          "type": "string"
        },
        "tokens": {
          "$ref": "#/definitions/optins_tokens"
        }
      },
      "required": [
        "notification_medium"
      ],
      "type": "object"
    },
    "body_11": {
      "properties": {
        "notification_medium": {
          "enum": [
            "email",
            "text"
          ],
          "type": "string"
        },
        "verification_code": {
          "description": "This code is generated on a POST, and will arrive via the same medium it was designated for.",
          "type": "string"
        }
      },
      "required": [
        "notification_medium",
        "verification_code"
      ],
      "type": "object"
    },
    "body_2": {
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "required": [
        "email"
      ],
      "type": "object"
    },
    "body_3": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "status": {
          "description": "It defaults to employer.",
          "enum": [
            "employer",
            "driver"
          ],
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ],
      "type": "object"
    },
    "body_4": {
      "properties": {
        "favorite_id": {
          "description": "The id of the favorite to add.",
          "type": "integer"
        },
        "type": {
          "enum": [
            "job",
            "resume"
          ],
          "type": "string"
        }
      },
      "required": [
        "favorite_id",
        "type"
      ],
      "type": "object"
    },
    "body_5": {
      "properties": {
        "job_id": {
          "description": "The id of the job ad to activate.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "body_6": {
      "properties": {
        "contact_id": {
          "description": "Who the message is being sent to.",
          "type": "integer"
        },
        "message": {
          "description": "This can contain a small list of html tags.",
          "type": "string"
        }
      },
      "required": [
        "contact_id",
        "message"
      ],
      "type": "object"
    },
    "body_7": {
      "properties": {
        "contact_id": {
          "description": "Which contact's conversation.",
          "type": "integer"
        },
        "sent_date": {
          "description": "This should be a YYYY-MM-DD HH:MM:SS string like in a conversation message.",
          "type": "string"
        },
        "status": {
          "description": "the new status.",
          "enum": [
            "user_block",
            "sent",
            "read"
          ],
          "type": "string"
        }
      },
      "required": [
        "contact_id",
        "sent_date",
        "status"
      ],
      "type": "object"
    },
    "body_8": {
      "properties": {
        "block_contact": {
          "description": "Setting this to true will set the status of incomming messages to 'user_block'. It will also set the conversation status to 'user_block'. \n Setting it to false will remove this filter. It will also revert the conversation status. It will not change the status of messages already sent by the contact.",
          "type": "boolean"
        },
        "contact_id": {
          "description": "Contact to move.",
          "type": "integer"
        },
        "new_folder": {
          "description": "If you include either the new or old folder, the other must be included.",
          "type": "integer"
        },
        "old_folder": {
          "description": "If you include either the new or old folder, the other must be included.",
          "type": "integer"
        }
      },
      "required": [
        "contact_id"
      ],
      "type": "object"
    },
    "body_9": {
      "description": "You can use any name that has not already been taken. Certain folders are automatically created, the first time a message is sent or recieved. The names of these folders are reserved and cannot be added, modified or deleted.\n\nCurrently they are Active, Pending, Deleted, and Trash.",
      "properties": {
        "name": {
          "description": "Name of the folder to be added.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "body": {
      "properties": {
        "login": {
          "type": "string"
        },
        "realm": {
          "description": "Choose what type of login this is.",
          "enum": [
            "email",
            "username"
          ],
          "type": "string"
        },
        "secret": {
          "type": "string"
        }
      },
      "required": [
        "login",
        "realm",
        "secret"
      ],
      "type": "object"
    },
    "conversation_list_list": {
      "properties": {
        "date_sent": {
          "format": "date-time",
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "sender": {
          "description": "Who sent the message, the logged in user, or the contact.",
          "type": "integer"
        },
        "status": {
          "enum": [
            "read",
            "sent",
            "user_block"
          ],
          "type": "string"
        }
      },
      "required": [
        "date_sent",
        "message",
        "sender",
        "status"
      ],
      "type": "object"
    },
    "conversation_list": {
      "properties": {
        "list": {
          "description": "conversation in chronological order",
          "items": {
            "$ref": "#/definitions/conversation_list_list"
          },
          "type": "array"
        }
      },
      "required": [
        "list"
      ],
      "type": "object",
      "x-restlet": {
        "section": "MESSAGES"
      }
    },
    "create_status": {
      "properties": {
        "success": {
          "type": "integer"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "error_object": {
      "example": "{\n  \"code\": 1,\n  \"error\": \"Generic Validation\",\n  \"description\": \"The e-mail address must be valid.\"\n}",
      "properties": {
        "code": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "code",
        "description",
        "error"
      ],
      "type": "object",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "get_favorite_ids": {
      "properties": {
        "favorite_id": {
          "description": "A subset of this users favorite resumes or job ids",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "inline_response_200_1": {
      "properties": {
        "status": {
          "enum": [
            "premium_employer",
            "driver",
            "employer",
            "not_logged_in",
            "overdue_employer"
          ],
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "type": "object"
    },
    "inline_response_200_2": {
      "properties": {
        "count": {
          "type": "integer"
        }
      },
      "required": [
        "count"
      ],
      "type": "object"
    },
    "inline_response_200_3": {
      "properties": {
        "bill_method": {
          "enum": [
            "manual",
            "automatic"
          ],
          "type": "string"
        },
        "days_left": {
          "description": "If the Job is not active, this value tells how many days the Job can be run for before payment.",
          "type": "integer"
        },
        "expires_after": {
          "format": "date",
          "type": "string"
        }
      },
      "required": [
        "bill_method",
        "days_left",
        "expires_after"
      ],
      "type": "object"
    },
    "inline_response_200_4_list": {
      "properties": {
        "contact_company": {
          "type": "string"
        },
        "contact_id": {
          "type": "integer"
        },
        "contact_name": {
          "type": "string"
        },
        "conversation_status": {
          "description": "Sent means that the contact sent your user a message, but it has not yet been read by them. Messages are automatically marked as read when the GET /messages endpoint is called for that conversation. This will return null when the contact has not yet sent a message back to your user. \n  user_block means that the user has blocked this contact. You can use  the patch method to remove the block.",
          "enum": [
            "sent",
            "read",
            "user_block"
          ],
          "type": "string"
        },
        "last_received": {
          "description": "If the contact has sent your logged in user a message, then the newest message's sent date will appear, otherwise it will be null.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "contact_company",
        "contact_id",
        "contact_name"
      ],
      "type": "object"
    },
    "inline_response_200_4": {
      "properties": {
        "list": {
          "items": {
            "$ref": "#/definitions/inline_response_200_4_list"
          },
          "type": "array"
        }
      },
      "required": [
        "list"
      ],
      "type": "object"
    },
    "inline_response_200_5_list": {
      "properties": {
        "folder_id": {
          "description": "folder id",
          "type": "integer"
        },
        "name": {
          "description": "Folder Name",
          "type": "string"
        },
        "new_count": {
          "description": "How many new messages in that folder.",
          "type": "integer"
        }
      },
      "required": [
        "folder_id",
        "name",
        "new_count"
      ],
      "type": "object"
    },
    "inline_response_200_5": {
      "description": "Current version doesn't really work with the documentation.  because of variable folder names. It looks like this.\n\n{\"Active\":0,\"Trash\":0,\"test 5\":0,\"Pending\":0,\"TrucksNcars\":0,\"new folder 2\":0,\"Deleted\":0,\"test1\":0,\"NewFolderTest\":0}",
      "properties": {
        "list": {
          "items": {
            "$ref": "#/definitions/inline_response_200_5_list"
          },
          "type": "array"
        }
      },
      "required": [
        "list"
      ],
      "type": "object"
    },
    "inline_response_200_6": {
      "properties": {
        "bullet_points": {
          "items": {
            "default": "[]",
            "type": "string"
          },
          "type": "array"
        },
        "information_url": {
          "default": "null",
          "type": "string"
        },
        "message": {
          "default": "null",
          "type": "string"
        },
        "title": {
          "default": "null",
          "type": "string"
        },
        "update_url": {
          "default": "null",
          "type": "string"
        }
      },
      "required": [
        "bullet_points",
        "information_url",
        "message",
        "title",
        "update_url"
      ],
      "type": "object"
    },
    "inline_response_200_7_list": {
      "properties": {
        "notification_channel": {
          "default": "all",
          "type": "string"
        },
        "notification_medium": {
          "enum": [
            "email",
            "text",
            "push"
          ],
          "type": "string"
        },
        "status": {
          "enum": [
            "optin",
            "optout",
            "no response",
            "no record"
          ],
          "type": "string"
        }
      },
      "required": [
        "notification_channel",
        "notification_medium",
        "status"
      ],
      "type": "object"
    },
    "inline_response_200_7": {
      "properties": {
        "list": {
          "items": {
            "$ref": "#/definitions/inline_response_200_7_list"
          },
          "type": "array"
        }
      },
      "required": [
        "list"
      ],
      "type": "object"
    },
    "inline_response_200_8": {
      "properties": {
        "list": {
          "items": {
            "$ref": "#/definitions/resume_board_data"
          },
          "type": "array"
        },
        "page_number": {
          "type": "integer"
        },
        "total_items": {
          "type": "integer"
        },
        "total_pages": {
          "type": "integer"
        }
      },
      "required": [
        "list",
        "page_number",
        "total_items",
        "total_pages"
      ],
      "type": "object"
    },
    "inline_response_200_9": {
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "type": "object"
    },
    "inline_response_200": {
      "properties": {
        "list": {
          "items": {
            "$ref": "#/definitions/alert_response_object"
          },
          "type": "array"
        }
      },
      "required": [
        "list"
      ],
      "type": "object"
    },
    "inline_response_201_1": {
      "properties": {
        "folder_id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "folder_id",
        "name"
      ],
      "type": "object"
    },
    "inline_response_201": {
      "description": "Will automatically log them in, and return the needed token.",
      "properties": {
        "end-user-token": {
          "description": "Their token to show they are logged in.",
          "type": "string"
        }
      },
      "required": [
        "end-user-token"
      ],
      "type": "object"
    },
    "inline_response_422": {
      "properties": {
        "code": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "code",
        "description",
        "error"
      ],
      "type": "object"
    },
    "job_data_contact": {
      "properties": {
        "address": {
          "maxLength": 64,
          "type": "string"
        },
        "city": {
          "maxLength": 45,
          "type": "string"
        },
        "contact": {
          "maxLength": 45,
          "type": "string"
        },
        "email": {
          "maxLength": 45,
          "type": "string"
        },
        "name": {
          "maxLength": 45,
          "type": "string"
        },
        "phone": {
          "type": "integer"
        },
        "state": {
          "maxLength": 2,
          "type": "string"
        },
        "website": {
          "maxLength": 500,
          "type": "string"
        },
        "zip": {
          "maxLength": 10,
          "type": "string"
        }
      },
      "required": [
        "contact",
        "email",
        "phone"
      ],
      "type": "object"
    },
    "job_data_patch_contact": {
      "description": "As long as 1 sub element from contact or position is filled in this will be a valid request.",
      "properties": {
        "address": {
          "maxLength": 64,
          "type": "string"
        },
        "city": {
          "maxLength": 45,
          "type": "string"
        },
        "contact": {
          "maxLength": 45,
          "type": "string"
        },
        "email": {
          "maxLength": 45,
          "type": "string"
        },
        "name": {
          "maxLength": 45,
          "type": "string"
        },
        "phone": {
          "type": "integer"
        },
        "state": {
          "maxLength": 2,
          "type": "string"
        },
        "website": {
          "maxLength": 500,
          "type": "string"
        },
        "zip": {
          "maxLength": 10,
          "type": "string"
        }
      },
      "type": "object"
    },
    "job_data_patch_perks": {
      "properties": {
        "24x7_dispatch": {
          "description": "24 x 7 dispatch.",
          "type": "boolean"
        },
        "all_miles_paid": {
          "description": "Are all miles paid.",
          "type": "boolean"
        },
        "company_fuel_card": {
          "description": "Company fuel card.",
          "type": "boolean"
        },
        "dental_insurance": {
          "description": "Does this job offer dental insurance.",
          "type": "boolean"
        },
        "detention_layover_pay": {
          "description": "Detention layover pay.",
          "type": "boolean"
        },
        "direct_deposit": {
          "description": "Does this job offer direct deposit.",
          "type": "boolean"
        },
        "equipment_age": {
          "description": "Equipment age.",
          "type": "number"
        },
        "free_roadside_assistance": {
          "description": "Does this job offer free roadside assistance.",
          "type": "boolean"
        },
        "health_insurance": {
          "description": "Does this job offer health insurance.",
          "type": "boolean"
        },
        "home": {
          "enum": [
            "daily",
            "weekly",
            "biweekly",
            "monthly",
            "other"
          ],
          "type": "string"
        },
        "lease_purchase_available": {
          "description": "Lease purchase available.",
          "type": "boolean"
        },
        "life_insurance": {
          "description": "Does this job offer life insurance.",
          "type": "boolean"
        },
        "no_touch_freight": {
          "description": "Does this job offer no touch freight.",
          "type": "boolean"
        },
        "paid": {
          "enum": [
            "weekly",
            "biweekly",
            "monthly",
            "other"
          ],
          "type": "string"
        },
        "paid_holidays": {
          "description": "Does this job offer paid holidays.",
          "type": "boolean"
        },
        "paid_sick_time": {
          "description": "Does this job offer paid sick time.",
          "type": "boolean"
        },
        "paid_vacation": {
          "description": "Does this job offer paid vacation.",
          "type": "boolean"
        },
        "pet_friendly": {
          "description": "Is this job pet friendly.",
          "type": "boolean"
        },
        "referral_bonuses": {
          "description": "Does this job offer referral bonuses.",
          "type": "boolean"
        },
        "rider_program": {
          "description": "Rider program.",
          "type": "boolean"
        },
        "round_trip_loads": {
          "description": "Does this job offer round trip loads.",
          "type": "boolean"
        },
        "safety_bonus": {
          "description": "Safety bonus.",
          "type": "boolean"
        },
        "sign_on_bonus": {
          "description": "Sign on bonus.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "job_data_patch_position": {
      "description": "As long as 1 sub element from contact or position is filled in this will be a valid request.",
      "properties": {
        "description": {
          "description": "This can be long form text.",
          "type": "string"
        },
        "distance_preference": {
          "enum": [
            "OTR",
            "local"
          ],
          "type": "string"
        },
        "image_url": {
          "description": "Sending in an empty string will cause us to regenerate a new image.",
          "type": "string"
        },
        "locations": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "region_preference": {
          "$ref": "#/definitions/regions"
        },
        "team_preference": {
          "enum": [
            "single",
            "team"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "job_data_patch": {
      "properties": {
        "contact": {
          "$ref": "#/definitions/job_data_patch_contact"
        },
        "job_id": {
          "description": "The Job ad to patch.",
          "type": "integer"
        },
        "perks": {
          "$ref": "#/definitions/job_data_patch_perks"
        },
        "position": {
          "$ref": "#/definitions/job_data_patch_position"
        }
      },
      "required": [
        "job_id"
      ],
      "type": "object",
      "x-restlet": {
        "section": "JOBS"
      }
    },
    "job_data_position": {
      "properties": {
        "Image_url": {
          "description": "We will download the image from the URL. If no image is found we will automatically generate one. We accept an image file of up to 1MB in size. All images will be resized to 200x200. If this value is specified image_data cannot be used.",
          "type": "string"
        },
        "description": {
          "description": "This can be long form text.",
          "type": "string"
        },
        "distance_preference": {
          "default": "OTR",
          "enum": [
            "OTR",
            "local"
          ],
          "type": "string"
        },
        "image_data": {
          "description": "Base64 string of image. Base64 data must decode into a valid jpg or png file no more than 1MB in size. All images will be resized to 200x200. If this value is specified image_url cannot be used.",
          "type": "string"
        },
        "locations": {
          "description": "If included the array only accepts 2 digit state codes. MO, BC, AR, and so on. \n\nHow did Jon implement country level coding? I think at the time I said it should be done by the \"front end\", I am still for that, but if the hack is already in place in the backend I am open to leveraging it.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "region_preference": {
          "$ref": "#/definitions/regions"
        },
        "team_preference": {
          "default": "single",
          "enum": [
            "single",
            "team"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "job_data": {
      "properties": {
        "contact": {
          "$ref": "#/definitions/job_data_contact"
        },
        "perks": {
          "$ref": "#/definitions/job_data_patch_perks"
        },
        "position": {
          "$ref": "#/definitions/job_data_position"
        }
      },
      "required": [
        "contact"
      ],
      "type": "object",
      "x-restlet": {
        "section": "JOBS"
      }
    },
    "job_list_contact": {
      "description": "The contact information for this ad.",
      "properties": {
        "address": {
          "maxLength": 64,
          "type": "string"
        },
        "city": {
          "maxLength": 45,
          "type": "string"
        },
        "contact": {
          "maxLength": 45,
          "type": "string"
        },
        "email": {
          "maxLength": 45,
          "type": "string"
        },
        "id": {
          "description": "This is the id you would use to send a message to this employer. Only logged in users can see this.",
          "type": "integer"
        },
        "name": {
          "maxLength": 45,
          "type": "string"
        },
        "phone": {
          "type": "integer"
        },
        "state": {
          "maxLength": 2,
          "type": "string"
        },
        "website": {
          "maxLength": 500,
          "type": "string"
        },
        "zip": {
          "maxLength": 10,
          "type": "string"
        }
      },
      "required": [
        "address",
        "city",
        "contact",
        "name",
        "phone",
        "state",
        "zip"
      ],
      "type": "object"
    },
    "job_list_list": {
      "properties": {
        "contact": {
          "$ref": "#/definitions/job_list_contact"
        },
        "job_id": {
          "type": "number"
        },
        "perks": {
          "$ref": "#/definitions/job_data_patch_perks"
        },
        "position": {
          "$ref": "#/definitions/job_list_position"
        },
        "relevance": {
          "description": "Search relevance score.",
          "type": "integer"
        }
      },
      "required": [
        "contact",
        "job_id",
        "position"
      ],
      "type": "object"
    },
    "job_list_position": {
      "properties": {
        "description": {
          "description": "This is a large text field.",
          "type": "string"
        },
        "distance_preference": {
          "enum": [
            "OTR",
            "local"
          ],
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "region_preference": {
          "$ref": "#/definitions/regions"
        },
        "states": {
          "description": "Currently we return the full state name for display purposes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "team_preference": {
          "enum": [
            "single",
            "team"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "distance_preference",
        "image_url",
        "region_preference",
        "states",
        "team_preference"
      ],
      "type": "object"
    },
    "job_list_user_contact": {
      "description": "The contact information for this ad.",
      "properties": {
        "address": {
          "maxLength": 64,
          "type": "string"
        },
        "city": {
          "maxLength": 45,
          "type": "string"
        },
        "contact": {
          "maxLength": 45,
          "type": "string"
        },
        "email": {
          "maxLength": 45,
          "type": "string"
        },
        "name": {
          "maxLength": 45,
          "type": "string"
        },
        "phone": {
          "type": "integer"
        },
        "state": {
          "maxLength": 2,
          "type": "string"
        },
        "website": {
          "maxLength": 500,
          "type": "string"
        },
        "zip": {
          "maxLength": 10,
          "type": "string"
        }
      },
      "required": [
        "address",
        "city",
        "contact",
        "name",
        "phone",
        "state",
        "zip"
      ],
      "type": "object"
    },
    "job_list_user_list": {
      "properties": {
        "bill_method": {
          "description": "Whether or not the add will automatically renew.",
          "enum": [
            "manual",
            "automatic"
          ],
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/job_list_user_contact"
        },
        "days_left": {
          "description": "A positive value indicates the ad is both inactive, and can be run for that number of days.",
          "type": "integer"
        },
        "expires_after": {
          "description": "If this date is set for today or in the future the job ad is currently active.",
          "format": "date",
          "type": "string"
        },
        "job_id": {
          "type": "number"
        },
        "perks": {
          "$ref": "#/definitions/job_data_patch_perks"
        },
        "position": {
          "$ref": "#/definitions/job_list_user_position"
        }
      },
      "required": [
        "bill_method",
        "contact",
        "days_left",
        "expires_after",
        "job_id",
        "position"
      ],
      "type": "object"
    },
    "job_list_user_position": {
      "properties": {
        "description": {
          "description": "This is a large text field.",
          "type": "string"
        },
        "distance_preference": {
          "enum": [
            "local",
            "OTR"
          ],
          "type": "string"
        },
        "image_url": {
          "description": "the uri path to the image.",
          "example": "http://df.co/job_images/ASOETUHAOSENTUHAOENUTSH.png",
          "maxLength": 32,
          "type": "string"
        },
        "locations": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "region_preference": {
          "$ref": "#/definitions/regions"
        },
        "team_preference": {
          "enum": [
            "team",
            "single"
          ],
          "type": "string"
        }
      },
      "required": [
        "description",
        "distance_preference",
        "image_url",
        "region_preference",
        "team_preference"
      ],
      "type": "object"
    },
    "job_list_user": {
      "properties": {
        "list": {
          "items": {
            "$ref": "#/definitions/job_list_user_list"
          },
          "type": "array"
        },
        "page_number": {
          "type": "integer"
        },
        "total_items": {
          "type": "integer"
        },
        "total_pages": {
          "type": "integer"
        }
      },
      "required": [
        "list",
        "page_number",
        "total_items",
        "total_pages"
      ],
      "type": "object",
      "x-restlet": {
        "section": "JOBS"
      }
    },
    "job_list": {
      "properties": {
        "list": {
          "items": {
            "$ref": "#/definitions/job_list_list"
          },
          "type": "array"
        },
        "page_number": {
          "type": "integer"
        },
        "total_items": {
          "type": "integer"
        },
        "total_pages": {
          "type": "integer"
        }
      },
      "required": [
        "list",
        "page_number",
        "total_items",
        "total_pages"
      ],
      "type": "object",
      "x-restlet": {
        "section": "JOBS"
      }
    },
    "mobile_carriers": {
      "enum": [
        "Other/Unknown",
        "AT&T",
        "Verizon",
        "Sprint",
        "T-Mobile",
        "US Cellular",
        "Nextel",
        "Virgin Mobile",
        "Boost Mobile",
        "Straight Talk",
        "Tracfone",
        "NET10",
        "Metro PCS",
        "Cricket",
        "Rogers",
        "Fido",
        "Bell Mobility",
        "Telus",
        "Clearnet",
        "Solo Mobile",
        "Koodo Mobile"
      ],
      "type": "string",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "optins_tokens": {
      "description": "This is how you can add multiple push notifications at once, or for systems that have multiple tokens required.",
      "example": "\"\\\"tokens\\\": { \\\"ios\\\": \\\"12345678\\\", \\\"android\\\": \\\"5432344\\\" } \"",
      "properties": {
        "$SERVICE_OR_KEY_NAME": {
          "description": "Fill in the key in the value, and the service in the name. Look at our examples for clarification.",
          "type": "string"
        }
      },
      "required": [
        "$SERVICE_OR_KEY_NAME"
      ],
      "type": "object"
    },
    "positions": {
      "enum": [
        "other",
        "student",
        "company driver",
        "owner operator"
      ],
      "type": "string",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "profile_patch_response": {
      "properties": {
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "contact_extension": {
          "description": "Limited to 3 digits.",
          "type": "integer"
        },
        "contact_number": {
          "type": "integer"
        },
        "fax_number": {
          "type": "integer"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "mobile_carrier": {
          "$ref": "#/definitions/mobile_carriers"
        },
        "mobile_number": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "web_page": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      },
      "required": [
        "address",
        "city",
        "company",
        "contact_extension",
        "contact_number",
        "fax_number",
        "first_name",
        "last_name",
        "mobile_carrier",
        "mobile_number",
        "state",
        "web_page",
        "zip"
      ],
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "profile_request": {
      "properties": {
        "address": {
          "maxLength": 50,
          "type": "string"
        },
        "city": {
          "maxLength": 30,
          "type": "string"
        },
        "company": {
          "maxLength": 50,
          "type": "string"
        },
        "contact_extension": {
          "description": "Limited to 3 digits.",
          "type": "integer"
        },
        "contact_number": {
          "type": "integer"
        },
        "fax_number": {
          "type": "integer"
        },
        "first_name": {
          "maxLength": 50,
          "type": "string"
        },
        "last_name": {
          "maxLength": 50,
          "type": "string"
        },
        "mobile_carrier": {
          "$ref": "#/definitions/mobile_carriers"
        },
        "mobile_number": {
          "type": "integer"
        },
        "state": {
          "description": "Please use an Abbreviation not a full name.",
          "maxLength": 3,
          "type": "string"
        },
        "web_page": {
          "maxLength": 120,
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "profile_response": {
      "properties": {
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "contact_extension": {
          "description": "Limited to 3 digits.",
          "type": "integer"
        },
        "contact_number": {
          "type": "integer"
        },
        "fax_number": {
          "type": "integer"
        },
        "first_name": {
          "type": "string"
        },
        "id": {
          "description": "This is their ID in messages.",
          "type": "integer"
        },
        "last_name": {
          "type": "string"
        },
        "mobile_carrier": {
          "$ref": "#/definitions/mobile_carriers"
        },
        "mobile_number": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "web_page": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      },
      "required": [
        "address",
        "city",
        "company",
        "contact_extension",
        "contact_number",
        "fax_number",
        "first_name",
        "id",
        "last_name",
        "mobile_carrier",
        "mobile_number",
        "state",
        "web_page",
        "zip"
      ],
      "type": "object",
      "x-restlet": {
        "section": "PROFILES"
      }
    },
    "regions": {
      "description": "This is a list of possible regions. This matches the regions from searching and posting a job ad on our website. I am adding it to the API with the assumption that we can expand our resume regions to match. This should aviod some confusion and weirdness. An example would be alert options. ",
      "enum": [
        "east coast",
        "west coast",
        "midwest",
        "nationwide",
        "north east",
        "north west",
        "south east",
        "south west",
        "local"
      ],
      "type": "string",
      "x-restlet": {
        "section": "common_definitions"
      }
    },
    "resume_board_data_contact": {
      "description": "The non required fields will only show up on a single resume search. You can do that by specifying the alert_id.",
      "properties": {
        "address": {
          "description": "Only available to subscribed users.",
          "maxLength": 40,
          "type": "string"
        },
        "city": {
          "maxLength": 30,
          "type": "string"
        },
        "contact_number": {
          "description": "Only available to subscribed users.",
          "maximum": 14,
          "type": "integer"
        },
        "fax_number": {
          "description": "Should we depricate this? How many new resumes come with this? Only available to subscribed users.",
          "maximum": 14,
          "type": "integer"
        },
        "first_name": {
          "description": "Only available to subscribed users.",
          "maxLength": 50,
          "type": "string"
        },
        "id": {
          "description": "This is the ID you would use to send a message. Only available to logged in users.",
          "type": "integer"
        },
        "last_name": {
          "description": "Only available to subscribed users.",
          "maxLength": 50,
          "type": "string"
        },
        "mobile_carrier": {
          "$ref": "#/definitions/mobile_carriers"
        },
        "mobile_number": {
          "description": "Same as home phone. Only available to subscribed users.",
          "maximum": 14,
          "type": "integer"
        },
        "state": {
          "maxLength": 3,
          "type": "string"
        },
        "web_page": {
          "description": "Only available to subscribed users.",
          "maxLength": 120,
          "type": "string"
        },
        "zip": {
          "description": "Only available to subscribed users.",
          "maxLength": 10,
          "type": "string"
        }
      },
      "required": [
        "city",
        "first_name",
        "last_name",
        "state"
      ],
      "type": "object"
    },
    "resume_board_data_driving_record": {
      "properties": {
        "accidents": {
          "minimum": 0,
          "type": "integer"
        },
        "age": {
          "enum": [
            "18-20",
            "21-25",
            "26-30",
            "Over 30"
          ],
          "type": "string"
        },
        "gender": {
          "enum": [
            "male",
            "female"
          ],
          "type": "string"
        },
        "license_type": {
          "enum": [
            "A",
            "B",
            "1",
            "2",
            "3"
          ],
          "type": "string"
        },
        "tickets": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "accidents",
        "age",
        "tickets"
      ],
      "type": "object"
    },
    "resume_board_data_experience": {
      "properties": {
        "current_employer": {
          "description": "Only available to subscribed users.",
          "maxLength": 40,
          "type": "string"
        },
        "current_years_experience": {
          "minimum": 0,
          "type": "integer"
        },
        "felony_reason": {
          "description": "Only available to subscribed users.",
          "type": "string"
        },
        "has_felony": {
          "type": "boolean"
        },
        "previous_employer": {
          "description": "Only available to subscribed users.",
          "maxLength": 40,
          "type": "string"
        },
        "previous_years_experience": {
          "minimum": 0,
          "type": "integer"
        },
        "total_years_experience": {
          "minimum": 0,
          "type": "integer"
        },
        "trailer_experience": {
          "$ref": "#/definitions/trailers"
        }
      },
      "required": [
        "total_years_experience"
      ],
      "type": "object"
    },
    "resume_board_data_job_preference": {
      "properties": {
        "distance_preference": {
          "enum": [
            "OTR",
            "local"
          ],
          "type": "string"
        },
        "position": {
          "$ref": "#/definitions/positions"
        },
        "region_preference": {
          "$ref": "#/definitions/regions"
        },
        "team_preference": {
          "enum": [
            "single",
            "team"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "resume_board_data": {
      "example": "A resume.",
      "properties": {
        "comments": {
          "description": "Only available to subscribed users.",
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/resume_board_data_contact"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "driving_record": {
          "$ref": "#/definitions/resume_board_data_driving_record"
        },
        "experience": {
          "$ref": "#/definitions/resume_board_data_experience"
        },
        "job_preference": {
          "$ref": "#/definitions/resume_board_data_job_preference"
        },
        "resume_id": {
          "type": "integer"
        },
        "updated": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "contact",
        "created",
        "driving_record",
        "experience",
        "resume_id",
        "updated"
      ],
      "type": "object",
      "x-restlet": {
        "section": "RESUMES"
      }
    },
    "resume_data_optional_driving_record": {
      "properties": {
        "accidents": {
          "minimum": 0,
          "type": "integer"
        },
        "age": {
          "enum": [
            "18-20",
            "21-25",
            "26-30",
            "Over 30"
          ],
          "type": "string"
        },
        "gender": {
          "enum": [
            "male",
            "female"
          ],
          "type": "string"
        },
        "license_type": {
          "enum": [
            "A",
            "B",
            "1",
            "2",
            "3"
          ],
          "type": "string"
        },
        "tickets": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "resume_data_optional_experience": {
      "properties": {
        "current_employer": {
          "maxLength": 40,
          "type": "string"
        },
        "current_years_experience": {
          "minimum": 0,
          "type": "integer"
        },
        "felony_reason": {
          "type": "string"
        },
        "has_felony": {
          "type": "boolean"
        },
        "previous_employer": {
          "maxLength": 40,
          "type": "string"
        },
        "previous_years_experience": {
          "minimum": 0,
          "type": "integer"
        },
        "total_years_experience": {
          "minimum": 0,
          "type": "integer"
        },
        "trailer_experience": {
          "$ref": "#/definitions/trailers"
        }
      },
      "type": "object"
    },
    "resume_data_optional": {
      "properties": {
        "comments": {
          "type": "string"
        },
        "driving_record": {
          "$ref": "#/definitions/resume_data_optional_driving_record"
        },
        "experience": {
          "$ref": "#/definitions/resume_data_optional_experience"
        },
        "job_preference": {
          "$ref": "#/definitions/resume_board_data_job_preference"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "RESUMES"
      }
    },
    "resume_search": {
      "properties": {
        "city": {
          "type": "string"
        },
        "driver_distance": {
          "enum": [
            "local",
            "OTR"
          ],
          "type": "string"
        },
        "driver_experience": {
          "type": "integer"
        },
        "driver_type": {
          "enum": [
            "other",
            "student",
            "company",
            "owner/operator"
          ],
          "type": "string"
        },
        "license_type": {
          "enum": [
            "A",
            "B",
            "1",
            "2",
            "3",
            "none"
          ],
          "type": "string"
        },
        "list_direction": {
          "enum": [
            "desc",
            "asc"
          ],
          "type": "string"
        },
        "list_order": {
          "description": "Any of the results columns for a search are also valid for list_order",
          "type": "string"
        },
        "radius": {
          "type": "integer"
        },
        "region": {
          "enum": [
            "east coast",
            "west coast",
            "mid west",
            "nation wide",
            "noth east",
            "north west",
            "south east",
            "south west",
            "local"
          ],
          "type": "string"
        },
        "state": {
          "items": {
            "enum": [
              "AA",
              "AE",
              "AK",
              "AL",
              "AP",
              "AR",
              "AS",
              "AZ",
              "CA",
              "CO",
              "CT",
              "DC",
              "DE",
              "FL",
              "FM",
              "GA",
              "GU",
              "HI",
              "IA",
              "ID",
              "IL",
              "IN",
              "KS",
              "KY",
              "LA",
              "MA",
              "MD",
              "ME",
              "MH",
              "MI",
              "MN",
              "MO",
              "MP",
              "MS",
              "MT",
              "MX",
              "NC",
              "ND",
              "NE",
              "NH",
              "NJ",
              "NM",
              "NV",
              "NY",
              "OH",
              "OK",
              "OR",
              "PA",
              "PR",
              "PW",
              "RI",
              "SC",
              "SD",
              "TN",
              "TX",
              "UT",
              "VA",
              "VI",
              "VT",
              "WA",
              "WI",
              "WV",
              "WY",
              "AB",
              "BC",
              "MB",
              "NB",
              "NL",
              "NS",
              "NT",
              "NU",
              "ON",
              "PE",
              "QC",
              "SK",
              "YT",
              "USA",
              "CAN"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "team_preference": {
          "enum": [
            "single",
            "team"
          ],
          "type": "string"
        },
        "trailer_experience": {
          "items": {
            "enum": [
              "V",
              "R",
              "F",
              "AC",
              "HOP",
              "TANK",
              "S"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "state"
      ],
      "type": "object"
    },
    "social_login_credentials": {
      "properties": {
        "create_missing_account": {
          "default": false,
          "description": "If true the endpoint will create the users account in case it doesnt already exist.",
          "type": "boolean"
        },
        "service": {
          "description": "Takes a social login service name,",
          "enum": [
            "google",
            "facebook",
            "facebook-code",
            "apple"
          ],
          "type": "string"
        },
        "token": {
          "description": " The token returned by the social login service. For Google the value expected is : data.code For Facebook the value expected is : data.authResponse.accessToken For Apple the value expected is : data.detail.authorization.id_token",
          "type": "string"
        }
      },
      "required": [
        "service",
        "token"
      ],
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    },
    "social-login-end-user-token": {
      "properties": {
        "email": {
          "description": "The email address that was used to login.",
          "example": "example@directfreight.com",
          "type": "string"
        },
        "end-user-token": {
          "description": "On success and end-user-token is returned.",
          "example": "XX423ASOEUHT4AESUTH",
          "type": "string"
        },
        "new_account": {
          "description": "Indicates if a new account was created or an existing one was used to login.",
          "example": false,
          "type": "boolean"
        }
      },
      "type": "object",
      "x-restlet": {
        "section": "END_USER_AUTHENTICATIONS"
      }
    },
    "trailers": {
      "items": {
        "enum": [
          "V",
          "R",
          "F",
          "AC",
          "HOP",
          "TANK",
          "S"
        ],
        "type": "string"
      },
      "maxItems": 6,
      "minItems": 1,
      "type": "array",
      "x-restlet": {
        "section": "common_definitions"
      }
    }
  }
}
